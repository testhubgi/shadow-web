{"version":3,"file":"static/js/1570.69c8b448.chunk.js","mappings":"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","sources":["components/ShadowPagination.js","components/svg/DropDownIcon.js","components/svg/TimeIcon.js","store/actions/driveroute.js","components/svg/HomeIcon.js","components/svg/CarIcon.js","pages/private/account/DriveRoutes.js","pages/private/account/PageHeader.js","../node_modules/native-base/lib/module/utils/accessibilityUtils.ts","../node_modules/native-base/lib/module/components/composites/FormControl/useFormControl.tsx","../node_modules/native-base/lib/module/utils/resolveStackStyleInput.ts","../node_modules/native-base/lib/module/components/primitives/Input/Input.tsx","../node_modules/native-base/lib/module/components/primitives/Input/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { HStack, Select, Center, Pressable, Text } from \"native-base\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { vh, vw } from \"../util\";\r\nimport PrevIcon from \"./svg/PrevIcon\";\r\nimport NextIcon from \"./svg/NextIcon\";\r\nimport Colors from \"../constants/Colors\";\r\nimport DropDownIcon from \"./svg/DropDownIcon\";\r\n\r\nconst ShadowPagination = ({\r\n  total = 1,\r\n  limit = 10,\r\n  setLimit,\r\n  setPage,\r\n  page,\r\n  setIsLoading,\r\n  style,\r\n  view = true,\r\n  \r\n}) => {\r\n  const pageCount = Math.ceil(total / limit);\r\n\r\n  const onPageChange = (p) => {\r\n    setPage(p.selected + 1);\r\n  };\r\n\r\n  const MyPaginate = styled(ReactPaginate).attrs({\r\n    activeClassName: \"active\", // default to \"disabled\"\r\n  })`\r\n    margin-bottom: 1rem;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-end;\r\n    list-style-type: none;\r\n    padding: 0 1rem;\r\n    li a {\r\n      border-radius: 4px;\r\n      padding: 0.1rem 1rem;\r\n      cursor: pointer;\r\n      color: rgba(102, 102, 102, 1);\r\n      font-family: \"Poppins_medium\";\r\n      font-size: ${vw(15)};\r\n    }\r\n    li.previous a,\r\n    li.next a,\r\n    li.break a {\r\n      border-color: transparent;\r\n      color: rgba(102, 102, 102, 1);\r\n      font-family: \"Poppins_medium\";\r\n      font-size: ${vw(15)};\r\n    }\r\n    li.active a {\r\n      background-color: #7d2be9;\r\n      border-color: transparent;\r\n      color: white;\r\n      min-width: 24px;\r\n      font-family: \"Poppins_medium\";\r\n      font-size: ${vw(15)};\r\n    }\r\n    li.disabled a {\r\n      color: rgba(102, 102, 102, 0.5);\r\n    }\r\n    li.disable,\r\n    li.disabled a {\r\n      cursor: default;\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <HStack\r\n      style={{\r\n        boxShadow: \"0px 0px 15px rgba(0, 0, 0, 0.1)\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        height: vh(60),\r\n        backgroundColor: \"white\", //\"rgba(247, 248, 250, 1)\",\r\n        ...style,\r\n      }}\r\n    >\r\n      {view ? (\r\n        <HStack style={{ alignItems: \"center\", paddingHorizontal: vh(20) }}>\r\n          <Text\r\n            style={{\r\n              fontFamily: \"Poppins_medium\",\r\n              fontSize: vw(15),\r\n              color: \"rgba(102, 102, 102, 1)\",\r\n              marginRight: vw(10),\r\n            }}\r\n          >\r\n            View\r\n          </Text>\r\n          <Select\r\n            outlineColor={\"rgba(0,0,0.0.15)\"}\r\n            outlineStyle={{\r\n              borderWidth: vh(2),\r\n            }}\r\n            variant='outline'\r\n            selectedValue={parseInt(limit)}\r\n            style={{\r\n              width: vw(50),\r\n            }}\r\n            onValueChange={(v) => {\r\n              setPage(1);\r\n              setLimit(v);\r\n            }}\r\n            dropdownIcon={<DropDownIcon />}\r\n          >\r\n            <Select.Item label={\"1\"} value={1} />\r\n            <Select.Item label={\"5\"} value={5} />\r\n            <Select.Item label={\"10\"} value={10} />\r\n            <Select.Item label={\"20\"} value={20} />\r\n            <Select.Item label={\"30\"} value={30} />\r\n            <Select.Item label={\"40\"} value={40} />\r\n            <Select.Item label={\"50\"} value={50} />\r\n            <Select.Item label={\"100\"} value={100} />\r\n          </Select>\r\n          <Text\r\n            style={{\r\n              fontFamily: \"Poppins_medium\",\r\n              fontSize: vw(15),\r\n              color: \"rgba(102, 102, 102, 1)\",\r\n              marginLeft: vw(10),\r\n            }}\r\n          >\r\n            per page\r\n          </Text>\r\n        </HStack>\r\n      ) : (\r\n        <HStack></HStack>\r\n      )}\r\n      <MyPaginate\r\n        breakLabel='...'\r\n        nextLabel='Next >'\r\n        onPageChange={onPageChange}\r\n        pageRangeDisplayed={3}\r\n        marginPagesDisplayed={2}\r\n        pageCount={pageCount}\r\n        previousLabel='< Previous'\r\n        renderOnZeroPageCount={null}\r\n        forcePage={page - 1}\r\n      />\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShadowPagination);\r\n","import * as React from \"react\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\nimport { vh, vw } from \"../../util\";\r\n\r\nconst DropDownIcon = (props) => (\r\n  <Svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    viewBox='0 0 24 24'\r\n    width={vh(24)}\r\n    height={vw(24)}\r\n    {...props}\r\n  >\r\n    <Path data-name='Rectangle 287' fill='none' d='M0 0h24v24H0z' />\r\n    <Path\r\n      data-name='Path 149'\r\n      d='m12 12.682 3.708-3.717 1.062 1.062L12 14.8l-4.77-4.773 1.062-1.062Z'\r\n      fill={props.fill || \"#666\"}\r\n    />\r\n  </Svg>\r\n);\r\n\r\nexport default DropDownIcon;\r\n","import * as React from \"react\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\n\r\nconst TimeIcon = ({ fill }) => (\r\n  <Svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    viewBox='0 0 24 24'\r\n    width={24}\r\n    height={24}\r\n  >\r\n    <Path data-name='Rectangle 243' fill='none' d='M0 0h24v24H0z' />\r\n    <Path\r\n      data-name='Path 10109'\r\n      d='M12 18.264a6.6 6.6 0 0 1-2.592-.52 6.58 6.58 0 0 1-2.124-1.428 6.58 6.58 0 0 1-1.428-2.124 6.6 6.6 0 0 1-.52-2.592 6.6 6.6 0 0 1 .52-2.592 6.58 6.58 0 0 1 1.428-2.124 6.58 6.58 0 0 1 2.124-1.428A6.6 6.6 0 0 1 12 4.936a6.6 6.6 0 0 1 2.592.52 6.58 6.58 0 0 1 2.124 1.428 6.58 6.58 0 0 1 1.428 2.124 6.6 6.6 0 0 1 .52 2.592 6.6 6.6 0 0 1-.52 2.592 6.58 6.58 0 0 1-1.428 2.124 6.58 6.58 0 0 1-2.124 1.428 6.6 6.6 0 0 1-2.592.52Zm0-1.328a5.181 5.181 0 0 0 2.072-.424 5.224 5.224 0 0 0 1.7-1.14 5.224 5.224 0 0 0 1.14-1.7 5.181 5.181 0 0 0 .424-2.072 5.181 5.181 0 0 0-.424-2.072 5.224 5.224 0 0 0-1.14-1.7 5.224 5.224 0 0 0-1.7-1.14A5.181 5.181 0 0 0 12 6.264a5.181 5.181 0 0 0-2.072.424 5.224 5.224 0 0 0-1.7 1.14 5.224 5.224 0 0 0-1.14 1.7 5.181 5.181 0 0 0-.424 2.072 5.181 5.181 0 0 0 .424 2.072 5.224 5.224 0 0 0 1.14 1.7 5.224 5.224 0 0 0 1.7 1.14 5.181 5.181 0 0 0 2.072.424Zm.664-5.336h2.672v1.336h-4V8.264h1.328Z'\r\n      fill={fill || \"#686868\"}\r\n    />\r\n  </Svg>\r\n);\r\n\r\nexport default TimeIcon;\r\n","import {\r\n  API_URL,\r\n  CHAT_SERVER,\r\n  DRIVE_SERVER,\r\n  getUser,\r\n} from \"../../constants/Config\";\r\n// import _ from \"lodash\";\r\nimport {\r\n  computeDestinationPoint,\r\n  getDistance,\r\n  getRhumbLineBearing,\r\n} from \"geolib\";\r\nimport {\r\n  SET_ROUTE,\r\n  SET_ROUTES,\r\n  // SET_POINTS,\r\n  SET_BGDATA,\r\n  SET_DRIVEROUTE,\r\n  DELETE_DRIVEROUTE,\r\n  SET_PROGRESS,\r\n  SET_ANIMATED_POINTS,\r\n  SET_FOLLOWED_POINTS,\r\n} from \"../events\";\r\n\r\nexport const fetchPoints = (route) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const { token } = getUser();\r\n      const response = await fetch(`${API_URL}/driveroutes/${route}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n\r\n      const resData = await response.json();\r\n\r\n      if (resData.data) {\r\n        // console.log(resData.data)\r\n        // dispatch({\r\n        //   type: SET_POINTS,\r\n        //   data: resData.data,\r\n        // });\r\n      }\r\n      // console.log(resData.data)\r\n      return resData.data;\r\n    } catch (err) {\r\n      // send to custom analytics server\r\n      console.log(\"Error \", err);\r\n      throw err;\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchFollowedPoints = async (user) => {\r\n  await sleep(500);\r\n  try {\r\n    const response = await fetch(`${DRIVE_SERVER}/followedpoints/${user}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        // Authorization: \"Bearer \" + token,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Something went wrong!\");\r\n    }\r\n\r\n    const resData = await response.json();\r\n    // console.log(resData.data)\r\n\r\n    // if (resData.data) {\r\n    //   // dispatch(deleteDriveRoute({ user }));\r\n    //   // dispatch(setDriveRoute(resData.data));\r\n    //   delete global.gettingfolloweduser;\r\n    // }\r\n    // console.log(resData.data)\r\n    return resData.data;\r\n  } catch (err) {\r\n    // send to custom analytics server\r\n    console.log(\"Error \", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const fetchReconnectionData = async (data) => {\r\n  try {\r\n    const { token } = getUser();\r\n    const body = JSON.stringify(data);\r\n    const response = await fetch(`${DRIVE_SERVER}/reconn`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n      body,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\"Something went wrong!\");\r\n    }\r\n    const resData = await response.json();\r\n    return resData.data;\r\n  } catch (err) {\r\n    console.log(\"fetchReconnectionData Error \", err.message);\r\n    throw err.message;\r\n  }\r\n};\r\n\r\n// const getUnique = (arr, comp) => {\r\n//   const unique = arr\r\n//     .map((e) => e[comp])\r\n\r\n//     // store the keys of the unique objects\r\n//     .map((e, i, final) => final.indexOf(e) === i && i)\r\n\r\n//     // eliminate the dead keys & store unique objects\r\n//     .filter((e) => arr[e])\r\n//     .map((e) => arr[e]);\r\n\r\n//   return unique;\r\n// };\r\n\r\nexport const createRoute = (data) => {\r\n  return async (dispatch, getState) => {\r\n    // any async code you want!\r\n    const { token } = getUser();\r\n    // console.log(token)\r\n    const body = JSON.stringify(data);\r\n    try {\r\n      const response = await fetch(`${API_URL}/driveroutes/add`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n        body,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n\r\n      const resData = await response.json();\r\n\r\n      // dispatch({\r\n      //   type: SET_ROUTES,\r\n      //   data: resData.data ? resData.data : [],\r\n      //   total: resData.count,\r\n      // });\r\n      return resData.data;\r\n    } catch (err) {\r\n      // send to custom analytics server\r\n      console.log(\"Error \", err);\r\n      throw err;\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchDriveRoutes = (page = 1, limit = 20) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const { token } = getUser();\r\n      const body = JSON.stringify({\r\n        skip: page === 1 ? 0 : (page - 1) * limit,\r\n        limit,\r\n        sort: { _id: -1 },\r\n        fields: {\r\n          _id: 1,\r\n          distance: 1,\r\n          time: 1,\r\n          properties: 1,\r\n          created: 1,\r\n          \"driver._id\": 1,\r\n          \"driver.firstname\": 1,\r\n          \"driver.lastname\": 1,\r\n        },\r\n      });\r\n\r\n      const response = await fetch(`${API_URL}/driveroutes/get`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n        body,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n\r\n      const resData = await response.json();\r\n\r\n      // console.log(resData.data);\r\n\r\n      dispatch({\r\n        type: SET_ROUTES,\r\n        data: resData.data ? resData.data : [],\r\n        total: resData.count,\r\n      });\r\n      return resData.count;\r\n    } catch (err) {\r\n      // send to custom analytics server\r\n      console.log(\"Error \", err);\r\n      throw err;\r\n    }\r\n  };\r\n};\r\n\r\nexport const uploadPicture = (picture, setProgress) => {\r\n  return async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const drivers = getState().driveroute.drivers;\r\n    const { route } = drivers[userId];\r\n    const token = getState().auth.token;\r\n    const formData = new FormData();\r\n    formData.append(\"_id\", route);\r\n    formData.append(\"default\", true);\r\n    formData.append(\"picture\", {\r\n      type: \"image/jpg\",\r\n      uri: picture,\r\n      name: \"dr_\" + route + \".jpg\",\r\n    });\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\"POST\", `${API_URL}/driveroutes/upload/picture`, true);\r\n    xhr.addEventListener(\r\n      \"progress\",\r\n      function (e) {\r\n        var done = e.position || e.loaded,\r\n          total = e.totalSize || e.total;\r\n        dispatch({\r\n          type: SET_PROGRESS,\r\n          progress: Math.floor((done / total) * 1000) / 10,\r\n        });\r\n        console.log(\r\n          \"xhr progress: \" + Math.floor((done / total) * 1000) / 10 + \"%\"\r\n        );\r\n      },\r\n      false\r\n    );\r\n    if (xhr.upload) {\r\n      xhr.upload.onprogress = function (e) {\r\n        var done = e.position || e.loaded,\r\n          total = e.totalSize || e.total;\r\n        setProgress(Math.floor((done / total) * 1000) / 10);\r\n        // console.log(\r\n        //   'xhr.upload progress: ' +\r\n        //     done +\r\n        //     ' / ' +\r\n        //     total +\r\n        //     ' = ' +\r\n        //     Math.floor((done / total) * 1000) / 10 +\r\n        //     '%'\r\n        // );\r\n      };\r\n    }\r\n    xhr.setRequestHeader(\"Content-Type\", \"multipart/form-data\");\r\n    xhr.setRequestHeader(\"Authorization\", `Bearer ${token}`);\r\n    xhr.onreadystatechange = function () {\r\n      if (this.readyState === 4 && this.status === 200) {\r\n        // console.log(this.responseText);\r\n        console.log(\"Image uploaded successfully!\");\r\n      } else {\r\n        // console.log(this.responseText);\r\n      }\r\n    };\r\n    xhr.send(formData);\r\n  };\r\n};\r\n\r\nexport const verifyTtoken = () => {\r\n  return async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const token = getState().auth.token;\r\n    try {\r\n      const response = await fetch(`${API_URL}/users/${userId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n\r\n      const resData = await response.json();\r\n      console.log(\"resData\", resData);\r\n      return resData.success;\r\n    } catch (err) {\r\n      // send to custom analytics server\r\n      console.log(\"Error \", err);\r\n      throw err;\r\n    }\r\n  };\r\n};\r\n\r\nexport const postBgData = (data) => {\r\n  return async (dispatch, getState) => {\r\n    // any async code you want!\r\n\r\n    if (data && !data.position) {\r\n      console.log(\"No Background Data found\");\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${CHAT_SERVER}/bg`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n\r\n      // const resData = await response.json();\r\n    } catch (err) {\r\n      // send to custom analytics server\r\n      console.log(\"Error \", err);\r\n      throw err;\r\n    }\r\n  };\r\n};\r\n\r\nexport const setRoute = (data) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({\r\n      type: SET_ROUTE,\r\n      data,\r\n    });\r\n  };\r\n};\r\n\r\nexport const setDriveRoute = (data) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({\r\n      type: SET_DRIVEROUTE,\r\n      data,\r\n    });\r\n  };\r\n};\r\n\r\nfunction sleep(ms) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\n\r\n// const animatePoints = async (dispatch, start, end, distance = 10) => {\r\n//   const d = getDistance(start.location, end.location);\r\n//   if (d > 0) {\r\n//     const dd = Math.floor(d / distance);\r\n//     if (dd > 1) {\r\n//       for (let c = 0; c <= d; c += dd) {\r\n//         const bearing = getRhumbLineBearing(start.location, end.location);\r\n//         const cp = computeDestinationPoint(start.location, dd, bearing);\r\n//         start = { ...start, location: cp };\r\n//         dispatch({\r\n//           type: SET_ANIMATED_POINTS,\r\n//           point: cp,\r\n//         });\r\n//         await sleep(10);\r\n//         // points.push(cp);\r\n//       }\r\n//     }\r\n//     dispatch({\r\n//       type: SET_ANIMATED_POINTS,\r\n//       point: end.location,\r\n//     });\r\n//     // points.push(end);\r\n//   } else {\r\n//     dispatch({\r\n//       type: SET_ANIMATED_POINTS,\r\n//       point: start.location,\r\n//     });\r\n//   }\r\n// };\r\n\r\nconst animateFollowedPoints = async (dispatch, start, end, distance = 20) => {\r\n  // const points = [];\r\n  const d = getDistance(start.location, end.location);\r\n  if (d > 0) {\r\n    const dd = Math.floor(d / distance);\r\n    if (dd > 1) {\r\n      for (let c = 0; c <= d; c += dd) {\r\n        const bearing = getRhumbLineBearing(start.location, end.location);\r\n        const cp = computeDestinationPoint(start.location, dd, bearing);\r\n        start = { ...start, location: cp };\r\n        dispatch({\r\n          type: SET_FOLLOWED_POINTS,\r\n          point: cp,\r\n        });\r\n        await sleep(0);\r\n        // points.push(cp);\r\n      }\r\n    }\r\n    dispatch({\r\n      type: SET_FOLLOWED_POINTS,\r\n      point: end.location,\r\n    });\r\n    // points.push(end);\r\n  } else {\r\n    dispatch({\r\n      type: SET_FOLLOWED_POINTS,\r\n      point: start.location,\r\n    });\r\n  }\r\n};\r\n\r\nexport const setAnimatedPoints = (data) => {\r\n  return async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const driver = data.user === userId ? data : null;\r\n    if (driver) {\r\n      const points = driver.points;\r\n      dispatch({\r\n        type: SET_ANIMATED_POINTS,\r\n        point: points[0].location,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const setFollowedAnimatedPoints = (data) => {\r\n  return async (dispatch, getState) => {\r\n    const prevPoints = getState().driveroute.followedpoints;\r\n    const prevLen = prevPoints.length;\r\n    const driver = data.user === global.followedUser ? data : null;\r\n\r\n    if (driver) {\r\n      const points = driver.points;\r\n      const pointA = prevLen > 0 ? prevPoints[prevLen - 1] : null;\r\n      let pointB = points[0];\r\n      if (points.length > 1) {\r\n        for (let i = 0; i <= points.length; i++) {\r\n          if (points[i + 1]) {\r\n            animateFollowedPoints(dispatch, points[i], points[i + 1]);\r\n          } else {\r\n            dispatch({\r\n              type: SET_FOLLOWED_POINTS,\r\n              point: points[i].location,\r\n            });\r\n          }\r\n        }\r\n      } else {\r\n        if (pointA) {\r\n          animateFollowedPoints(dispatch, { location: pointA }, pointB);\r\n        } else {\r\n          dispatch({\r\n            type: SET_FOLLOWED_POINTS,\r\n            point: pointB.location,\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteDriveRoute = (data) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({\r\n      type: DELETE_DRIVEROUTE,\r\n      data,\r\n    });\r\n  };\r\n};\r\n\r\nexport const setBgData = (data) => {\r\n  return async (dispatch, getState) => {\r\n    dispatch({\r\n      type: SET_BGDATA,\r\n      data,\r\n    });\r\n  };\r\n};\r\n","import * as React from \"react\";\r\n\r\nconst HomeIcon = ({ fill }) => (\r\n  <svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    viewBox='0 0 24 24'\r\n    width={24}\r\n    height={24}\r\n  >\r\n    <path data-name='Rectangle 243' fill='none' d='M0 0h24v24H0z' />\r\n    <path\r\n      data-name='Path 10169'\r\n      d='M12.664 16.264h4v-6.016L12 6.624l-4.664 3.624v6.016h4v-4h1.328Zm5.336.672a.639.639 0 0 1-.2.464.639.639 0 0 1-.468.2H6.664a.639.639 0 0 1-.464-.2.639.639 0 0 1-.2-.464V9.928a.66.66 0 0 1 .068-.292.677.677 0 0 1 .188-.236l5.336-4.152A.649.649 0 0 1 12 5.112a.649.649 0 0 1 .408.136L17.744 9.4a.677.677 0 0 1 .188.236.66.66 0 0 1 .068.292Z'\r\n      fill={fill || \"#7d2be9\"}\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default HomeIcon;\r\n","import * as React from \"react\";\r\n\r\nconst CarIcon = ({ fill }) => (\r\n  <svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    viewBox='0 0 24 24'\r\n    width={24}\r\n    height={24}\r\n  >\r\n    <path data-name='Rectangle 243' fill='none' d='M0 0h24v24H0z' />\r\n    <path\r\n      data-name='Path 10170'\r\n      d='M6.664 12.264V15.6h10.672v-3.336Zm1.08-1.328h8.512a.652.652 0 0 0 .32-.084.657.657 0 0 0 .244-.232.661.661 0 0 0 .1-.324.63.63 0 0 0-.072-.328L16 8.264H8l-.848 1.7a.63.63 0 0 0-.072.336.66.66 0 0 0 .1.324.657.657 0 0 0 .244.232.652.652 0 0 0 .32.08Zm10.92 1.664v5a.642.642 0 0 1-.192.472.642.642 0 0 1-.472.192h-.664a.655.655 0 0 1-.476-.192.635.635 0 0 1-.2-.472v-.664H7.336v.664a.635.635 0 0 1-.2.472.655.655 0 0 1-.476.192H6a.642.642 0 0 1-.472-.192.642.642 0 0 1-.192-.472v-5l-.836-.208a.647.647 0 0 1-.364-.236.653.653 0 0 1-.136-.412v-.48a.316.316 0 0 1 .1-.232.326.326 0 0 1 .24-.1h1l1.632-3.264a1.276 1.276 0 0 1 .488-.54 1.322 1.322 0 0 1 .7-.2h1.176V5.6h2v1.336h1.328V5.6h2v1.336h1.176a1.322 1.322 0 0 1 .7.2 1.276 1.276 0 0 1 .488.54l1.636 3.26h1a.326.326 0 0 1 .24.1.316.316 0 0 1 .1.232v.48a.653.653 0 0 1-.14.412.647.647 0 0 1-.364.236Zm-11.328.336a3.212 3.212 0 0 1 3.12 1.5.371.371 0 0 1 .04.168.322.322 0 0 1-.044.164.316.316 0 0 1-.124.12.344.344 0 0 1-.168.044H8a.635.635 0 0 1-.472-.2.655.655 0 0 1-.192-.476Zm9.328 0v1.328a.655.655 0 0 1-.192.476.635.635 0 0 1-.472.2h-2.16a.322.322 0 0 1-.164-.044.356.356 0 0 1-.124-.12.3.3 0 0 1-.052-.168.371.371 0 0 1 .04-.168 3.2 3.2 0 0 1 3.124-1.504Z'\r\n      fill={fill || \"#7d2be9\"}\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default CarIcon;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  Center,\r\n  Text,\r\n  Pressable,\r\n  FlatList,\r\n  Spinner,\r\n  HStack,\r\n  Image,\r\n  Avatar,\r\n  VStack,\r\n} from \"native-base\";\r\nimport moment from \"moment-timezone\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport Colors from \"../../../constants/Colors\";\r\nimport { CDN, API_URL, getUser } from \"../../../constants/Config\";\r\nimport * as driveroutesActions from \"../../../store/actions/driveroute\";\r\nimport { vh, vw } from \"../../../util\";\r\nimport HomeIcon from \"../../../components/svg/HomeIcon\";\r\nimport PageHeader from \"./PageHeader\";\r\nimport CarIcon from \"../../../components/svg/CarIcon\";\r\nimport TimeIcon from \"../../../components/svg/TimeIcon\";\r\nimport ShadowPagination from \"../../../components/ShadowPagination\";\r\n\r\nconst DrivingRoutes = (props) => {\r\n  const { routes, total } = useSelector((state) => state.driveroute);\r\n  const [limit, setLimit] = useState(20);\r\n  const [page, setPage] = useState(1);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isMapLoading, setIsMapLoading] = useState(false);\r\n\r\n  const [showMap, setShowMap] = useState(null);\r\n  const [points, setPoints] = useState([]);\r\n  const [route, setRoute] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const _getData = useCallback(async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      await dispatch(\r\n        driveroutesActions.fetchDriveRoutes(parseInt(page), parseInt(limit))\r\n      );\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      // setError(err.message);\r\n    }\r\n  }, [dispatch, setIsLoading, page, limit]);\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    if (!unmounted) {\r\n      _getData();\r\n    }\r\n\r\n    return () => {\r\n      unmounted = true;\r\n    };\r\n  }, [page, limit, _getData]);\r\n\r\n  useEffect(() => {\r\n    const getPoints = async (route) => {\r\n      try {\r\n        const { token } = getUser();\r\n        const response = await fetch(`${API_URL}/driveroutes/${route}`, {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + token,\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          // throw new Error(\"Something went wrong!\");\r\n          setIsMapLoading(false);\r\n          return;\r\n        }\r\n\r\n        const resData = await response.json();\r\n        // console.log(resData)\r\n        const p =\r\n          resData.data && resData.data.points && resData.data.points.length\r\n            ? resData.data.points.map((p) => p.location)\r\n            : [];\r\n        setPoints(p);\r\n        if (p.length > 0) {\r\n          // setInitialCamera({\r\n          //   center: p[0],\r\n          //   pitch: 0,\r\n          //   heading: 0,\r\n          //   altitude: 0,\r\n          //   zoom: 19,\r\n          //   type: \"standard\",\r\n          // });\r\n        }\r\n        setShowMap(showMap !== route ? route : null);\r\n        setIsMapLoading(false);\r\n      } catch (err) {\r\n        // send to custom analytics server\r\n        console.log(\"Error \", err);\r\n        setIsMapLoading(false);\r\n        throw err;\r\n      }\r\n    };\r\n\r\n    if (route) {\r\n      getPoints(route);\r\n    }\r\n  }, [route, showMap]);\r\n\r\n  useEffect(() => {}, [points]);\r\n\r\n  const cardwidth = 340;\r\n  let cols = Math.floor((window.screen.width - 295) / cardwidth);\r\n  if (cols === 0) {\r\n    cols = 1;\r\n  }\r\n\r\n  const _renderItem = ({ item }) => {\r\n    const driver = item.driver[0];\r\n    const createdUser = item.createdUser && item.createdUser;\r\n    // const fullname =\r\n    //   createdUser && createdUser.firstname + \" \" + createdUser.lastname;\r\n    const ui =\r\n      createdUser && createdUser.pic && createdUser.pic.id\r\n        ? createdUser.pic.id\r\n        : \"0\";\r\n\r\n    const userUri = `${CDN}/users/${ui}`;\r\n    const drUri = `${CDN}/driveroutes/${item._id}`;\r\n\r\n    return (\r\n      <VStack\r\n        style={{\r\n          borderRadius: vw(10),\r\n          boxShadow: \"0px 3px 10px #0000001A\",\r\n          height: vh(323),\r\n          width:\r\n            cols === 1\r\n              ? \"95%\"\r\n              : vw((window.screen.width - 320 - cols * 30) / cols),\r\n          marginHorizontal: vh(15),\r\n          marginVertical: vh(15),\r\n          backgroundColor: \"white\",\r\n        }}\r\n      >\r\n        <VStack\r\n          style={\r\n            {\r\n              // boxShadow: \"0px 1px 10px #0000001A\",\r\n            }\r\n          }\r\n        >\r\n          {showMap === item._id ? (\r\n            <></>\r\n          ) : (\r\n            // <MapView\r\n            //   initialCamera={initialCamera}\r\n            //   camera={initialCamera}\r\n            //   provider={PROVIDER_GOOGLE}\r\n            //   minZoomLevel={3}\r\n\r\n            //   style={{ ...styles.map, height: 300, width: \"100%\" }}\r\n            //   onPress={(e) => {\r\n            //     e.stopPropagation();\r\n            //     setShowMap(showMap !== item._id ? item._id : null);\r\n            //     setRoute(null);\r\n            //     setPoints([]);\r\n            //   }}\r\n            //   fitToElements\r\n            // >\r\n            //   <Polyline\r\n            //     geodesic\r\n            //     // ref={trail}\r\n            //     coordinates={points || []}\r\n            //     strokeColor={Colors.primary}\r\n            //     strokeWidth={5}\r\n            //   />\r\n            // </MapView>\r\n            <Pressable\r\n              style={{ height: vh(200), width: \"100%\", flex: 1 }}\r\n              onPress={(e) => {\r\n                setRoute(item._id);\r\n                setPoints([]);\r\n                setIsMapLoading(true);\r\n              }}\r\n            >\r\n              {item._id === route && isMapLoading ? (\r\n                <Center flex={1}>\r\n                  <Spinner size={\"sm\"} color={Colors.primary} />\r\n                </Center>\r\n              ) : (\r\n                <Image\r\n                  source={{ uri: drUri }}\r\n                  alt={\"Map not found\"}\r\n                  style={{\r\n                    height: vh(200),\r\n                    width: \"100%\",\r\n                    flex: 1,\r\n                    borderTopLeftRadius: vh(10),\r\n                    borderTopRightRadius: vh(10),\r\n                  }}\r\n                />\r\n              )}\r\n            </Pressable>\r\n          )}\r\n        </VStack>\r\n        <HStack\r\n          style={{\r\n            justifyContent: \"flex-start\",\r\n            height: vh(36),\r\n            marginTop: vh(10),\r\n          }}\r\n        >\r\n          <Avatar\r\n            style={{\r\n              width: vw(36),\r\n              height: vh(36),\r\n              marginRight: vw(15),\r\n              marginLeft: vw(20),\r\n              borderColor: \"white\",\r\n              borderWidth: vw(2),\r\n            }}\r\n            source={{\r\n              uri: userUri,\r\n            }}\r\n          >\r\n            JA\r\n          </Avatar>\r\n\r\n          <Text\r\n            style={{\r\n              height: vh(36),\r\n              lineHeight: vh(36),\r\n              fontSize: vw(17),\r\n              fontFamily: \"Poppins_medium\",\r\n              color: \"rgba(0,0,0,1)\",\r\n            }}\r\n          >\r\n            {driver.firstname + \" \" + driver.lastname}\r\n          </Text>\r\n        </HStack>\r\n        <Text\r\n          style={{\r\n            marginRight: vw(15),\r\n            marginLeft: vw(20),\r\n            color: \"#919191\",\r\n            fontSize: vw(13),\r\n            marginVertical: vh(11),\r\n            fontFamily: \"Poppins\",\r\n          }}\r\n        >\r\n          {moment(item.created).format(\"MM/DD/YYYY HH:mm\")}\r\n        </Text>\r\n        <HStack\r\n          style={{\r\n            marginRight: vw(15),\r\n            marginLeft: vw(20),\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <HStack>\r\n            <HomeIcon />\r\n            <Text\r\n              style={{\r\n                color: \"#919191\",\r\n                fontSize: vw(15),\r\n                fontFamily: \"Poppins_medium\",\r\n                marginTop: vh(1),\r\n                marginLeft: vw(4),\r\n              }}\r\n            >\r\n              {item.properties.length}\r\n            </Text>\r\n          </HStack>\r\n          <HStack>\r\n            <CarIcon />\r\n            <Text\r\n              style={{\r\n                color: \"#919191\",\r\n                fontSize: vw(15),\r\n                fontFamily: \"Poppins_medium\",\r\n                marginTop: vh(1),\r\n                marginLeft: vw(4),\r\n              }}\r\n            >\r\n              {\" \" + item.distance.toFixed(2) + \" mi   \"}\r\n            </Text>\r\n          </HStack>\r\n          <HStack>\r\n            <TimeIcon fill={\"#7d2be9\"} />\r\n            <Text\r\n              style={{\r\n                color: \"#919191\",\r\n                fontSize: vw(15),\r\n                fontFamily: \"Poppins_medium\",\r\n                marginTop: vh(1),\r\n                marginLeft: vw(4),\r\n              }}\r\n            >\r\n              {\" \" + item.time + \" min\"}\r\n            </Text>\r\n          </HStack>\r\n        </HStack>\r\n      </VStack>\r\n    );\r\n  };\r\n\r\n  const NoItemsFound = () => {\r\n    return (\r\n      <Center mt={250} flex={1} style={{ backgroundColor: \"#F7F8FA\" }}>\r\n        <Text>No routes found.</Text>\r\n      </Center>\r\n    );\r\n  };\r\n\r\n  const ph = 100 - parseFloat(vh(125)) + \"vh\";\r\n\r\n  return (\r\n    <VStack style={{ backgroundColor: \"#F7F8FA\" }}>\r\n      <PageHeader\r\n        title='Driving Routes'\r\n        // subtitle={\"Update your photo and personal details here\"}\r\n      />\r\n\r\n      <VStack style={{ minHeight: ph }}>\r\n        {isLoading ? (\r\n          <Center height={\"full\"} justifyContent='center' alignItems='center'>\r\n            <Spinner size='small' color={\"#7D2BE9\"} />\r\n          </Center>\r\n        ) : cols === 1 ? (\r\n          <FlatList\r\n            key={\"list-\" + cols}\r\n            style={{ marginLeft: vw(-10) }}\r\n            _contentContainerStyle={{\r\n              justifyContent: \"space-around\",\r\n              overflow: \"hidden\",\r\n              paddingBottom: vh(20),\r\n            }}\r\n            ListEmptyComponent={<NoItemsFound />}\r\n            data={routes}\r\n            keyExtractor={(item) => item._id}\r\n            renderItem={_renderItem}\r\n            maxToRenderPerBatch={limit}\r\n            initialNumToRender={limit}\r\n          />\r\n        ) : (\r\n          <FlatList\r\n            key={\"list-\" + cols}\r\n            style={{ marginLeft: vw(-10) }}\r\n            _contentContainerStyle={{\r\n              justifyContent: \"space-around\",\r\n              overflow: \"hidden\",\r\n              paddingBottom: vh(20),\r\n            }}\r\n            ListEmptyComponent={<NoItemsFound />}\r\n            data={routes}\r\n            keyExtractor={(item) => item._id}\r\n            renderItem={_renderItem}\r\n            maxToRenderPerBatch={limit}\r\n            initialNumToRender={limit}\r\n            columnWrapperStyle={{\r\n              justifyContent: \"flex-start\",\r\n            }}\r\n            numColumns={cols}\r\n          />\r\n        )}\r\n        {total > limit && (\r\n          <ShadowPagination\r\n            total={total}\r\n            limit={limit}\r\n            page={page}\r\n            setLimit={setLimit}\r\n            setPage={setPage}\r\n          />\r\n        )}\r\n      </VStack>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default DrivingRoutes;\r\n","import React from \"react\";\r\nimport { HStack, VStack, Text } from \"native-base\";\r\nimport { vh, vw } from \"../../../util\";\r\n\r\nconst PageHeader = ({ title, subtitle, rightElement, noborder = false }) => {\r\n  let bottomBorder = {\r\n    borderBottomColor: \"rgba(0,0,0, 0.15)\",\r\n    borderBottomWidth: vw(1.5),\r\n    marginBottom: vh(20),\r\n  };\r\n  if (noborder) {\r\n    bottomBorder = {};\r\n  }\r\n  return (\r\n    <HStack\r\n      style={{ paddingBottom: vh(16), ...bottomBorder }}\r\n      justifyContent={\"space-between\"}\r\n    >\r\n      <VStack>\r\n        <Text\r\n          style={{\r\n            fontSize: vw(24),\r\n            color: \"#303030\",\r\n            fontFamily: \"Poppins_medium\",\r\n          }}\r\n        >\r\n          {title}\r\n        </Text>\r\n        <Text\r\n          style={{\r\n            fontSize: vw(13),\r\n            color: \"#666666\",\r\n            fontFamily: \"Poppins\",\r\n          }}\r\n        >\r\n          {subtitle}\r\n        </Text>\r\n      </VStack>\r\n      {rightElement}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","export const ariaAttr = (condition: boolean | undefined) =>\n  condition ? true : undefined;\n","import React from 'react';\nimport { useId } from '@react-native-aria/utils';\nimport omit from 'lodash.omit';\nimport type { IFormControlProps } from './types';\nimport { ariaAttr } from '../../../utils';\nimport { ResponsiveQueryContext } from '../../../utils/useResponsiveQuery/ResponsiveQueryProvider';\nimport { uniqueId } from 'lodash';\n\nexport type IFormControlContext = Omit<\n  ReturnType<typeof useFormControlProvider>,\n  'htmlProps'\n>;\n\nexport const FormControlContext = React.createContext({});\n\nexport function useFormControlProvider(props: IFormControlProps) {\n  const {\n    nativeID: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n\n  let id = uniqueId();\n  const responsiveQueryContext = React.useContext(ResponsiveQueryContext);\n  const disableCSSMediaQueries = responsiveQueryContext.disableCSSMediaQueries;\n\n  if (!disableCSSMediaQueries) {\n    // This if statement technically breaks the rules of hooks, but is safe\n    // because the condition never changes after mounting.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    id = useId();\n  }\n\n  // const id = '';\n  // Generate all the required ids\n  const nativeID = idProp || `field-${id}`;\n\n  const labelId = `${nativeID}-label`;\n  const feedbackId = `${nativeID}-feedback`;\n  const helpTextId = `${nativeID}-helptext`;\n\n  /**\n   * Track whether the `FormErrorMessage` has been rendered.\n   * We use this to append its id the the `aria-describedby` of the `input`.\n   */\n  const [hasFeedbackText, setHasFeedbackText] = React.useState(false);\n\n  /**\n   * Track whether the `FormHelperText` has been rendered.\n   * We use this to append its id the the `aria-describedby` of the `input`.\n   */\n  const [hasHelpText, setHasHelpText] = React.useState(false);\n\n  const context = {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    nativeID,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n  };\n\n  return context;\n}\n\n/**\n * React hook that provides the props that should be spread on to\n * input fields (`input`, `select`, `textarea`, etc.).\n *\n * It provides a convenient way to control a form fields, validation\n * and helper text.\n */\nexport function useFormControl(props: IFormControlProps) {\n  const field = useFormControlContext();\n  const describedBy: any[] = [];\n\n  // Error message must be described first in all scenarios.\n  if (field?.hasFeedbackText) describedBy.push(field?.feedbackId);\n  if (field?.hasHelpText) describedBy.push(field?.helpTextId);\n  const ariaDescribedBy = describedBy.join(' ');\n\n  const cleanProps = omit(props, [\n    'isInvalid',\n    'isDisabled',\n    'isReadOnly',\n    'isRequired',\n  ]);\n\n  return {\n    ...cleanProps,\n    nativeID: props.nativeID ?? field?.nativeID + '-input',\n    disabled: props.isDisabled || field?.isDisabled,\n    readOnly: props.isReadOnly || field?.isReadOnly,\n    required: props.isRequired || field?.isRequired,\n    accessibilityInvalid: ariaAttr(props.isInvalid || field?.isInvalid),\n    accessibilityRequired: ariaAttr(props.isRequired || field?.isRequired),\n    accessibilityReadOnly: ariaAttr(props.isReadOnly || field?.isReadOnly),\n    accessibilityDescribedBy: ariaDescribedBy || undefined,\n  };\n}\n\nexport const useFormControlContext = () => {\n  return (React.useContext(\n    FormControlContext\n  ) as unknown) as IFormControlContext;\n};\n","export const resolveStackStyleInput = (variant: any, color: any) => {\n  if (variant === 'underlined') {\n    return {\n      outlineWidth: '0',\n      boxShadow: `0 1px 0 0 ${color}`,\n    };\n  } else if (variant === 'unstyled') {\n    return {\n      outlineWidth: 0,\n    };\n  } else {\n    return {\n      outlineWidth: '0',\n      boxShadow: `0 0 0 1px ${color}`,\n    };\n  }\n};\n","import React, { memo, forwardRef } from 'react';\nimport type { IInputProps } from './types';\nimport { TextInput } from 'react-native';\nimport { useToken } from '../../../hooks';\nimport { useFormControl } from '../../composites/FormControl';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { useHover } from '@react-native-aria/interactions';\nimport { extractInObject, stylingProps } from '../../../theme/tools/utils';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { mergeRefs, resolveStackStyleInput } from '../../../utils';\nimport { Stack } from '../Stack';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { useResolvedFontFamily } from '../../../hooks/useResolvedFontFamily';\n\nconst StyledInput = makeStyledComponent(TextInput);\n\nconst Input = (\n  {\n    isHovered: isHoveredProp,\n    isFocused: isFocusedProp,\n    onKeyPress,\n    InputLeftElement,\n    InputRightElement,\n    leftElement,\n    rightElement,\n    ...props\n  }: IInputProps,\n  ref: any\n) => {\n  const inputProps = useFormControl({\n    isDisabled: props.isDisabled,\n    isInvalid: props.isInvalid,\n    isReadOnly: props.isReadOnly,\n    isRequired: props.isRequired,\n    nativeID: props.nativeID,\n  });\n  const [isFocused, setIsFocused] = React.useState(false);\n  const handleFocus = (focusState: boolean, callback: any) => {\n    setIsFocused(focusState);\n    callback();\n  };\n\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n\n  const inputThemeProps = {\n    isDisabled: inputProps.disabled,\n    isInvalid: inputProps.accessibilityInvalid,\n    isReadOnly: inputProps.accessibilityReadOnly,\n    isRequired: inputProps.required,\n  };\n\n  const {\n    ariaLabel,\n    accessibilityLabel,\n    type,\n    isFullWidth,\n    isDisabled,\n    isReadOnly,\n    fontFamily,\n    fontWeight,\n    fontStyle,\n    placeholderTextColor,\n    selectionColor,\n    underlineColorAndroid,\n    onFocus,\n    onBlur,\n    wrapperRef,\n    _stack,\n    _input,\n\n    ...resolvedProps\n  } = usePropsResolution(\n    'Input',\n    {\n      ...inputThemeProps,\n      ...props,\n    },\n    {\n      isDisabled: inputThemeProps.isDisabled,\n      isHovered: isHoveredProp || isHovered,\n      isFocused: isFocusedProp || isFocused,\n      isInvalid: inputThemeProps.isInvalid,\n      isReadOnly: inputThemeProps.isReadOnly,\n    }\n  );\n\n  const [layoutProps, nonLayoutProps] = extractInObject(resolvedProps, [\n    ...stylingProps.margin,\n    ...stylingProps.border,\n    ...stylingProps.layout,\n    ...stylingProps.flexbox,\n    ...stylingProps.position,\n    ...stylingProps.background,\n    'shadow',\n    'opacity',\n  ]);\n\n  const resolvedFontFamily = useResolvedFontFamily({\n    fontFamily,\n    fontWeight: fontWeight ?? 400,\n    fontStyle: fontStyle ?? 'normal',\n  });\n  const resolvedPlaceholderTextColor = useToken('colors', placeholderTextColor);\n  const resolvedSelectionColor = useToken('colors', selectionColor);\n  const resolvedUnderlineColorAndroid = useToken(\n    'colors',\n    underlineColorAndroid\n  );\n\n  /**Converting into Hash Color Code */\n  //@ts-ignore\n  resolvedProps.focusOutlineColor = useToken(\n    'colors',\n    resolvedProps.focusOutlineColor\n  );\n  //@ts-ignore\n  resolvedProps.invalidOutlineColor = useToken(\n    'colors',\n    resolvedProps.invalidOutlineColor\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  if (resolvedProps.focusOutlineColor && isFocused) {\n    layoutProps.borderColor = resolvedProps.focusOutlineColor;\n    _stack.style = resolveStackStyleInput(\n      props.variant,\n      resolvedProps.focusOutlineColor\n    );\n  }\n\n  if (resolvedProps.invalidOutlineColor && props.isInvalid) {\n    layoutProps.borderColor = resolvedProps.invalidOutlineColor;\n    _stack.style = resolveStackStyleInput(\n      props.variant,\n      resolvedProps.invalidOutlineColor\n    );\n  }\n\n  return (\n    <Stack\n      {..._stack}\n      {...layoutProps}\n      ref={mergeRefs([_ref, wrapperRef])}\n      isFocused={isFocused}\n    >\n      {InputLeftElement || leftElement ? InputLeftElement || leftElement : null}\n      <StyledInput\n        {...inputProps}\n        secureTextEntry={type === 'password'}\n        accessible\n        accessibilityLabel={ariaLabel || accessibilityLabel}\n        editable={isDisabled || isReadOnly ? false : true}\n        w={isFullWidth ? '100%' : undefined}\n        {...nonLayoutProps}\n        {...resolvedFontFamily}\n        placeholderTextColor={resolvedPlaceholderTextColor}\n        selectionColor={resolvedSelectionColor}\n        underlineColorAndroid={resolvedUnderlineColorAndroid}\n        onKeyPress={(e: any) => {\n          e.persist();\n          onKeyPress && onKeyPress(e);\n        }}\n        onFocus={(e: any) => {\n          handleFocus(true, onFocus ? () => onFocus(e) : () => {});\n        }}\n        onBlur={(e: any) => {\n          handleFocus(false, onBlur ? () => onBlur(e) : () => {});\n        }}\n        {..._input}\n        ref={mergeRefs([ref, _ref, wrapperRef])}\n      />\n      {InputRightElement || rightElement\n        ? InputRightElement || rightElement\n        : null}\n    </Stack>\n  );\n};\n\nexport default memo(forwardRef(Input));\n","export { InputGroup } from './InputGroup';\nexport { InputRightAddon, InputLeftAddon } from './InputAddons';\nexport type { IInputGroupProps, IInputProps } from './types';\n\nimport InputMain from './Input';\nimport type { IInputComponentType } from './types';\n\nconst InputTemp: any = InputMain;\n\n// To add typings\nconst Input = InputTemp as IInputComponentType;\n\nexport { Input };\n"],"names":["ShadowPagination","total","limit","setLimit","setPage","page","style","setIsLoading","view","pageCount","Math","ceil","MyPaginate","styled","ReactPaginate","attrs","activeClassName","vw","HStack","boxShadow","justifyContent","alignItems","height","vh","backgroundColor","paddingHorizontal","Text","fontFamily","fontSize","color","marginRight","Select","outlineColor","outlineStyle","borderWidth","variant","selectedValue","parseInt","width","onValueChange","v","dropdownIcon","DropDownIcon","label","value","marginLeft","breakLabel","nextLabel","onPageChange","p","selected","pageRangeDisplayed","marginPagesDisplayed","previousLabel","renderOnZeroPageCount","forcePage","React","props","xmlns","viewBox","Path","fill","d","fetchDriveRoutes","dispatch","getState","getUser","token","body","JSON","stringify","skip","sort","_id","fields","distance","time","properties","created","fetch","API_URL","method","headers","Authorization","response","ok","Error","json","resData","type","SET_ROUTES","data","count","console","log","useSelector","state","driveroute","routes","useState","isLoading","isMapLoading","setIsMapLoading","showMap","setShowMap","points","setPoints","route","setRoute","useDispatch","_getData","useCallback","driveroutesActions","useEffect","unmounted","getPoints","length","map","location","cols","floor","window","screen","_renderItem","item","driver","createdUser","ui","pic","id","userUri","CDN","drUri","VStack","borderRadius","marginHorizontal","marginVertical","Pressable","flex","onPress","e","Center","Spinner","size","Colors","Image","source","uri","alt","borderTopLeftRadius","borderTopRightRadius","marginTop","Avatar","borderColor","lineHeight","firstname","lastname","moment","format","toFixed","TimeIcon","NoItemsFound","mt","ph","parseFloat","PageHeader","title","minHeight","FlatList","_contentContainerStyle","overflow","paddingBottom","ListEmptyComponent","keyExtractor","renderItem","maxToRenderPerBatch","initialNumToRender","columnWrapperStyle","numColumns","subtitle","rightElement","noborder","bottomBorder","borderBottomColor","borderBottomWidth","marginBottom","ariaAttr","condition","undefined","FormControlContext","useFormControlProvider","idProp","nativeID","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","uniqueId","ResponsiveQueryContext","disableCSSMediaQueries","useId","labelId","feedbackId","helpTextId","hasFeedbackText","setHasFeedbackText","hasHelpText","setHasHelpText","useFormControl","field","useFormControlContext","describedBy","push","ariaDescribedBy","join","cleanProps","omit","disabled","readOnly","required","accessibilityInvalid","accessibilityRequired","accessibilityReadOnly","accessibilityDescribedBy","resolveStackStyleInput","outlineWidth","StyledInput","makeStyledComponent","TextInput","Input","ref","isHoveredProp","isHovered","isFocusedProp","isFocused","onKeyPress","InputLeftElement","InputRightElement","leftElement","inputProps","setIsFocused","handleFocus","focusState","callback","_ref","useHover","inputThemeProps","usePropsResolution","ariaLabel","accessibilityLabel","isFullWidth","fontWeight","fontStyle","placeholderTextColor","selectionColor","underlineColorAndroid","onFocus","onBlur","wrapperRef","_stack","_input","resolvedProps","extractInObject","stylingProps","layoutProps","nonLayoutProps","resolvedFontFamily","useResolvedFontFamily","resolvedPlaceholderTextColor","useToken","resolvedSelectionColor","resolvedUnderlineColorAndroid","focusOutlineColor","invalidOutlineColor","useHasResponsiveProps","Stack","mergeRefs","secureTextEntry","accessible","editable","w","persist","memo","forwardRef"],"sourceRoot":""}