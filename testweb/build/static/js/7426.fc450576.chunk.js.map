{"version":3,"file":"static/js/7426.fc450576.chunk.js","mappings":"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","sources":["components/ShadowPagination.js","components/ShadowSelect.js","components/svg/AcreIcon.js","components/svg/BathIcon.js","components/svg/BedIcon.js","components/svg/CalendarWhiteIcon.js","components/svg/FilterIcon.js","components/svg/MarketIcon.js","components/svg/PriceIcon.js","components/svg/SqftIcon.js","components/svg/TimeIcon.js","context/index.js","pages/private/lists/AddList.js","../node_modules/native-base/lib/module/components/composites/Tooltip/Tooltip.tsx","pages/private/lists/HorizontalItem.js","pages/private/lists/VerticalItem.js","pages/private/lists/AddContacts.js","pages/private/lists/index.js","../node_modules/native-base/lib/module/components/basic/View/View.tsx","../node_modules/native-base/lib/module/hooks/useDisclose.ts"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { HStack, Select, Center, Pressable, Text } from \"native-base\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { vh, vw } from \"../util\";\r\nimport PrevIcon from \"./svg/PrevIcon\";\r\nimport NextIcon from \"./svg/NextIcon\";\r\nimport Colors from \"../constants/Colors\";\r\nimport DropDownIcon from \"./svg/DropDownIcon\";\r\n\r\nconst ShadowPagination = ({\r\n  total = 1,\r\n  limit = 10,\r\n  setLimit,\r\n  setPage,\r\n  page,\r\n  setIsLoading,\r\n  style,\r\n  view = true,\r\n  \r\n}) => {\r\n  const pageCount = Math.ceil(total / limit);\r\n\r\n  const onPageChange = (p) => {\r\n    setPage(p.selected + 1);\r\n  };\r\n\r\n  const MyPaginate = styled(ReactPaginate).attrs({\r\n    activeClassName: \"active\", // default to \"disabled\"\r\n  })`\r\n    margin-bottom: 1rem;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-end;\r\n    list-style-type: none;\r\n    padding: 0 1rem;\r\n    li a {\r\n      border-radius: 4px;\r\n      padding: 0.1rem 1rem;\r\n      cursor: pointer;\r\n      color: rgba(102, 102, 102, 1);\r\n      font-family: \"Poppins_medium\";\r\n      font-size: ${vw(15)};\r\n    }\r\n    li.previous a,\r\n    li.next a,\r\n    li.break a {\r\n      border-color: transparent;\r\n      color: rgba(102, 102, 102, 1);\r\n      font-family: \"Poppins_medium\";\r\n      font-size: ${vw(15)};\r\n    }\r\n    li.active a {\r\n      background-color: #7d2be9;\r\n      border-color: transparent;\r\n      color: white;\r\n      min-width: 24px;\r\n      font-family: \"Poppins_medium\";\r\n      font-size: ${vw(15)};\r\n    }\r\n    li.disabled a {\r\n      color: rgba(102, 102, 102, 0.5);\r\n    }\r\n    li.disable,\r\n    li.disabled a {\r\n      cursor: default;\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <HStack\r\n      style={{\r\n        boxShadow: \"0px 0px 15px rgba(0, 0, 0, 0.1)\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        height: vh(60),\r\n        backgroundColor: \"white\", //\"rgba(247, 248, 250, 1)\",\r\n        ...style,\r\n      }}\r\n    >\r\n      {view ? (\r\n        <HStack style={{ alignItems: \"center\", paddingHorizontal: vh(20) }}>\r\n          <Text\r\n            style={{\r\n              fontFamily: \"Poppins_medium\",\r\n              fontSize: vw(15),\r\n              color: \"rgba(102, 102, 102, 1)\",\r\n              marginRight: vw(10),\r\n            }}\r\n          >\r\n            View\r\n          </Text>\r\n          <Select\r\n            outlineColor={\"rgba(0,0,0.0.15)\"}\r\n            outlineStyle={{\r\n              borderWidth: vh(2),\r\n            }}\r\n            variant='outline'\r\n            selectedValue={parseInt(limit)}\r\n            style={{\r\n              width: vw(50),\r\n            }}\r\n            onValueChange={(v) => {\r\n              setPage(1);\r\n              setLimit(v);\r\n            }}\r\n            dropdownIcon={<DropDownIcon />}\r\n          >\r\n            <Select.Item label={\"1\"} value={1} />\r\n            <Select.Item label={\"5\"} value={5} />\r\n            <Select.Item label={\"10\"} value={10} />\r\n            <Select.Item label={\"20\"} value={20} />\r\n            <Select.Item label={\"30\"} value={30} />\r\n            <Select.Item label={\"40\"} value={40} />\r\n            <Select.Item label={\"50\"} value={50} />\r\n            <Select.Item label={\"100\"} value={100} />\r\n          </Select>\r\n          <Text\r\n            style={{\r\n              fontFamily: \"Poppins_medium\",\r\n              fontSize: vw(15),\r\n              color: \"rgba(102, 102, 102, 1)\",\r\n              marginLeft: vw(10),\r\n            }}\r\n          >\r\n            per page\r\n          </Text>\r\n        </HStack>\r\n      ) : (\r\n        <HStack></HStack>\r\n      )}\r\n      <MyPaginate\r\n        breakLabel='...'\r\n        nextLabel='Next >'\r\n        onPageChange={onPageChange}\r\n        pageRangeDisplayed={3}\r\n        marginPagesDisplayed={2}\r\n        pageCount={pageCount}\r\n        previousLabel='< Previous'\r\n        renderOnZeroPageCount={null}\r\n        forcePage={page - 1}\r\n      />\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShadowPagination);\r\n","import React from \"react\";\r\nimport { Select, FormControl } from \"native-base\";\r\nimport { Controller } from \"react-hook-form\";\r\nimport Util from \"../util\";\r\nimport Colors from \"../constants/Colors\";\r\nimport DropDownIcon from \"./svg/DropDownIcon\";\r\nconst { vw, vh } = Util;\r\n\r\nconst ShadowSelect = React.forwardRef((props, ref) => {\r\n  return (\r\n    <FormControl\r\n      isInvalid={props.invalid}\r\n      style={{\r\n        height: vh(48),\r\n        ...props.style,\r\n      }}\r\n    >\r\n      {props.label && (\r\n        <FormControl.Label\r\n          style={{\r\n            fontSize: vw(13),\r\n            fontFamily: \"Poppins_medium\",\r\n            color: props.invalid ? \"red.500\" : \"rgba(102, 102, 102, 0.7)\",\r\n            height: vh(19),\r\n          }}\r\n        >\r\n          {props.label}\r\n        </FormControl.Label>\r\n      )}\r\n\r\n      <Controller\r\n        control={props.control}\r\n        rules={props.rules}\r\n        name={props.name}\r\n        render={({ field: { onChange, onBlur, value } }) => (\r\n          <Select\r\n            ref={ref}\r\n            size={props.size || \"lg\"}\r\n            dropdownIcon={<DropDownIcon />}\r\n            _invalid={{\r\n              borderColor: \"red.300\",\r\n              borderWidth: \"1\",\r\n            }}\r\n            // _light={{\r\n            //   borderWidth: \"1\",\r\n            // }}\r\n            // _dark={{\r\n            //   borderWidth: \"1\",\r\n            // }}\r\n            // _web={{\r\n            //   borderWidth: \"1\",\r\n            // }}\r\n            style={{\r\n              fontSize: vw(15),\r\n              fontFamily: \"Poppins_medium\",\r\n              backgroundColor: \"white\",\r\n              padding: vw(5),\r\n              height: props.height || vh(36),\r\n            }}\r\n            placeholder={props.placeholder}\r\n            selectedValue={value || props.defaultValue}\r\n            onValueChange={(v) => {\r\n              onChange(v);\r\n              if (props.onChange) {\r\n                props.onChange(v);\r\n              }\r\n            }}\r\n          >\r\n            {props.items &&\r\n              props.items.length > 0 &&\r\n              props.items.map((item, idx) => (\r\n                <Select.Item\r\n                  _pressed={{\r\n                    borderWidth: 1,\r\n                    borderColor: Colors.primary,\r\n                    backgroundColor: \"transparent\",\r\n                  }}\r\n                  borderWidth={1}\r\n                  borderColor='transparent'\r\n                  borderRadius={50}\r\n                  fontSize={16}\r\n                  key={props.name + idx}\r\n                  label={item.label}\r\n                  value={item.value}\r\n                />\r\n              ))}\r\n          </Select>\r\n        )}\r\n      />\r\n      <FormControl.ErrorMessage style={{ marginTop: vh(-3) }}>\r\n        {props.error}\r\n      </FormControl.ErrorMessage>\r\n    </FormControl>\r\n  );\r\n});\r\n\r\nexport default ShadowSelect;\r\n","import * as React from \"react\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\nimport { vw, vh } from \"../../util\";\r\n\r\nconst AcreIcon = ({ fill }) => (\r\n  <Svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    viewBox='0 0 24 24'\r\n    width={vw(24)}\r\n    height={vh(24)}\r\n  >\r\n    <Path data-name='Rectangle 243' fill='none' d='M0 0h24v24H0z' />\r\n    <Path\r\n      d='M8.193 5.436h-.024c-.347 0-.645 0-.891.02a2 2 0 0 0-.766.195 1.969 1.969 0 0 0-.861.861 2 2 0 0 0-.195.766c-.02.246-.02.544-.02.891v.444c0 .346 0 .644.02.89a2 2 0 0 0 .195.766 1.967 1.967 0 0 0 .861.86 2 2 0 0 0 .766.195c.246.02.544.02.891.02h.444c.346 0 .644 0 .89-.02a2 2 0 0 0 .766-.195 1.965 1.965 0 0 0 .86-.86 2 2 0 0 0 .195-.766c.02-.246.02-.544.02-.89v-.444c0-.347 0-.645-.02-.891a2 2 0 0 0-.195-.766 1.967 1.967 0 0 0-.86-.861 2 2 0 0 0-.766-.195c-.246-.02-.544-.02-.89-.02h-.42ZM7.107 6.82a.761.761 0 0 1 .277-.051c.186-.015.43-.016.809-.016h.394c.378 0 .622 0 .808.016a.755.755 0 0 1 .277.056.659.659 0 0 1 .287.287.742.742 0 0 1 .056.277c.015.186.016.43.016.809v.394c0 .378 0 .622-.016.808a.737.737 0 0 1-.056.269.655.655 0 0 1-.29.29.737.737 0 0 1-.277.056c-.186.015-.43.016-.808.016h-.391c-.379 0-.623 0-.809-.016a.742.742 0 0 1-.277-.056.659.659 0 0 1-.287-.29.755.755 0 0 1-.051-.274c-.015-.186-.016-.43-.016-.808v-.394c0-.379 0-.623.016-.809a.761.761 0 0 1 .056-.277.663.663 0 0 1 .282-.287Zm8.306-1.384h-.025c-.346 0-.644 0-.89.02a2 2 0 0 0-.766.195 1.967 1.967 0 0 0-.86.861 2 2 0 0 0-.195.766c-.02.246-.02.544-.02.891v.444c0 .346 0 .644.02.89a2 2 0 0 0 .192.766 1.965 1.965 0 0 0 .86.86 2 2 0 0 0 .766.195c.246.02.544.02.89.02h.445c.346 0 .644 0 .89-.02a2 2 0 0 0 .766-.195 1.967 1.967 0 0 0 .861-.86 2 2 0 0 0 .195-.766c.02-.246.02-.544.02-.89v-.444c0-.346 0-.644-.02-.89a2 2 0 0 0-.195-.766 1.969 1.969 0 0 0-.861-.861 2 2 0 0 0-.766-.195c-.246-.02-.544-.02-.89-.02h-.42ZM14.327 6.82a.755.755 0 0 1 .278-.051c.186-.015.43-.016.808-.016h.394c.379 0 .623 0 .809.016a.761.761 0 0 1 .277.056.659.659 0 0 1 .287.287.761.761 0 0 1 .056.277c.015.186.016.43.016.809v.394c0 .378 0 .622-.016.808a.755.755 0 0 1-.056.277.655.655 0 0 1-.287.287.742.742 0 0 1-.277.056c-.186.015-.43.016-.809.016h-.394c-.378 0-.622 0-.808-.016a.737.737 0 0 1-.277-.056.655.655 0 0 1-.287-.287.737.737 0 0 1-.056-.277c-.016-.191-.016-.431-.016-.813v-.394c0-.379 0-.623.016-.809a.742.742 0 0 1 .056-.277.659.659 0 0 1 .286-.287Zm-6.158 5.836h.444c.346 0 .644 0 .89.02a2 2 0 0 1 .766.193 1.965 1.965 0 0 1 .86.86 2 2 0 0 1 .195.766c.02.246.02.544.02.89v.444c0 .346 0 .644-.02.89a2 2 0 0 1-.195.766 1.967 1.967 0 0 1-.86.861 2 2 0 0 1-.766.195c-.246.02-.544.02-.89.02h-.444c-.346 0-.644 0-.89-.02a2 2 0 0 1-.766-.195 1.969 1.969 0 0 1-.861-.861 2 2 0 0 1-.195-.766c-.02-.246-.02-.544-.02-.89v-.444c0-.346 0-.644.02-.89a2 2 0 0 1 .195-.766 1.967 1.967 0 0 1 .861-.86 2 2 0 0 1 .766-.195c.244-.018.542-.018.89-.018Zm-.784 1.329a.742.742 0 0 0-.277.056.659.659 0 0 0-.287.287.755.755 0 0 0-.052.277c-.015.186-.016.43-.016.808v.394c0 .379 0 .623.016.809a.761.761 0 0 0 .056.277.659.659 0 0 0 .287.287.761.761 0 0 0 .277.056c.186.015.43.016.809.016h.394c.378 0 .622 0 .808-.016a.755.755 0 0 0 .277-.056.655.655 0 0 0 .287-.287.742.742 0 0 0 .056-.277c.015-.186.016-.43.016-.809v-.394c0-.378 0-.622-.016-.808a.737.737 0 0 0-.056-.277.655.655 0 0 0-.287-.287.737.737 0 0 0-.277-.056c-.191-.016-.431-.016-.813-.016h-.394c-.379 0-.624 0-.809.016Zm8.029-1.329h-.025c-.346 0-.644 0-.89.02a2 2 0 0 0-.766.195 1.965 1.965 0 0 0-.86.86 2 2 0 0 0-.195.766c-.02.246-.02.544-.02.89v.444c0 .347 0 .645.02.891a2 2 0 0 0 .195.766 1.967 1.967 0 0 0 .86.861 2 2 0 0 0 .766.195c.246.02.544.02.89.02h.445c.346 0 .644 0 .89-.02a2 2 0 0 0 .766-.195 1.969 1.969 0 0 0 .861-.861 2 2 0 0 0 .195-.766c.02-.246.02-.544.02-.89v-.444c0-.346 0-.644-.02-.89a2 2 0 0 0-.195-.766 1.967 1.967 0 0 0-.861-.86 2 2 0 0 0-.766-.195c-.246-.02-.544-.02-.891-.02h-.419Zm-1.085 1.385a.737.737 0 0 1 .277-.056c.186-.015.43-.016.808-.016h.394c.379 0 .623 0 .809.016a.742.742 0 0 1 .277.056.655.655 0 0 1 .287.287.755.755 0 0 1 .056.277c.015.186.016.43.016.808v.394c0 .379 0 .623-.016.809a.761.761 0 0 1-.056.277.655.655 0 0 1-.287.287.761.761 0 0 1-.277.056c-.186.015-.43.016-.809.016h-.394c-.378 0-.622 0-.808-.016a.755.755 0 0 1-.277-.056.655.655 0 0 1-.287-.287.742.742 0 0 1-.056-.277c-.015-.186-.016-.43-.016-.809v-.394c0-.378 0-.622.016-.808a.737.737 0 0 1 .056-.277.655.655 0 0 1 .285-.287Z'\r\n      fill={fill || \"#919191\"}\r\n      fillRule='evenodd'\r\n    />\r\n  </Svg>\r\n);\r\n\r\nexport default AcreIcon;\r\n","import * as React from \"react\";\r\nimport Svg, { Path, G } from \"react-native-svg\";\r\n\r\nconst BathIcon = (props) => (\r\n  <Svg xmlns='http://www.w3.org/2000/svg' width={24} height={24} {...props}>\r\n    <Path data-name='Rectangle 243' fill='none' d='M0 0h24v24H0z' />\r\n    <G fill={props.fill || \"#919191\"}>\r\n      <Path\r\n        data-name='Path 10110'\r\n        d='m12.69 12.866-.79.79.788 1.576.776-.819-.774-1.548Z'\r\n      />\r\n      <Path\r\n        data-name='Path 10111'\r\n        d='m13.193 16.24.738 1.477.776-.819-.738-1.477-.776.819Z'\r\n      />\r\n      <Path\r\n        data-name='Path 10112'\r\n        d='m19.251 9.845-.766.808 1.471.7.766-.809-1.471-.7Z'\r\n      />\r\n      <Path\r\n        data-name='Path 10113'\r\n        d='m16.061 9.493 1.419.679.766-.809-1.39-.666-.794.794Z'\r\n      />\r\n      <Path\r\n        data-name='Path 10114'\r\n        d='m14.908 14.429.944 1.26.739-.781-.944-1.26-.739.781Z'\r\n      />\r\n      <Path\r\n        data-name='Path 10115'\r\n        d='m15.002 12.789-.958-1.278-.757.757.976 1.3.739-.781Z'\r\n      />\r\n      <Path\r\n        data-name='Path 10116'\r\n        d='m14.675 10.879 1.215.972.732-.772-1.195-.954-.751.754Z'\r\n      />\r\n      <Path\r\n        data-name='Path 10117'\r\n        d='m16.72 12.517 1.216.973.732-.772-1.216-.972-.732.772Z'\r\n      />\r\n      <Path\r\n        data-name='Path 10118'\r\n        d='m16.263 6.469-.869.869-.819-.817a3.7 3.7 0 0 0-5.228 0l-.033.034a2.582 2.582 0 0 0-4.069 2.109v7.982h1.06V8.664a1.523 1.523 0 0 1 2.386-1.253 3.7 3.7 0 0 0 .657 4.336l.819.819-.792.792.662.662 6.888-6.889Zm-5.421 5.273-.744-.744a2.637 2.637 0 1 1 3.728-3.73l.744.745Z'\r\n      />\r\n    </G>\r\n  </Svg>\r\n);\r\n\r\nexport default BathIcon;\r\n","import * as React from \"react\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\n\r\nconst BedIcon = (props) => (\r\n  <Svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    viewBox='0 0 24 24'\r\n    width={24}\r\n    height={24}\r\n    {...props}\r\n  >\r\n    <Path data-name='Rectangle 243' fill='none' d='M0 0h24v24H0z' />\r\n    <Path\r\n      d='M17.245 10.537V6.166h-1.333v1.333h-8V6.166H6.579v4.371a2.655 2.655 0 0 0-1.334 2.3v2.667a.667.667 0 0 0 .667.662h.667v2.667h1.333v-2.667h8v2.667h1.333v-2.667h.667a.667.667 0 0 0 .667-.667v-2.666a2.658 2.658 0 0 0-1.333-2.3Zm-1.333-1.704v1.333h-3.333V8.833Zm-8 0h3.333v1.333H7.912Zm9.333 6H6.579v-2A1.335 1.335 0 0 1 7.912 11.5h8a1.335 1.335 0 0 1 1.333 1.333Z'\r\n      fill={props.fill || \"#919191\"}\r\n    />\r\n  </Svg>\r\n);\r\n\r\nexport default BedIcon;\r\n","import * as React from \"react\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\n\r\nconst CalendarWhiteIcon = (props) => {\r\n  return (\r\n    <Svg\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      viewBox='0 0 24 24'\r\n      width={props.width || 24}\r\n      height={props.height || 24}\r\n    >\r\n      <Path data-name='Rectangle 243' fill='none' d='M0 0h24v24H0z' />\r\n      <Path\r\n        data-name='Path 10119'\r\n        d='M15.336 5.6H18a.635.635 0 0 1 .472.2.645.645 0 0 1 .192.468v10.668a.645.645 0 0 1-.192.464.635.635 0 0 1-.472.2H6a.635.635 0 0 1-.472-.2.645.645 0 0 1-.192-.468V6.264a.645.645 0 0 1 .192-.468A.635.635 0 0 1 6 5.6h2.664V4.264H10V5.6h4V4.264h1.336Zm2 4V6.936h-2v1.328H14V6.936h-4v1.328H8.664V6.936h-2V9.6Zm0 1.336H6.664v5.328h10.672ZM8 12.264h3.336v2.672H8Z'\r\n        fill={props.fill || \"#fff\"}\r\n      />\r\n    </Svg>\r\n  );\r\n};\r\n\r\nexport default CalendarWhiteIcon;\r\n","import * as React from \"react\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\nimport { vh, vw } from \"../../util\";\r\n\r\nconst FilterIcon = ({ fill }) => (\r\n  <Svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    viewBox='0 0 24 24'\r\n    width={vw(24)}\r\n    height={vh(24)}\r\n  >\r\n    <Path data-name='Rectangle 37' fill='none' d='M0 0h24v24H0z' />\r\n    <Path\r\n      data-name='Path 10123'\r\n      d='M9.75 12.925 6 7.3h-.75V5.8h13.5v1.5H18l-3.75 5.625V19.3h-4.5ZM7.806 7.3l3.447 5.166V17.8h1.494v-5.334L16.194 7.3Z'\r\n      fill={fill || \"#666\"}\r\n    />\r\n  </Svg>\r\n);\r\n\r\nexport default FilterIcon;\r\n","import * as React from \"react\";\r\nimport Svg, { Circle, Path } from \"react-native-svg\";\r\n\r\nimport { vw, vh } from \"../../util\";\r\n\r\nfunction MarketIcon({ fill }) {\r\n  return (\r\n    <Svg\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      width={vw(26)}\r\n      height={vh(26)}\r\n      viewBox='0 0 26 26'\r\n    >\r\n      <Circle data-name='Ellipse 219' cx={13} cy={13} r={13} fill='#7d2be9' />\r\n      <Path\r\n        data-name='Path 10219'\r\n        d='M.587-6.766a16.472 16.472 0 011.947.714 3.273 3.273 0 011.257 1.029A2.963 2.963 0 014.31-3.2a3.149 3.149 0 01-.451 1.64A3.223 3.223 0 012.508-.34 4.83 4.83 0 01.3.119H.264v1.36h-.578V.085A4.658 4.658 0 01-3.069-.978a3.369 3.369 0 01-1.19-2.355h2.074a2.11 2.11 0 00.553 1.207 2.166 2.166 0 001.317.68V-5.3a21.824 21.824 0 01-2.125-.74 3.364 3.364 0 01-1.292-1.015 2.9 2.9 0 01-.561-1.87 2.9 2.9 0 01.5-1.683 3.308 3.308 0 011.4-1.139 4.98 4.98 0 012.074-.408V-13.6h.583v1.462a4.366 4.366 0 012.652.986 3.33 3.33 0 011.138 2.193h-2.09a1.966 1.966 0 00-.536-1.063 2.1 2.1 0 00-1.165-.586v3.74zm-2.805-2.227a1.493 1.493 0 00.493 1.182 4.292 4.292 0 001.411.756v-3.6a2.151 2.151 0 00-1.394.45 1.508 1.508 0 00-.51 1.212zm2.482 7.6a2.025 2.025 0 001.453-.493 1.66 1.66 0 00.518-1.258 1.508 1.508 0 00-.51-1.216 4.487 4.487 0 00-1.461-.757z'\r\n        transform='translate(13.292 18.6)'\r\n        fill='#fff'\r\n      />\r\n    </Svg>\r\n  );\r\n}\r\n\r\nexport default MarketIcon;\r\n","import * as React from \"react\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\n\r\nconst PriceIcon = (props) => (\r\n  <Svg xmlns='http://www.w3.org/2000/svg' viewBox=\"0 0 24 24\" width={24} height={24} {...props}>\r\n    <Path data-name='Rectangle 243' fill='none' d='M0 0h24v24H0z' />\r\n    <Path\r\n      data-name='Path 10122'\r\n      d='m11.264 5 6.6.944.944 6.6-6.128 6.128a.637.637 0 0 1-.468.192.664.664 0 0 1-.476-.192l-6.6-6.6a.642.642 0 0 1-.192-.472.642.642 0 0 1 .192-.472Zm.472 1.416L6.552 11.6l5.656 5.656 5.184-5.184-.7-4.952Zm1.416 4.24a1.264 1.264 0 0 1-.352-.596 1.324 1.324 0 0 1 0-.692 1.29 1.29 0 0 1 .348-.6 1.333 1.333 0 0 1 .6-.344 1.309 1.309 0 0 1 .688 0 1.333 1.333 0 0 1 .6.344 1.26 1.26 0 0 1 .344.6 1.367 1.367 0 0 1 0 .688 1.286 1.286 0 0 1-.344.6 1.316 1.316 0 0 1-.596.344 1.309 1.309 0 0 1-.688 0 1.316 1.316 0 0 1-.6-.344Z'\r\n      fill={props.fill || \"#303030\"}\r\n    />\r\n  </Svg>\r\n);\r\n\r\nexport default PriceIcon;\r\n","import * as React from \"react\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\n\r\nconst SqftIcon = (props) => (\r\n  <Svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    viewBox='0 0 24 24'\r\n    width={24}\r\n    height={24}\r\n    {...props}\r\n  >\r\n    <Path data-name='Rectangle 243' fill='none' d='M0 0h24v24H0z' />\r\n    <Path\r\n      data-name='Path 10126'\r\n      d='M6.169 6.569h2.912v2.912H6.169Zm0 8.75h2.912v2.912H6.169Zm8.75-8.75h2.912v2.912h-2.912Zm0 8.75h2.912v2.912h-2.912Zm-5.25-7.588h4.662V8.9H9.669Zm-2.338 2.338H8.5v4.662H7.331Zm8.169 0h1.169v4.662H15.5ZM9.669 15.9h4.662v1.169H9.669Z'\r\n      fill={props.fill || \"#919191\"}\r\n    />\r\n  </Svg>\r\n);\r\n\r\nexport default SqftIcon;\r\n","import * as React from \"react\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\n\r\nconst TimeIcon = ({ fill }) => (\r\n  <Svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    viewBox='0 0 24 24'\r\n    width={24}\r\n    height={24}\r\n  >\r\n    <Path data-name='Rectangle 243' fill='none' d='M0 0h24v24H0z' />\r\n    <Path\r\n      data-name='Path 10109'\r\n      d='M12 18.264a6.6 6.6 0 0 1-2.592-.52 6.58 6.58 0 0 1-2.124-1.428 6.58 6.58 0 0 1-1.428-2.124 6.6 6.6 0 0 1-.52-2.592 6.6 6.6 0 0 1 .52-2.592 6.58 6.58 0 0 1 1.428-2.124 6.58 6.58 0 0 1 2.124-1.428A6.6 6.6 0 0 1 12 4.936a6.6 6.6 0 0 1 2.592.52 6.58 6.58 0 0 1 2.124 1.428 6.58 6.58 0 0 1 1.428 2.124 6.6 6.6 0 0 1 .52 2.592 6.6 6.6 0 0 1-.52 2.592 6.58 6.58 0 0 1-1.428 2.124 6.58 6.58 0 0 1-2.124 1.428 6.6 6.6 0 0 1-2.592.52Zm0-1.328a5.181 5.181 0 0 0 2.072-.424 5.224 5.224 0 0 0 1.7-1.14 5.224 5.224 0 0 0 1.14-1.7 5.181 5.181 0 0 0 .424-2.072 5.181 5.181 0 0 0-.424-2.072 5.224 5.224 0 0 0-1.14-1.7 5.224 5.224 0 0 0-1.7-1.14A5.181 5.181 0 0 0 12 6.264a5.181 5.181 0 0 0-2.072.424 5.224 5.224 0 0 0-1.7 1.14 5.224 5.224 0 0 0-1.14 1.7 5.181 5.181 0 0 0-.424 2.072 5.181 5.181 0 0 0 .424 2.072 5.224 5.224 0 0 0 1.14 1.7 5.224 5.224 0 0 0 1.7 1.14 5.181 5.181 0 0 0 2.072.424Zm.664-5.336h2.672v1.336h-4V8.264h1.328Z'\r\n      fill={fill || \"#686868\"}\r\n    />\r\n  </Svg>\r\n);\r\n\r\nexport default TimeIcon;\r\n","import React from 'react';\r\n\r\nconst SocketContext = React.createContext();\r\n\r\nexport default SocketContext;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { HStack, Pressable, VStack, Text, Checkbox } from \"native-base\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport ShadowButton from \"../../../components/ShadowButton\";\r\nimport ShadowModal from \"../../../components/ShadowModal\";\r\nimport ShadowInput from \"../../../components/ShadowInput\";\r\nimport * as listActions from \"../../../store/actions/lists\";\r\nimport * as campaignActions from \"../../../store/actions/campaigns\";\r\nimport { vh } from \"../../../util\";\r\nimport ShadowSelect from \"../../../components/ShadowSelect\";\r\nimport Colors from \"../../../constants/Colors\";\r\n\r\nconst AddList = ({ setShowModal, showModal, _showAlert, edit }) => {\r\n  const dispatch = useDispatch();\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [refresh, setRefresh] = useState(false);\r\n  const { activeList: list, lists } = useSelector((state) => state.lists);\r\n  const { userCampaigns: campaigns } = useSelector((state) => state.campaigns);\r\n  const listname = list && list.name;\r\n\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n    setValue,\r\n    getValues,\r\n  } = useForm({\r\n    mode: \"all\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        await dispatch(campaignActions.fetchCampaigns(1, 1000));\r\n      } catch (err) {\r\n        _showAlert(\"error\", err.message);\r\n      }\r\n    })();\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    reset();\r\n    if (edit) {\r\n      setValue(\"_id\", list ? list._id : null);\r\n      setValue(\"name\", list ? list.name : \"\");\r\n      setValue(\"campaign\", list ? list.campaign : \"\");\r\n      setValue(\"applyto\", list ? list.applyto : \"all\");\r\n      setValue(\"exclude\", list ? list.exclude : false);\r\n    } else {\r\n      setValue(\"_id\", null);\r\n      setValue(\"name\", \"\");\r\n      setValue(\"campaign\", \"\");\r\n      setValue(\"applyto\", \"all\");\r\n      setValue(\"excclude\", false);\r\n    }\r\n  }, [listname]);\r\n\r\n  const onSubmit = async (data) => {\r\n    if (!data.name) {\r\n      _showAlert(\"error\", \"List name is required.\");\r\n      return;\r\n    }\r\n    if (data.campaign === \"\") {\r\n      delete data.campaign;\r\n    }\r\n    setIsSaving(true);\r\n    try {\r\n      if (edit) {\r\n        data._id = list._id;\r\n      }\r\n      const action = listActions.addList(data, null);\r\n      await dispatch(action);\r\n      await dispatch(listActions.fetchLists());\r\n      reset();\r\n      setIsSaving(false);\r\n      setShowModal(false);\r\n      _showAlert(\"success\", \"List created successfully.\");\r\n    } catch (err) {\r\n      console.log(err.message);\r\n      _showAlert(\"error\", \"An error occured, cannot create list.\");\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  const campaignsSelected = lists.map((l) => l.campaign);\r\n  const campaignsFiltered = edit\r\n    ? campaigns.filter((c) => {\r\n        if (c._id === list && list.campaign) {\r\n          return true;\r\n        }\r\n        return !campaignsSelected.includes(c._id);\r\n      })\r\n    : campaigns.filter((c) => !campaignsSelected.includes(c._id));\r\n\r\n  return (\r\n    <ShadowModal\r\n      size='lg'\r\n      height={vh(300)}\r\n      bodyHeight={vh(250)}\r\n      style={{\r\n        minHeight: vh(300),\r\n      }}\r\n      // width={vw(400)}\r\n      isOpen={showModal}\r\n      close={() => {\r\n        reset();\r\n        setShowModal(false);\r\n      }}\r\n      cancel={() => {\r\n        reset();\r\n        setShowModal(false);\r\n      }}\r\n      save={handleSubmit(onSubmit)}\r\n      header={edit ? \"Edit List - \" + listname : \"Add List\"}\r\n      buttons={\r\n        <HStack space={2}>\r\n          <ShadowButton\r\n            space={2}\r\n            onPress={() => {\r\n              reset();\r\n              setShowModal(false);\r\n            }}\r\n            color='rgba(0,0,0, 0.5)'\r\n            variant='outline'\r\n            label='Cancel'\r\n            style={{ height: vh(36) }}\r\n          />\r\n          <ShadowButton\r\n            space={3}\r\n            isLoading={isSaving}\r\n            onPress={handleSubmit(onSubmit)}\r\n            color='white'\r\n            label='Save'\r\n            style={{ height: vh(36) }}\r\n          />\r\n        </HStack>\r\n      }\r\n    >\r\n      <VStack space={5} marginTop={vh(-20)}>\r\n        <ShadowInput\r\n          autoFocus={true}\r\n          style={{ width: \"100%\" }}\r\n          // onKeyPress={(e) => {\r\n          //   if (e.key === \"Tab\" || e.key === \"Enter\") {\r\n          //     e.preventDefault();\r\n          //     setIsSaving(true);\r\n          //     handleSubmit(onSubmit, () => {\r\n          //       setIsSaving(false);\r\n          //     })();\r\n          //   }\r\n          // }}\r\n          name='name'\r\n          label={\"List Name\"}\r\n          placeholder='List Name'\r\n          control={control}\r\n          rules={{\r\n            required: {\r\n              value: true,\r\n              message: \"Please enter list name\",\r\n            },\r\n          }}\r\n          invalid={errors.name ? true : false}\r\n          error={errors.name ? errors.name.message : \"\"}\r\n          inputStyle={{}}\r\n        />\r\n        <ShadowSelect\r\n          control={control}\r\n          items={[\r\n            { label: \"< Set Later >\", value: \"\" },\r\n            ...campaignsFiltered.map((c) => ({\r\n              label: c.name,\r\n              value: c._id,\r\n            })),\r\n          ]}\r\n          name='campaign'\r\n          label='Attach Campaign'\r\n          placeholder='Select Campaign'\r\n          invalid={errors.campaign ? true : false}\r\n          error={errors.campaign ? errors.campaign.message : \"\"}\r\n          rules={{\r\n            required: {\r\n              value: false,\r\n              message: \"Select campaign\",\r\n            },\r\n          }}\r\n        />\r\n        <ShadowSelect\r\n          control={control}\r\n          items={[\r\n            { label: \"All\", value: \"all\" },\r\n            { label: \"New\", value: \"new\" },\r\n            { label: \"Selected\", value: \"selected\" },\r\n          ]}\r\n          name='applyto'\r\n          label='Apply To'\r\n          placeholder='Select'\r\n          invalid={errors.applyto ? true : false}\r\n          error={errors.applyto ? errors.applyto.message : \"\"}\r\n          rules={{\r\n            required: {\r\n              value: false,\r\n              message: \"Select applyto\",\r\n            },\r\n          }}\r\n          onChange={(v) => {\r\n            if (v !== \"all\") {\r\n              setValue(\"exclude\", false);\r\n            }\r\n            setRefresh((r) => !r);\r\n          }}\r\n        />\r\n        {getValues(\"applyto\") === \"all\" && (\r\n          <Checkbox\r\n            size={\"sm\"}\r\n            onChange={(v) => {\r\n              setValue(\"exclude\", v);\r\n            }}\r\n          >\r\n            <Text style={{ fontFamily: \"Poppins\", fontSize: 14 }}>\r\n              Exclude properties with campaign completed\r\n            </Text>\r\n          </Checkbox>\r\n        )}\r\n      </VStack>\r\n    </ShadowModal>\r\n  );\r\n};\r\n\r\nexport default AddList;\r\n","import { OverlayContainer } from '@react-native-aria/overlays';\nimport React from 'react';\nimport { useControllableState, useKeyboardDismissable } from '../../../hooks';\nimport { Popper } from '../Popper';\nimport { composeEventHandlers, mergeRefs } from '../../../utils';\nimport { PresenceTransition } from '../Transitions';\nimport { Platform, StyleSheet } from 'react-native';\nimport { usePropsResolution } from '../../../hooks';\nimport Box from '../../primitives/Box';\nimport type { ITooltipProps } from './types';\nimport { useId } from '@react-native-aria/utils';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { uniqueId } from 'lodash';\nimport { ResponsiveQueryContext } from '../../../utils/useResponsiveQuery/ResponsiveQueryProvider';\n\nexport const Tooltip = ({\n  label,\n  children,\n  onClose,\n  onOpen,\n  defaultIsOpen,\n  placement,\n  openDelay = 0,\n  closeDelay = 0,\n  closeOnClick = true,\n  offset,\n  isDisabled,\n  hasArrow,\n  arrowSize = 12,\n  isOpen: isOpenProp,\n  ...props\n}: ITooltipProps) => {\n  if (hasArrow && offset === undefined) {\n    offset = 0;\n  } else {\n    offset = 6;\n  }\n\n  const resolvedProps = usePropsResolution('Tooltip', props);\n  const [isOpen, setIsOpen] = useControllableState({\n    value: isOpenProp,\n    defaultValue: defaultIsOpen,\n    onChange: (value) => {\n      value ? onOpen && onOpen() : onClose && onClose();\n    },\n  });\n\n  const arrowBg =\n    props.backgroundColor ?? props.bgColor ?? props.bg ?? resolvedProps.bg;\n\n  const targetRef = React.useRef(null);\n\n  const enterTimeout = React.useRef<any>();\n  const exitTimeout = React.useRef<any>();\n  // const tooltipID = '';\n  // const tooltipID = useId();\n\n  let tooltipID = uniqueId();\n\n  // let id = uniqueId();\n  const responsiveQueryContext = React.useContext(ResponsiveQueryContext);\n  const disableCSSMediaQueries = responsiveQueryContext.disableCSSMediaQueries;\n\n  if (!disableCSSMediaQueries) {\n    // This if statement technically breaks the rules of hooks, but is safe\n    // because the condition never changes after mounting.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    tooltipID = useId();\n  }\n\n  const openWithDelay = React.useCallback(() => {\n    if (!isDisabled) {\n      enterTimeout.current = setTimeout(() => setIsOpen(true), openDelay);\n    }\n  }, [isDisabled, setIsOpen, openDelay]);\n\n  const closeWithDelay = React.useCallback(() => {\n    if (enterTimeout.current) {\n      clearTimeout(enterTimeout.current);\n    }\n    exitTimeout.current = setTimeout(() => setIsOpen(false), closeDelay);\n  }, [closeDelay, setIsOpen]);\n\n  React.useEffect(\n    () => () => {\n      clearTimeout(enterTimeout.current);\n      clearTimeout(exitTimeout.current);\n    },\n    []\n  );\n\n  let newChildren = children;\n\n  if (typeof children === 'string') {\n    newChildren = <Box>{children}</Box>;\n  }\n\n  newChildren = React.cloneElement(newChildren, {\n    'onPress': composeEventHandlers<any>(newChildren.props.onPress, () => {\n      if (closeOnClick) {\n        closeWithDelay();\n      }\n    }),\n    'onFocus': composeEventHandlers<any>(\n      newChildren.props.onFocus,\n      openWithDelay\n    ),\n    'onBlur': composeEventHandlers<any>(\n      newChildren.props.onBlur,\n      closeWithDelay\n    ),\n    'onMouseEnter': composeEventHandlers<any>(\n      newChildren.props.onMouseEnter,\n      openWithDelay\n    ),\n    'onMouseLeave': composeEventHandlers<any>(\n      newChildren.props.onMouseLeave,\n      closeWithDelay\n    ),\n    'ref': mergeRefs([newChildren.ref, targetRef]),\n\n    'aria-describedby': isOpen ? tooltipID : undefined,\n  });\n\n  useKeyboardDismissable({\n    enabled: isOpen,\n    callback: () => setIsOpen(false),\n  });\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <>\n      {newChildren}\n      {isOpen && (\n        <OverlayContainer>\n          <PresenceTransition\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1, transition: { duration: 150 } }}\n            exit={{ opacity: 0, transition: { duration: 100 } }}\n            visible={isOpen}\n            style={StyleSheet.absoluteFill}\n          >\n            <Popper\n              triggerRef={targetRef}\n              onClose={() => setIsOpen(false)}\n              placement={placement}\n              offset={offset}\n            >\n              <Popper.Content isOpen={isOpen}>\n                {hasArrow && (\n                  <Popper.Arrow\n                    borderColor=\"transparent\"\n                    backgroundColor={arrowBg}\n                    height={arrowSize}\n                    width={arrowSize}\n                  />\n                )}\n                <Box\n                  {...resolvedProps}\n                  //@ts-ignore\n                  accessibilityRole={\n                    Platform.OS === 'web' ? 'tooltip' : undefined\n                  }\n                  nativeID={tooltipID}\n                >\n                  {label}\n                </Box>\n              </Popper.Content>\n            </Popper>\n          </PresenceTransition>\n        </OverlayContainer>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\r\nimport { HStack, VStack, Text, Center, Box, Avatar, Link } from \"native-base\";\r\nimport { CDN } from \"../../../constants/Config\";\r\nimport moment from \"moment-timezone\";\r\n\r\nimport Util from \"../../../util\";\r\n\r\nimport CalendarWhiteIcon from \"../../../components/svg/CalendarWhiteIcon\";\r\nimport SqftIcon from \"../../../components/svg/SqftIcon\";\r\nimport AcreIcon from \"../../../components/svg/AcreIcon\";\r\nimport BedIcon from \"../../../components/svg/BedIcon\";\r\nimport BathIcon from \"../../../components/svg/BathIcon\";\r\nimport TimeIcon from \"../../../components/svg/TimeIcon\";\r\nimport PriceIcon from \"../../../components/svg/PriceIcon\";\r\n\r\nconst { vw, vh } = Util;\r\n\r\nconst HorizontalItem = ({ item, cols }) => {\r\n  var currency = new Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\",\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 0,\r\n  });\r\n  //default pic\r\n  let pic = \"1\";\r\n  if (item && item.pic) {\r\n    pic = item.pic;\r\n  }\r\n  const createdUser = item.createdUser && item.createdUser;\r\n  // user name\r\n  const fullname =\r\n    createdUser && createdUser.firstname + \" \" + createdUser.lastname;\r\n  //avatar fall back\r\n  const nameSplit = fullname.split(\" \");\r\n  const fn = nameSplit[0][0];\r\n  const ln = nameSplit[1] ? nameSplit[1][0] : \"-\";\r\n  const nameFb = fn + ln;\r\n  // avatar image source uri\r\n  const ui =\r\n    createdUser && createdUser.pic && createdUser.pic.id\r\n      ? createdUser.pic.id\r\n      : \"0\";\r\n  const userUri = `${CDN}/users/${createdUser._id}/${ui}`;\r\n  //property image uri\r\n  const propertyUri = `${CDN}/properties/${item._id ? item._id : \"-\"}/${pic}`;\r\n\r\n  let sqft = \"-\";\r\n  let acre = \"-\";\r\n  if (item.sqft) {\r\n    sqft = item.sqft !== null ? item.sqft.toString() : \"-\";\r\n  }\r\n\r\n  if (item.acre) {\r\n    acre = item.acre !== null ? item.acre.toString() : \"-\";\r\n  }\r\n  //property owner name\r\n  const name = item.name && item.name !== \"\" ? item.name.trim() : \"-\";\r\n\r\n  return (\r\n    <Link\r\n      style={{\r\n        width: vw((window.screen.width - cols * 40) / cols),\r\n        height: vh(210),\r\n        marginHorizontal: vw(20),\r\n        marginVertical: vh(20),\r\n      }}\r\n      href={`/properties/${item._id}`}\r\n      // isExternal\r\n    >\r\n      <HStack\r\n        style={{\r\n          width: vw((window.screen.width - cols * 40) / cols),\r\n          height: vh(210),\r\n          borderRadius: vw(10),\r\n          backgroundColor: \"white\",\r\n          shadowColor: \"#000\",\r\n          shadowOffset: {\r\n            width: 0,\r\n            height: vh(3),\r\n          },\r\n          shadowOpacity: 0.15,\r\n          shadowRadius: vh(10),\r\n          elevation: vh(5),\r\n        }}\r\n      >\r\n        <Box\r\n          style={{\r\n            height: vh(210),\r\n            width: vw(260),\r\n            borderTopStartRadius: vw(10),\r\n            borderBottomStartRadius: vw(10),\r\n            overflow: \"hidden\",\r\n            backgroundImage: `url(${propertyUri})`,\r\n            backgroundPosition: \"center\",\r\n            backgroundSize: \"cover\",\r\n            backgroundRepeat: \"no-repeat\",\r\n          }}\r\n        />\r\n        <VStack\r\n          style={{\r\n            flex: 1,\r\n            paddingHorizontal: vw(20),\r\n            paddingTop: vh(20),\r\n          }}\r\n        >\r\n          <HStack\r\n            style={{ justifyContent: \"space-between\", alignItems: \"center\" }}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontFamily: \"Poppins_medium\",\r\n                fontSize: vw(15),\r\n                color: \"rgba(48, 48, 48, 1)\",\r\n              }}\r\n            >\r\n              {name}\r\n            </Text>\r\n            <HStack alignContent={\"center\"}>\r\n              <PriceIcon width={vw(24)} height={vh(24)} />\r\n              <Text\r\n                style={{\r\n                  fontFamily: \"Poppins_medium\",\r\n                  fontSize: vw(15),\r\n                  color: \"rgba(48, 48, 48, 1)\",\r\n                  paddingTop: vh(2),\r\n                }}\r\n              >\r\n                {item.ev ? \"  \" + currency.format(item.ev.toString()) : \"  - \"}\r\n              </Text>\r\n            </HStack>\r\n          </HStack>\r\n          <HStack\r\n            justifyContent={\"space-between\"}\r\n            alignItems={\"center\"}\r\n            style={{ height: vh(20), padding: 0, margin: 0 }}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontFamily: \"Poppins_medium\",\r\n                fontSize: vw(12),\r\n                color: \"rgba(102, 102, 102, 1)\",\r\n              }}\r\n            >\r\n              {item.propertyaddress}\r\n            </Text>\r\n            <HStack\r\n              height={vh(20)}\r\n              flex={1}\r\n              justifyContent={\"flex-end\"}\r\n              alignItems={\"center\"}\r\n            >\r\n              <CalendarWhiteIcon\r\n                fill='rgba(102, 102, 102, 1)'\r\n                width={vw(18)}\r\n                height={vh(18)}\r\n              />\r\n              <Text\r\n                style={{\r\n                  fontFamily: \"Poppins_medium\",\r\n                  fontSize: vw(12),\r\n                  color: \"rgba(102, 102, 102, 1)\",\r\n                }}\r\n              >\r\n                {item.yearbuilt}\r\n              </Text>\r\n            </HStack>\r\n          </HStack>\r\n\r\n          <HStack\r\n            style={{\r\n              justifyContent: \"space-between\",\r\n              borderTopWidth: vh(2),\r\n              borderTopColor: \"rgba(0, 0, 0, 0.15)\",\r\n              borderBottomWidth: vh(2),\r\n              borderBottomColor: \"rgba(0, 0, 0, 0.15)\",\r\n              alignItems: \"center\",\r\n              height: vh(39),\r\n              marginTop: vh(20),\r\n            }}\r\n          >\r\n            {/*Sqft*/}\r\n            <HStack style={{ marginRight: vw(14), alignItems: \"center\" }}>\r\n              <SqftIcon width={vw(24)} height={vh(24)} />\r\n              <Text\r\n                style={{\r\n                  color: \"#919191\",\r\n                  fontFamily: \"Poppins_medium\",\r\n                  fontSize: vw(13),\r\n                  marginTop: vh(1),\r\n                }}\r\n              >\r\n                {sqft}\r\n              </Text>\r\n            </HStack>\r\n            {/*Acre*/}\r\n            <HStack style={{ marginHorizontal: vw(14), alignItems: \"center\" }}>\r\n              <AcreIcon width={vw(24)} height={vh(24)} />\r\n              <Text\r\n                style={{\r\n                  color: \"#919191\",\r\n                  fontFamily: \"Poppins_medium\",\r\n                  fontSize: vw(13),\r\n                  marginTop: vh(1),\r\n                }}\r\n              >\r\n                {acre}\r\n              </Text>\r\n            </HStack>\r\n            {/*Bed*/}\r\n            <HStack style={{ marginHorizontal: vw(14), alignItems: \"center\" }}>\r\n              <BedIcon width={vw(24)} height={vh(24)} />\r\n              <Text\r\n                style={{\r\n                  color: \"#919191\",\r\n                  fontFamily: \"Poppins_medium\",\r\n                  fontSize: vw(13),\r\n                  marginTop: vh(1),\r\n                }}\r\n              >\r\n                {item.bed}\r\n              </Text>\r\n            </HStack>\r\n            {/*Bath*/}\r\n            <HStack style={{ marginHorizontal: vw(7), alignItems: \"center\" }}>\r\n              <BathIcon width={vw(24)} height={vh(24)} />\r\n              <Text\r\n                style={{\r\n                  color: \"#919191\",\r\n                  fontFamily: \"Poppins_medium\",\r\n                  fontSize: vw(13),\r\n                  marginTop: vh(1),\r\n                }}\r\n              >\r\n                {item.bath}\r\n              </Text>\r\n            </HStack>\r\n          </HStack>\r\n\r\n          {/* Status and #id */}\r\n          <HStack\r\n            style={{\r\n              marginTop: vh(18),\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontSize: vw(13),\r\n                fontFamily: \"Poppins_medium\",\r\n                color: \"rgba(125, 43, 233, 1)\",\r\n              }}\r\n            >\r\n              {item.status && item.status.name}\r\n            </Text>\r\n            <Text\r\n              style={{\r\n                fontSize: vw(13),\r\n                fontFamily: \"Poppins_medium\",\r\n                color: \"rgba(125, 43, 233, 1)\",\r\n              }}\r\n            >\r\n              {\"#\" + item.tid}\r\n            </Text>\r\n          </HStack>\r\n          {/* User Block */}\r\n          <HStack\r\n            style={{\r\n              marginTop: vh(6),\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <HStack alignItems={\"center\"}>\r\n              <Center\r\n                rounded={\"full\"}\r\n                style={{\r\n                  backgroundColor: \"white\",\r\n                  paddingVertical: vw(2),\r\n                }}\r\n              >\r\n                <Avatar\r\n                  source={{\r\n                    uri: userUri,\r\n                  }}\r\n                  style={{\r\n                    width: vw(24),\r\n                    height: vh(24),\r\n                  }}\r\n                >\r\n                  {nameFb}\r\n                </Avatar>\r\n              </Center>\r\n              <Text\r\n                style={{\r\n                  paddingTop: vh(2),\r\n                  lineHeight: vh(24),\r\n                  fontSize: vw(13),\r\n                  color: \"rgba(104, 104, 104, 1)\",\r\n                  fontFamily: \"Poppins_medium\",\r\n                  marginLeft: vw(10),\r\n                }}\r\n              >\r\n                {fullname}\r\n              </Text>\r\n            </HStack>\r\n            <HStack style={{ marginTop: vh(5) }} alignItems={\"center\"}>\r\n              <TimeIcon width={vw(24)} height={vh(24)} />\r\n              <Text\r\n                style={{\r\n                  fontSize: vw(13),\r\n                  color: \"rgba(104, 104, 104, 1)\",\r\n                  fontFamily: \"Poppins_medium\",\r\n                  lineHeight: vh(24),\r\n                }}\r\n              >\r\n                {moment(item.created).format(\"MM/DD/YYYY - hh:mm A\")}\r\n              </Text>\r\n            </HStack>\r\n          </HStack>\r\n        </VStack>\r\n      </HStack>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default HorizontalItem;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  HStack,\r\n  VStack,\r\n  Text,\r\n  Center,\r\n  Box,\r\n  Avatar,\r\n  Link,\r\n  Button,\r\n  Pressable,\r\n  CheckCircleIcon,\r\n  CircleIcon,\r\n} from \"native-base\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CDN } from \"../../../constants/Config\";\r\nimport { vw, vh } from \"../../../util\";\r\nimport CalendarWhiteIcon from \"../../../components/svg/CalendarWhiteIcon\";\r\nimport SqftIcon from \"../../../components/svg/SqftIcon\";\r\nimport AcreIcon from \"../../../components/svg/AcreIcon\";\r\nimport BedIcon from \"../../../components/svg/BedIcon\";\r\nimport BathIcon from \"../../../components/svg/BathIcon\";\r\nimport TimeIcon from \"../../../components/svg/TimeIcon\";\r\nimport moment from \"moment-timezone\";\r\nimport MarketIcon from \"../../../components/svg/MarketIcon\";\r\nimport NavCampaignIcon from \"../../../components/svg/NavCampaignIcon\";\r\nimport NavListIcon from \"../../../components/svg/NavListIcon\";\r\n// import ReportIssueIcon from \"../../../components/svg/ReportIssueIcon\";\r\nimport PriceIcon from \"../../../components/svg/PriceIcon\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport * as propertiesActions from \"../../../store/actions/properties\";\r\nimport * as events from \"../../../store/events\";\r\n\r\n\r\n\r\nconst VerticalItem = ({ item, activeList, _showAlert, selectMode }) => {\r\n  const dispatch = useDispatch();\r\n  const [isAttaching, setIsAttaching] = useState(false);\r\n  const [isSelected, setIsSelected] = useState(false);\r\n\r\n  const listCampaign = activeList && activeList.listcampaign;\r\n  var currency = new Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\",\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 0,\r\n  });\r\n  //default pic\r\n  let pic = \"1\";\r\n  if (item && item.pic) {\r\n    pic = item.pic;\r\n  }\r\n  const createdUser = item.createdUser && item.createdUser;\r\n  // user name\r\n  const fullname =\r\n    createdUser && createdUser.firstname + \" \" + createdUser.lastname;\r\n  //avatar fall back\r\n  const nameSplit = fullname.split(\" \");\r\n  const fn = nameSplit[0][0];\r\n  const ln = nameSplit[1] ? nameSplit[1][0] : \"-\";\r\n  const nameFb = fn + ln;\r\n  // avatar image source uri\r\n  const ui =\r\n    createdUser && createdUser.pic && createdUser.pic.id\r\n      ? createdUser.pic.id\r\n      : \"0\";\r\n  const userUri = `${CDN}/users/${createdUser._id}/${ui}`;\r\n  //property image uri\r\n  const propertyUri = `${CDN}/properties/${item._id ? item._id : \"-\"}/${pic}`;\r\n\r\n  let sqft = \"-\";\r\n  let acre = \"-\";\r\n  if (item.sqft) {\r\n    sqft = item.sqft !== null ? item.sqft.toString() : \"-\";\r\n  }\r\n\r\n  if (item.acre) {\r\n    acre = item.acre !== null ? item.acre.toString() : \"-\";\r\n  }\r\n  //property owner name\r\n  const name = item.name && item.name !== \"\" ? item.name.trim() : \"-\";\r\n\r\n  let campaignName = item.campaign ? item.campaign.name : null;\r\n  let showSelectBox = true;\r\n  if (campaignName) {\r\n    if (item.campaignstatus && item.campaignstatus === \"stopped\") {\r\n      campaignName = campaignName + \" (Stopped)\";\r\n      if (selectMode === \"selected:stop\") {\r\n        showSelectBox = false;\r\n      }\r\n    } else if (item.campaignstatus && item.campaignstatus === \"running\") {\r\n      campaignName = campaignName + \" (Running)\";\r\n    } else if (item.campaignstatus && item.campaignstatus === \"canceled\") {\r\n      campaignName = campaignName + \" (Canceled)\";\r\n    }\r\n  } else {\r\n    campaignName = \"Campaign not set\";\r\n  }\r\n\r\n  // const attachCampaign = async (data) => {\r\n  //   try {\r\n  //     setIsAttaching(true);\r\n  //     const action = propertiesActions.updateOutreachCampaignSettings({\r\n  //       _id: item._id,\r\n  //       campaign: listCampaign,\r\n  //     });\r\n  //     await dispatch(action);\r\n  //     setIsAttaching(false);\r\n  //     _showAlert(\r\n  //       \"success\",\r\n  //       \"List Campaign \" + listCampaign.name + \" attached successfully.\"\r\n  //     );\r\n  //   } catch (err) {\r\n  //     _showAlert(\"error\", err.message);\r\n  //     setIsAttaching(false);\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <Link\r\n      style={{\r\n        width: vw(343), //vw((window.screen.width - cols * 40) / cols), // vw(320), //  vw((window.screen.width - cols * 40) / cols),\r\n        height: vh(300),\r\n        marginHorizontal: vw(20),\r\n        marginVertical: vh(20),\r\n        // flex: 1,\r\n      }}\r\n      href={`/properties/${item._id}`}\r\n    >\r\n      {activeList.name !== \"All\" &&\r\n        selectMode &&\r\n        selectMode.includes(\"select\") &&\r\n        showSelectBox && (\r\n          <Pressable\r\n            rounded={\"full\"}\r\n            onPress={(e) => {\r\n              e.preventDefault();\r\n              e.stopPropagation();\r\n              if (global.selected && global.selected.includes(item._id)) {\r\n                global.selected = global.selected.filter((f) => f != item._id);\r\n              } else {\r\n                if (!global.selected) {\r\n                  global.selected = [item._id];\r\n                } else {\r\n                  global.selected = [...global.selected, item._id];\r\n                }\r\n              }\r\n              // setIsSelected(!isSelected);\r\n              dispatch({ type: events.SELECT_PROPERTY });\r\n            }}\r\n            style={{\r\n              position: \"absolute\",\r\n              top: -8,\r\n              left: -8,\r\n              zIndex: 99,\r\n              backgroundColor: \"white\",\r\n            }}\r\n          >\r\n            {global.selected && global.selected.includes(item._id) ? (\r\n              <CheckCircleIcon size={8} color={Colors.primary} />\r\n            ) : (\r\n              <CircleIcon size={8} color={Colors.primary} />\r\n            )}\r\n          </Pressable>\r\n        )}\r\n      <VStack\r\n        style={{\r\n          flex: 1,\r\n          width: vw(343), //  vw((window.screen.width - cols * 40) / cols),\r\n          height: vh(300),\r\n          borderRadius: vw(10),\r\n          backgroundColor: \"white\",\r\n          shadowColor: \"#000\",\r\n          shadowOffset: {\r\n            width: 0,\r\n            height: vh(3),\r\n          },\r\n          shadowOpacity: 0.15,\r\n          shadowRadius: vh(10),\r\n          elevation: vh(5),\r\n        }}\r\n      >\r\n        <Box\r\n          resizeMode='cover'\r\n          style={{\r\n            height: vh(150),\r\n            borderTopStartRadius: vw(10),\r\n            borderTopEndRadius: vw(10),\r\n            overflow: \"hidden\",\r\n            backgroundImage: `url(${propertyUri})`,\r\n            backgroundPosition: \"center\",\r\n            backgroundSize: \"cover\",\r\n            backgroundRepeat: \"no-repeat\",\r\n          }}\r\n        >\r\n          {/* {item.applyto &&\r\n            item.applyto === \"selected\" &&\r\n            listCampaign &&\r\n            listCampaign._id !== item.campaign._id && (\r\n              <Button\r\n                isLoading={isAttaching}\r\n                rounded={\"full\"}\r\n                shadow={5}\r\n                onPress={async (e) => {\r\n                  e.preventDefault();\r\n                  await attachCampaign();\r\n                }}\r\n                size={\"xs\"}\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  left: 10,\r\n                  backgroundColor: Colors.primary,\r\n                  alignItems: \"center\",\r\n                  height: 34,\r\n                  // borderRadius: 5,\r\n                }}\r\n                _text={{\r\n                  fontFamily: \"Poppins\",\r\n                  fontSize: 10,\r\n                  color: \"white\",\r\n                  lineHeight: 14,\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                {`Click to attach\\n`}\r\n                <Text\r\n                  style={{\r\n                    fontFamily: \"Poppins\",\r\n                    fontSize: 10,\r\n                    color: \"white\",\r\n                    lineHeight: 14,\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  {listCampaign && listCampaign.name}\r\n                </Text>\r\n              </Button>\r\n            )} */}\r\n\r\n          <HStack\r\n            style={{\r\n              borderRadius: 10,\r\n              position: \"absolute\",\r\n              right: 10,\r\n              top: 10,\r\n              backgroundColor: \"rgba(0,0,0, 0.30)\",\r\n            }}\r\n            alignContent={\"center\"}\r\n          >\r\n            {item.mkt && <MarketIcon />}\r\n            <PriceIcon fill='white' width={vw(24)} height={vh(24)} />\r\n            <Text\r\n              style={{\r\n                fontFamily: \"Poppins_medium\",\r\n                fontSize: vw(15),\r\n                color: \"white\",\r\n                paddingTop: vh(2),\r\n              }}\r\n            >\r\n              {item.ev ? \"  \" + currency.format(item.ev.toString()) : \"  - \"}\r\n            </Text>\r\n          </HStack>\r\n          <VStack style={{ marginTop: vh(91), marginHorizontal: vw(10) }}>\r\n            <Text\r\n              style={{\r\n                marginBottom: vh(6),\r\n                fontFamily: \"Poppins_medium\",\r\n                fontSize: vw(15),\r\n                color: \"white\",\r\n              }}\r\n            >\r\n              {name}\r\n            </Text>\r\n            <HStack justifyContent={\"space-between\"}>\r\n              <Text\r\n                style={{\r\n                  fontFamily: \"Poppins_medium\",\r\n                  fontSize: vw(10),\r\n                  color: \"white\",\r\n                  marginTop: vh(1),\r\n                }}\r\n              >\r\n                {item.propertyaddress}\r\n              </Text>\r\n              <HStack flex={1} justifyContent={\"flex-end\"}>\r\n                <Center marginTop={vh(-2)}>\r\n                  <CalendarWhiteIcon width={vw(18)} height={vh(18)} />\r\n                </Center>\r\n                <Text\r\n                  style={{\r\n                    fontFamily: \"Poppins_medium\",\r\n                    fontSize: vw(10),\r\n                    color: \"white\",\r\n                  }}\r\n                >\r\n                  {item.yearbuilt}\r\n                </Text>\r\n              </HStack>\r\n            </HStack>\r\n          </VStack>\r\n          {item.mid && (\r\n            <Center style={{ position: \"absolute\", right: 5, top: 5 }}>\r\n              <MarketIcon fill={\"#7d2be9\"} />\r\n            </Center>\r\n          )}\r\n        </Box>\r\n\r\n        <HStack\r\n          style={{\r\n            marginHorizontal: vw(14),\r\n            marginTop: vh(20),\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-around\",\r\n          }}\r\n        >\r\n          {/*Sqft*/}\r\n          <HStack style={{ alignItems: \"center\" }}>\r\n            <SqftIcon width={vw(24)} height={vh(24)} />\r\n            <Text\r\n              style={{\r\n                color: \"#919191\",\r\n                fontFamily: \"Poppins_medium\",\r\n                fontSize: vw(13),\r\n                lineHeight: vh(24),\r\n                marginTop: vh(1),\r\n              }}\r\n            >\r\n              {sqft}\r\n            </Text>\r\n          </HStack>\r\n          {/*Acre*/}\r\n          <HStack style={{ marginHorizontal: vw(14), alignItems: \"center\" }}>\r\n            <AcreIcon width={vw(24)} height={vh(24)} />\r\n            <Text\r\n              style={{\r\n                color: \"#919191\",\r\n                fontFamily: \"Poppins_medium\",\r\n                fontSize: vw(13),\r\n                lineHeight: vh(24),\r\n                marginTop: vh(1),\r\n              }}\r\n            >\r\n              {acre === \"-\" ? acre : parseFloat(acre).toFixed(4)}\r\n            </Text>\r\n          </HStack>\r\n          {/*Bed*/}\r\n          <HStack\r\n            style={{\r\n              marginLeft: vw(14),\r\n              marginRight: vw(7),\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <BedIcon width={vw(24)} height={vh(24)} />\r\n            <Text\r\n              style={{\r\n                color: \"#919191\",\r\n                fontFamily: \"Poppins_medium\",\r\n                fontSize: vw(13),\r\n                lineHeight: vh(24),\r\n                marginTop: vh(1),\r\n              }}\r\n            >\r\n              {item.bed}\r\n            </Text>\r\n          </HStack>\r\n          {/*Bath*/}\r\n          <HStack style={{ marginHorizontal: vw(7), alignItems: \"center\" }}>\r\n            <BathIcon width={vw(24)} height={vh(24)} />\r\n            <Text\r\n              style={{\r\n                color: \"#919191\",\r\n                fontFamily: \"Poppins_medium\",\r\n                fontSize: vw(13),\r\n                lineHeight: vh(24),\r\n                marginTop: vh(1),\r\n              }}\r\n            >\r\n              {item.bath}\r\n            </Text>\r\n          </HStack>\r\n        </HStack>\r\n\r\n        {/* Status and #id */}\r\n        <HStack\r\n          style={{\r\n            marginTop: vh(5),\r\n            marginHorizontal: vw(20),\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Text\r\n            style={{\r\n              fontSize: vw(15),\r\n              fontFamily: \"Poppins_medium\",\r\n              color: \"rgba(125, 43, 233, 1)\",\r\n            }}\r\n          >\r\n            {item.status && item.status.name}\r\n          </Text>\r\n          <Text\r\n            style={{\r\n              fontSize: vw(15),\r\n              fontFamily: \"Poppins_medium\",\r\n              color: \"rgba(125, 43, 233, 1)\",\r\n            }}\r\n          >\r\n            {\"#\" + item.tid}\r\n          </Text>\r\n        </HStack>\r\n        <HStack\r\n          style={{\r\n            marginTop: vh(10),\r\n            marginHorizontal: vw(20),\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Text\r\n            style={{\r\n              fontSize: vw(12),\r\n              fontFamily: \"Poppins_medium\",\r\n              color:\r\n                !item.campaign ||\r\n                item.campaignstatus === \"stopped\" ||\r\n                item.campaignstatus === \"canceled\"\r\n                  ? \"rgba(0,0,0,0.3)\"\r\n                  : Colors.primary,\r\n            }}\r\n          >\r\n            {/* {item.campaign && Object.keys(item.campaign).length > 0 ? (\r\n              <HStack space={1}>\r\n                <NavCampaignIcon width={16} height={16} />{\" \"}\r\n                {item.campaign && item.campaign.name}\r\n              </HStack>\r\n            ) : (\r\n              <HStack>\r\n                <ReportIssueIcon width={16} height={16} /> No Campaign attached\r\n              </HStack>\r\n            )} */}\r\n            <HStack space={1}>\r\n              <NavCampaignIcon\r\n                fill={\r\n                  !item.campaign ||\r\n                  item.campaignstatus === \"stopped\" ||\r\n                  item.campaignstatus === \"canceled\" ||\r\n                  item.campaignstatus === \"notset\"\r\n                    ? \"rgba(0,0,0,0.3)\"\r\n                    : Colors.primary\r\n                }\r\n                width={16}\r\n                height={16}\r\n              />{\" \"}\r\n              <Text\r\n                style={{\r\n                  color:\r\n                    !item.campaign ||\r\n                    item.campaignstatus === \"stopped\" ||\r\n                    item.campaignstatus === \"canceled\" ||\r\n                    item.campaignstatus === \"notset\"\r\n                      ? \"rgba(0,0,0,0.3)\"\r\n                      : Colors.primary,\r\n                }}\r\n              >\r\n                {campaignName}\r\n              </Text>\r\n            </HStack>\r\n          </Text>\r\n          <Text\r\n            style={{\r\n              fontSize: vw(12),\r\n              fontFamily: \"Poppins_medium\",\r\n              color: \"rgba(145, 145, 145, 1)\",\r\n            }}\r\n          >\r\n            <HStack space={1}>\r\n              <NavListIcon width={16} height={16} />{\" \"}\r\n              {item.list ? item.list.name : \"-\"}\r\n              {console.log(\"ITEM LIST NAME\", item.list)}\r\n            </HStack>\r\n          </Text>\r\n        </HStack>\r\n\r\n        {/* User Block */}\r\n        <HStack\r\n          style={{\r\n            marginHorizontal: vw(20),\r\n            justifyContent: \"space-between\",\r\n            marginTop: vh(5),\r\n          }}\r\n        >\r\n          <HStack>\r\n            <Center\r\n              rounded={\"full\"}\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                paddingVertical: vw(2),\r\n\r\n                marginRight: vw(10),\r\n              }}\r\n            >\r\n              <Avatar\r\n                source={{\r\n                  uri: userUri,\r\n                }}\r\n                style={{\r\n                  width: vw(24),\r\n                  height: vh(24),\r\n                }}\r\n              >\r\n                {nameFb}\r\n              </Avatar>\r\n            </Center>\r\n            {/* <Text\r\n              style={{\r\n                paddingTop: vh(2),\r\n                lineHeight: vh(fullname.length > 10 ? 12 : 24),\r\n                fontSize: vw(13),\r\n                color: \"rgba(104, 104, 104, 1)\",\r\n                fontFamily: \"Poppins_medium\",\r\n                width: vw(100),\r\n                wordWrap: \"break-word\",\r\n              }}\r\n            >\r\n              {fullname}\r\n            </Text> */}\r\n          </HStack>\r\n          <HStack style={{ alignItems: \"center\" }}>\r\n            <TimeIcon />\r\n            <Text\r\n              style={{\r\n                // paddingTop: vh(2),\r\n                lineHeight: vh(24),\r\n                fontSize: vw(13),\r\n                color: \"rgba(104, 104, 104, 1)\",\r\n                fontFamily: \"Poppins_medium\",\r\n              }}\r\n            >\r\n              {moment(item.created).format(\"MM/DD/YYYY - hh:mm A a\")}\r\n            </Text>\r\n          </HStack>\r\n        </HStack>\r\n      </VStack>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default VerticalItem;\r\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  Center,\r\n  Spinner,\r\n  Pressable,\r\n  FlatList,\r\n  View,\r\n  Checkbox,\r\n  Input,\r\n} from \"native-base\";\r\n\r\nimport * as events from \"../../../store/events\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport { API_URL } from \"../../../constants/Config\";\r\nimport ShadowPagination from \"../../../components/ShadowPagination\";\r\nimport { vh, vw } from \"../../../util\";\r\nimport SearchIcon from \"../../../components/svg/SearchIcon\";\r\nimport CloseIcon from \"../../../components/svg/CloseIcon\";\r\n\r\nconst getUser = () => {\r\n  if (localStorage.getItem(\"@shadowuser\") !== null) {\r\n    const user = JSON.parse(localStorage.getItem(\"@shadowuser\"));\r\n    return user;\r\n  }\r\n};\r\n\r\nconst AddContacts = ({ list, lists, _showAlert, dispatch }) => {\r\n  const sRef = useRef();\r\n  const cRef = useRef();\r\n  const [page, setPage] = useState(1);\r\n  const [total, setTotal] = useState(0);\r\n  const [limit, setLimit] = useState(50);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [reload, setReload] = useState(false);\r\n  const [pIsSav] = useState({});\r\n  const [search, setSearch] = useState(\"\");\r\n  const [properties, setProperties] = useState([]);\r\n\r\n  const _getData = useCallback(async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const filter = {\r\n        // fromdate: moment(fromDate).format(\"YYYY-MM-DD\"),\r\n        // todata: moment(toDate).format(\"YYYY-MM-DD\"),\r\n        inList: list,\r\n        ninList: lists,\r\n      };\r\n\r\n      // console.log(filter);\r\n\r\n      const { token } = getUser();\r\n\r\n      const response = await fetch(`${API_URL}/properties/get`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n        body: JSON.stringify({\r\n          skip: page === 1 ? 0 : (page - 1) * parseInt(limit),\r\n          limit: parseInt(limit),\r\n          search,\r\n          filter,\r\n          fields: {\r\n            _id: 1,\r\n            name: 1,\r\n            owneraddress: 1,\r\n            tid: 1,\r\n            \"createdUser._id\": 1,\r\n            \"createdUser.firstname\": 1,\r\n            \"createdUser.lastname\": 1,\r\n            propertyaddress: 1,\r\n            notes: 1,\r\n            created: 1,\r\n            list: 1,\r\n          },\r\n          sort: { tid: -1 },\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errData = await response.json();\r\n        console.log(errData);\r\n        let message = \"Something went wrong!\";\r\n        if (errData.error) {\r\n          message = errData.error;\r\n        } else {\r\n          throw new Error(message);\r\n        }\r\n      } else {\r\n        const resData = await response.json();\r\n        console.log(\"List Add Contacts\", resData);\r\n        if (resData.data && resData.data.length > 0) {\r\n          setTotal(resData.count);\r\n          setProperties([...resData.data]);\r\n        }\r\n      }\r\n\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n      setIsLoading(false);\r\n      _showAlert(\"error\", err.message);\r\n    }\r\n  }, [limit, page, search, _showAlert, list, lists]);\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    if (!unmounted) {\r\n      _getData();\r\n    }\r\n    return () => {\r\n      unmounted = false;\r\n    };\r\n  }, [page, search, _getData]);\r\n\r\n  const NoItemsFound = () => {\r\n    return (\r\n      <Center style={{ minHeight: vh(300) }}>\r\n        <Text>No Contacts found!</Text>\r\n      </Center>\r\n    );\r\n  };\r\n\r\n  const RenderItem = ({ item, list }) => {\r\n    // console.log(item.list && item.list._id)\r\n    const listRef = useRef(item.list);\r\n    const [inList, setInList] = useState(item.list && item.list._id === list);\r\n    const createdUser = item.createdUser;\r\n    const saveProperty = async (p, del = false) => {\r\n      try {\r\n        global.isChanged = true;\r\n        if (p._id) {\r\n          if (!del) {\r\n            const data = {\r\n              property: p._id,\r\n              list,\r\n              data: {\r\n                _id: p._id,\r\n                created: p.created,\r\n                createdUser: {\r\n                  _id: p.createdUser._id,\r\n                  firstname: p.createdUser.firstname,\r\n                  lastname: p.createdUser.lastname,\r\n                },\r\n                name: p.name,\r\n                notes: p.notes,\r\n                propertyaddress: p.propertyaddress,\r\n                tid: p.tid,\r\n              },\r\n            };\r\n            dispatch({ type: events.ADD_LIST_PROPERTY_SAGA, data });\r\n            listRef.current = true;\r\n            setInList(true);\r\n          } else {\r\n            const data = {\r\n              property: p._id,\r\n              list,\r\n            };\r\n            dispatch({\r\n              type: events.REMOVE_LIST_PROPERTY_SAGA,\r\n              data,\r\n            });\r\n            listRef.current = false;\r\n            setInList(false);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.log(\"Created Error\", err);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Pressable\r\n        style={{\r\n          borderBottomColor: \"rgba(0,0,0, 0.15)\",\r\n          borderBottomWidth: 1,\r\n          paddingVertical: 5,\r\n        }}\r\n        onPress={() => {\r\n          saveProperty(item, inList);\r\n        }}\r\n      >\r\n        <Box\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-around\",\r\n            borderRadius: 5,\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              justifyContent: \"center\",\r\n              width: \"15%\",\r\n            }}\r\n          >\r\n            {pIsSav[item._id] ? (\r\n              <Spinner size={\"small\"} color={Colors.primary} />\r\n            ) : (\r\n              <Center>\r\n                <Checkbox\r\n                  size={\"sm\"}\r\n                  accessibilityLabel='Select contact'\r\n                  isChecked={inList}\r\n                  colorScheme='purple'\r\n                />\r\n              </Center>\r\n            )}\r\n          </View>\r\n          <View style={{ width: \"85%\" }}>\r\n            <Text\r\n              style={{\r\n                fontSize: 14,\r\n                color: Colors.primary,\r\n                fontFamily: \"Poppins\",\r\n              }}\r\n            >\r\n              {item.name + \" (#\" + item.tid + \")\"}\r\n            </Text>\r\n            <Text\r\n              style={{\r\n                color: \"#414141\",\r\n                fontSize: 12,\r\n                fontFamily: \"Poppins\",\r\n              }}\r\n            >\r\n              {item.owneraddress}\r\n            </Text>\r\n            <Text\r\n              style={{\r\n                color: \"#414141\",\r\n                fontSize: 10,\r\n                fontFamily: \"Poppins\",\r\n              }}\r\n            >\r\n              {\"Added By \" + createdUser.firstname + \" \" + createdUser.lastname}\r\n            </Text>\r\n          </View>\r\n        </Box>\r\n      </Pressable>\r\n    );\r\n  };\r\n\r\n  const _onSubmitEditing = (e) => {\r\n    if (e.nativeEvent.text === \"\") {\r\n      return;\r\n    }\r\n    // setIsLoading(true);\r\n    setProperties([]);\r\n    setPage(1);\r\n    setSearch(e.nativeEvent.text);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      flex={1}\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        paddingBottom: vh(10),\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      {total > 0 && (\r\n        <Center style={{ marginVertical: vh(20), width: \"100%\" }}>\r\n          <Input\r\n            w={\"full\"}\r\n            ref={sRef}\r\n            autoComplete='Off'\r\n            rounded={\"full\"}\r\n            variant='outline'\r\n            size={\"xs\"}\r\n            placeholder='Search by #id/name/address'\r\n            onSubmitEditing={_onSubmitEditing}\r\n            onChangeText={(v) => {\r\n              cRef.current.style.visibility = v !== \"\" ? \"visible\" : \"hidden\";\r\n              if (v === \"\") {\r\n                setSearch(\"\");\r\n                setPage(1);\r\n                setProperties([]);\r\n                sRef.current.value = \"\";\r\n              }\r\n            }}\r\n            style={{\r\n              height: vh(36),\r\n              fontSize: vw(13),\r\n              fontFamily: \"Poppins\",\r\n              flex: 1,\r\n            }}\r\n            leftElement={\r\n              <Center style={{ marginLeft: vw(10) }}>\r\n                <SearchIcon width={18} height={18} fill={Colors.primary} />\r\n              </Center>\r\n            }\r\n            rightElement={\r\n              <Pressable\r\n                ref={cRef}\r\n                onPress={() => {\r\n                  if (search !== \"\") {\r\n                    setSearch(\"\");\r\n                    setPage(1);\r\n                    setProperties([]);\r\n                  }\r\n                  sRef.current.value = \"\";\r\n                  cRef.current.style.visibility = \"hidden\";\r\n                }}\r\n                style={{\r\n                  marginRight: vw(10),\r\n                  visibility: \"hidden\",\r\n                }}\r\n              >\r\n                <CloseIcon />\r\n              </Pressable>\r\n            }\r\n          />\r\n        </Center>\r\n      )}\r\n      {isLoading ? (\r\n        <Center style={{ minHeight: vh(396) }}>\r\n          <Spinner size='small' color={Colors.primary} />\r\n        </Center>\r\n      ) : (\r\n        <FlatList\r\n          contentContainerStyle={{\r\n            backgroundColor: \"white\",\r\n            width: \"100%\",\r\n            minHeight: vh(500),\r\n            // marginHorizontal: vh(10),\r\n            marginBottom: vh(60),\r\n            marginTop: vh(10),\r\n          }}\r\n          ListEmptyComponent={<NoItemsFound />}\r\n          style={{ marginTop: 0 }}\r\n          data={properties}\r\n          keyExtractor={(item) => item._id}\r\n          renderItem={({ item }) => (\r\n            <RenderItem\r\n              item={item}\r\n              list={list}\r\n              lists={lists}\r\n              setReload={setReload}\r\n              reload={reload}\r\n              setIsSaving={setIsSaving}\r\n              isSaving={isSaving}\r\n              setProperties={setProperties}\r\n            />\r\n          )}\r\n          initialNumToRender={50}\r\n          maxToRenderPerBatch={50}\r\n        />\r\n      )}\r\n      {total > 0 && (\r\n        <ShadowPagination\r\n          limit={limit}\r\n          setLimit={setLimit}\r\n          total={total}\r\n          page={page}\r\n          setPage={setPage}\r\n          setIsLoading={setIsLoading}\r\n          style={{\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            marginHorizontal: 0,\r\n            width: \"100%\",\r\n            zoom: \"70%\",\r\n          }}\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(AddContacts, (p, n) => {\r\n  // console.log(p.pipeline, \"prev\", n.pipeline, \"new\");\r\n  return true;\r\n});\r\n","import React, {\r\n  useEffect,\r\n  useState,\r\n  useCallback,\r\n  useContext,\r\n  useRef,\r\n} from \"react\";\r\nimport {\r\n  VStack,\r\n  HStack,\r\n  Text,\r\n  Pressable,\r\n  FlatList,\r\n  Center,\r\n  useToast,\r\n  Spinner,\r\n  Actionsheet,\r\n  useDisclose,\r\n  Menu,\r\n  useBreakpointValue,\r\n  useMediaQuery,\r\n  Hidden,\r\n  Badge,\r\n  Button,\r\n  Radio,\r\n  Checkbox,\r\n  Switch,\r\n  Input,\r\n  Tooltip,\r\n  HamburgerIcon,\r\n  Select,\r\n} from \"native-base\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport _ from \"lodash\";\r\nimport moment from \"moment-timezone\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport NavBar from \"../home/NavBar\";\r\nimport { vw, vh } from \"../../../util\";\r\nimport * as listsActions from \"../../../store/actions/lists\";\r\nimport * as propertiesActions from \"../../../store/actions/properties\";\r\nimport * as events from \"../../../store/events\";\r\n\r\nimport ShadowPagination from \"../../../components/ShadowPagination\";\r\nimport HorizontalItem from \"./HorizontalItem\";\r\nimport VerticalItem from \"./VerticalItem\";\r\nimport ShadowModal from \"../../../components/ShadowModal\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport AcreIcon from \"../../../components/svg/AcreIcon\";\r\nimport FilterIcon from \"../../../components/svg/FilterIcon\";\r\nimport NavListIcon from \"../../../components/svg/NavListIcon\";\r\nimport AddIcon from \"../../../components/svg/AddIcon\";\r\nimport SearchIcon from \"../../../components/svg/SearchIcon\";\r\nimport CloseIcon from \"../../../components/svg/CloseIcon\";\r\nimport NotesIcon from \"../../../components/svg/NotesIcon\";\r\nimport AddContacts from \"./AddContacts\";\r\nimport SocketContext from \"../../../context/index\";\r\nimport ShadowButton from \"../../../components/ShadowButton\";\r\nimport DropDownIcon from \"../../../components/svg/DropDownIcon\";\r\nimport AddList from \"./AddList\";\r\nimport ReportIssueIcon from \"../../../components/svg/ReportIssueIcon\";\r\n\r\nconst setOrientation = (orientation) => {\r\n  const a = localStorage.getItem(\"@orientation\");\r\n  if (a) {\r\n    const x = JSON.parse(a);\r\n    localStorage.setItem(\r\n      \"@orientation\",\r\n      JSON.stringify({\r\n        ...x,\r\n        lists: orientation,\r\n      })\r\n    );\r\n  } else {\r\n    localStorage.setItem(\r\n      \"@orientation\",\r\n      JSON.stringify({\r\n        properties: orientation,\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nconst getOrientation = (page) => {\r\n  const a = localStorage.getItem(\"@orientation\");\r\n  if (a) {\r\n    const x = JSON.parse(a);\r\n    return x[page] ? x[page] : \"vertical\";\r\n  } else {\r\n    return \"vertical\";\r\n  }\r\n};\r\n\r\nconst setCurrentList = (list) => {\r\n  const a = localStorage.getItem(\"@currentList\");\r\n  localStorage.setItem(\"@currentList\", JSON.stringify(list));\r\n};\r\n\r\nconst getCurrentList = (list) => {\r\n  const a = localStorage.getItem(\"@currentList\");\r\n  return JSON.parse(a);\r\n};\r\n\r\nconst ShadowDropDown = ({\r\n  data,\r\n  label,\r\n  precomponent = null,\r\n  setFilters,\r\n  defaultFilter,\r\n  filters,\r\n  k,\r\n  radio,\r\n  setPage,\r\n  list,\r\n}) => {\r\n  const mRef = useRef();\r\n  const dispatch = useDispatch();\r\n  const [opened, setOpened] = useState(false);\r\n  let right = 0;\r\n  if (k === \"bed\") {\r\n    right = 4;\r\n  } else if (k === \"bath\") {\r\n    right = 14;\r\n  } else if (k === \"sqft\") {\r\n    right = 28;\r\n  } else if (k === \"acre\") {\r\n    right = 42;\r\n  } else if (k === \"year\") {\r\n    right = 63;\r\n  } else if (k === \"ev\") {\r\n    right = 82;\r\n  } else if (k === \"tags\") {\r\n    right = 108;\r\n  } else if (k === \"status\") {\r\n    right = 122;\r\n  } else if (k === \"sort\") {\r\n    right = 164;\r\n  }\r\n\r\n  return (\r\n    <Menu\r\n      ref={mRef}\r\n      onOpen={() => {\r\n        setOpened(true);\r\n      }}\r\n      onClose={() => {\r\n        setOpened(false);\r\n      }}\r\n      shouldOverlapWithTrigger={false}\r\n      trigger={(triggerProps) => {\r\n        return (\r\n          <VStack>\r\n            {filters &&\r\n              filters[list] &&\r\n              filters[list][k] &&\r\n              k !== \"sort\" &&\r\n              filters[list][k].length > 0 && (\r\n                <Badge\r\n                  bg={Colors.primary}\r\n                  rounded='full'\r\n                  // mb={-1}\r\n                  // mr={-4}\r\n                  zIndex={997}\r\n                  variant='solid'\r\n                  alignSelf='flex-end'\r\n                  _text={{\r\n                    fontSize: 10,\r\n                  }}\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: vh(-10),\r\n                    right: vw(-4),\r\n                    // marginTop: vh(-45),\r\n                  }}\r\n                >\r\n                  {filters[list][k] && filters[list][k].length}\r\n                </Badge>\r\n              )}\r\n            {filters[list] &&\r\n              filters[list][k] &&\r\n              k === \"sort\" &&\r\n              filters[list][k] !== \"\" && (\r\n                <Badge\r\n                  bg={Colors.primary}\r\n                  rounded='full'\r\n                  // mb={-1}\r\n                  // mr={-4}\r\n                  zIndex={997}\r\n                  variant='solid'\r\n                  alignSelf='flex-end'\r\n                  _text={{\r\n                    fontSize: 10,\r\n                  }}\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: vh(-10),\r\n                    right: vw(-4),\r\n                    // marginTop: vh(-45),\r\n                  }}\r\n                >\r\n                  {1}\r\n                </Badge>\r\n              )}\r\n            <Button\r\n              accessibilityLabel='More options menu'\r\n              {...triggerProps}\r\n              variant='unstyled'\r\n              _text={{\r\n                fontSize: vw(13),\r\n                fontFamily: \"Poppins_medium\",\r\n                color: opened ? Colors.primary : \"rgba(102, 102, 102, 1)\",\r\n              }}\r\n              style={{\r\n                height: vh(36),\r\n                // width: vh(100),\r\n                backgroundColor: \"white\",\r\n                alignItems: \"center\",\r\n                zIndex: 995,\r\n                borderRadius: 10,\r\n                boxShadow: \"0px 2px 8px rgba(0, 0, 0, 0.1)\",\r\n                marginHorizontal: vw(5),\r\n                marginVertical: vh(5),\r\n              }}\r\n              rightIcon={<DropDownIcon />}\r\n            >\r\n              {label}\r\n            </Button>\r\n          </VStack>\r\n        );\r\n      }}\r\n      style={{\r\n        // position:\"absolute\",\r\n        minWidth: vw(100),\r\n        maxWidth: vh(200),\r\n        // width: vw(300),\r\n        maxHeight: vh(400),\r\n        right: vw(right),\r\n        top: vh(-24),\r\n      }}\r\n    >\r\n      {precomponent && precomponent}\r\n      {radio ? (\r\n        <Radio.Group\r\n          name='sort'\r\n          value={filters[list] && filters[list][\"sort\"]}\r\n          defaultValue={filters[list] && filters[list][\"sort\"]}\r\n          onChange={(value) => {\r\n            setFilters((f) => {\r\n              let v = f[list];\r\n              if (!v) {\r\n                v = defaultFilter;\r\n              }\r\n              v[\"sort\"] = value;\r\n              v[\"ts\"] = moment().valueOf();\r\n              dispatch({\r\n                type: events.FILTER_LAST_UPDATED,\r\n                data: moment().valueOf(),\r\n              });\r\n              setPage((p) => {\r\n                p[list] = 1;\r\n                return p;\r\n              });\r\n              localStorage.setItem(\"@listFilter:\" + list, JSON.stringify(v));\r\n              f[list] = v;\r\n              return f;\r\n            });\r\n            //setRefresh((r) => !r);\r\n          }}\r\n        >\r\n          {data &&\r\n            data.map((b) => {\r\n              let v = \"\";\r\n              if (b === \"#ID\") {\r\n                v = \"_id\";\r\n              } else if (b === \"Owner Name\") {\r\n                v = \"name\";\r\n              } else if (b === \"User\") {\r\n                v = \"user\";\r\n              }\r\n              return (\r\n                <Radio key={\"r-\" + v} size='sm' mx={1} my={1} value={v}>\r\n                  <Text\r\n                    style={{\r\n                      fontSize: vw(13),\r\n                      fontFamily: \"Poppins_medium\",\r\n                      color: \"rgba(102, 102, 102, 1)\",\r\n                      marginTop: vh(2),\r\n                    }}\r\n                  >\r\n                    {b}\r\n                  </Text>\r\n                </Radio>\r\n              );\r\n            })}\r\n        </Radio.Group>\r\n      ) : (\r\n        data &&\r\n        data.map((b) => {\r\n          const key = k === \"status\" || k === \"tags\" ? b._id : \"p-\" + b;\r\n          const value = k === \"status\" || k === \"tags\" ? b._id : b;\r\n          const label = k === \"status\" || k === \"tags\" ? b.name : b;\r\n\r\n          return (\r\n            <Pressable\r\n              key={key}\r\n              style={{ marginHorizontal: vh(10), marginVertical: 5 }}\r\n            >\r\n              <HStack space={4}>\r\n                <Checkbox\r\n                  colorScheme={\"purple\"}\r\n                  isChecked={\r\n                    filters &&\r\n                    filters[list] &&\r\n                    filters[list][k] &&\r\n                    filters[list][k].includes(value)\r\n                  }\r\n                  onChange={(val) => {\r\n                    if (val) {\r\n                      setFilters((f) => {\r\n                        let v = f[list];\r\n                        if (!v) {\r\n                          v = defaultFilter;\r\n                        }\r\n                        v[k].push(value);\r\n                        v[\"ts\"] = moment().valueOf();\r\n                        setPage((p) => {\r\n                          p[list] = 1;\r\n                          return p;\r\n                        });\r\n                        dispatch({\r\n                          type: events.FILTER_LAST_UPDATED,\r\n                          data: moment().valueOf(),\r\n                        });\r\n                        localStorage.setItem(\r\n                          \"@listFilter:\" + list,\r\n                          JSON.stringify(v)\r\n                        );\r\n                        f[list] = v;\r\n                        return f;\r\n                      });\r\n                    } else {\r\n                      setFilters((f) => {\r\n                        let v = f[list];\r\n                        if (!v) {\r\n                          v = defaultFilter;\r\n                        }\r\n                        v[k] = v[k].filter((f) => f !== value);\r\n                        v[\"ts\"] = moment().valueOf();\r\n                        setPage((p) => {\r\n                          p[list] = 1;\r\n                          return p;\r\n                        });\r\n                        dispatch({\r\n                          type: events.FILTER_LAST_UPDATED,\r\n                          data: moment().valueOf(),\r\n                        });\r\n                        localStorage.setItem(\r\n                          \"@listFilter:\" + list,\r\n                          JSON.stringify(v)\r\n                        );\r\n                        f[list] = v;\r\n                        return f;\r\n                      });\r\n                    }\r\n                    // setRefresh((r) => !r);\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: vw(13),\r\n                      fontFamily: \"Poppins_medium\",\r\n                      color: \"rgba(102, 102, 102, 1)\",\r\n                      marginTop: vh(2),\r\n                    }}\r\n                  >\r\n                    {label}\r\n                  </Text>\r\n                </Checkbox>\r\n              </HStack>\r\n            </Pressable>\r\n          );\r\n        })\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst PageHeader = ({\r\n  activeList,\r\n  lists,\r\n  listStyle,\r\n  setListStyle,\r\n  _showAlert,\r\n  list,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  // const socket = useContext(socketContext);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isOpenMove, setIsOpenMove] = useState(false);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [isHover, setIsHover] = useState(null);\r\n\r\n  const deleteHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      setIsDeleting(true);\r\n      const _id = list;\r\n      const action = listsActions.deleteList(_id, null);\r\n      await dispatch(action);\r\n      setIsDeleting(false);\r\n      _showAlert(\"success\", \"List deleted successfully.\");\r\n      setIsOpen(false);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n      setIsDeleting(false);\r\n      _showAlert(\"error\", \"An error occured, cannot delete list.\");\r\n    }\r\n  };\r\n\r\n  const moveHandler = async (f, t) => {\r\n    try {\r\n      const action = listsActions.moveList(\r\n        {\r\n          from: f,\r\n          to: t,\r\n        },\r\n        null\r\n      );\r\n      await dispatch(action);\r\n      setIsOpenMove(false);\r\n    } catch (err) {\r\n      // setIsSaving(false);\r\n      console.log(\"move list error\", err);\r\n      _showAlert(\"error\", \"An error occured, cannot move list.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack\r\n      style={{\r\n        zIndex: 999,\r\n        marginTop: vh(-10),\r\n      }}\r\n    >\r\n      {/* For Big Screens */}\r\n      <Hidden only={[\"sm\", \"base\", \"md\"]}>\r\n        <HStack\r\n          style={{\r\n            height: vh(84),\r\n            marginHorizontal: vw(20),\r\n            borderBottomColor: \"rgba(0,0,0,0.15)\",\r\n            borderBottomWidth: 1,\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Text\r\n            style={{\r\n              fontSize: vw(24),\r\n              paddingTop: vh(10),\r\n              color: \"#303030\",\r\n              fontFamily: \"Poppins_medium\",\r\n            }}\r\n          >\r\n            Lists\r\n          </Text>\r\n          {/* <Hidden only={[\"base\", \"sm\", \"md\"]}> */}\r\n          <HStack\r\n            style={{\r\n              flexWrap: \"wrap\",\r\n              width: vw(window.screen.width - 400),\r\n              justifyContent: \"center\",\r\n              zoom: \"85%\",\r\n              marginTop: vh(20),\r\n              paddingHorizontal: vh(10),\r\n            }}\r\n          >\r\n            {lists.map((p) => (\r\n              <HStack\r\n                key={\"pl-\" + p._id}\r\n                style={{\r\n                  justifyContent: \"space-between\",\r\n                  height: vh(40),\r\n                }}\r\n              >\r\n                <Tooltip\r\n                  style={{\r\n                    marginLeft: -100,\r\n                    marginTop: -30,\r\n                    backgroundColor: Colors.primary,\r\n                  }}\r\n                  placement={\"bottom\"}\r\n                  isDisabled={p.name === \"All\" || p.campaign}\r\n                  label={\"Campaign not attached\"}\r\n                  openDelay={100}\r\n                >\r\n                  <Pressable\r\n                    key={\"h-\" + p._id}\r\n                    onPress={(e) => {\r\n                      e.preventDefault();\r\n                      setCurrentList(p);\r\n                      delete global.selected;\r\n                      dispatch({ type: events.SET_ACTIVE_LIST, data: p });\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      key={p._id}\r\n                      style={{\r\n                        fontSize: vw(15),\r\n                        // paddingTop: vh(40),\r\n                        paddingHorizontal: vw(10),\r\n                        color: \"#303030\",\r\n                        fontFamily: \"Poppins_medium\",\r\n                        marginHorizontal: vw(12),\r\n                        paddingBottom: vh(5),\r\n                        borderBottomWidth:\r\n                          activeList && list === p._id ? vh(4) : 0,\r\n                        borderBottomColor: \"rgba(125, 43, 233, 1)\",\r\n                      }}\r\n                    >\r\n                      {p.campaign ? (\r\n                        p.name\r\n                      ) : p.name !== \"All\" ? (\r\n                        <HStack title={\"No campaign attached\"} space={1}>\r\n                          {p.name} <ReportIssueIcon />\r\n                        </HStack>\r\n                      ) : (\r\n                        p.name\r\n                      )}\r\n                    </Text>\r\n                  </Pressable>\r\n                </Tooltip>\r\n              </HStack>\r\n            ))}\r\n          </HStack>\r\n          {/* </Hidden> */}\r\n\r\n          <HStack\r\n            style={{ marginTop: vh(-20) }}\r\n            justifyContent='flex-end'\r\n            space={2}\r\n          >\r\n            {lists && lists.length > 0 && (\r\n              <Hidden only={[\"base\", \"sm\", \"md\"]}>\r\n                <Pressable\r\n                  bg={{\r\n                    linearGradient: {\r\n                      colors: [\"lightBlue.300\", \"violet.800\"],\r\n                      start: [0, 0],\r\n                      end: [1, 0],\r\n                    },\r\n                  }}\r\n                  onPress={() => {\r\n                    setListStyle(\r\n                      listStyle === \"vertical\" ? \"horizontal\" : \"vertical\"\r\n                    );\r\n                    setOrientation(\r\n                      listStyle === \"vertical\" ? \"horizontal\" : \"vertical\"\r\n                    );\r\n                  }}\r\n                  rounded={\"full\"}\r\n                  style={{\r\n                    marginTop: vh(30),\r\n                    height: vh(36),\r\n                    width: vh(36),\r\n                    borderColor: \"rgba(0, 0, 0, 0.15)\",\r\n                    borderWidth: 1,\r\n                    // backgroundColor: \"transparent\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  {listStyle === \"vertical\" ? <AcreIcon /> : <NavListIcon />}\r\n                </Pressable>\r\n              </Hidden>\r\n            )}\r\n            <Pressable\r\n              bg={{\r\n                linearGradient: {\r\n                  colors: [\"lightBlue.300\", \"violet.800\"],\r\n                  start: [0, 0],\r\n                  end: [1, 0],\r\n                },\r\n              }}\r\n              onPress={(e) => {\r\n                e.preventDefault();\r\n                setShowModal(true);\r\n              }}\r\n              rounded={\"full\"}\r\n              style={{\r\n                marginTop: vh(30),\r\n                height: vh(36),\r\n                width: vh(36),\r\n                borderColor: \"rgba(0, 0, 0, 0.15)\",\r\n                borderWidth: 1,\r\n                // backgroundColor: \"transparent\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <AddIcon fill={\"rgba(0, 0, 0, 0.5)\"} />\r\n            </Pressable>\r\n\r\n            {/* <Menu\r\n              placement='left top'\r\n              borderRadius={vw(10)}\r\n              borderWidth={0}\r\n              marginTop={vh(40)}\r\n              marginRight={vw(-20)}\r\n              backgroundColor={\"white\"}\r\n              trigger={(triggerProps) => {\r\n                return (\r\n                  <Pressable\r\n                    accessibilityLabel='More options menu'\r\n                    {...triggerProps}\r\n                    style={{\r\n                      // position: \"absolute\",\r\n                      // right: 0,\r\n                      // top: vh(30),\r\n                      marginTop: vh(35),\r\n                    }}\r\n                  >\r\n                    <MoreIcon />\r\n                  </Pressable>\r\n                );\r\n              }}\r\n            >\r\n              <Menu.Item\r\n                onHoverIn={() => {\r\n                  setIsHover(\"add\");\r\n                }}\r\n                onHoverOut={() => {\r\n                  setIsHover(null);\r\n                }}\r\n                background={\"none\"}\r\n                // _pressed={{\r\n                //   borderWidth: 1,\r\n                //   borderColor: Colors.primary,\r\n                //   borderRadius: 50,\r\n                //   backgroundColor: \"white\",\r\n                // }}\r\n                borderWidth={1}\r\n                borderColor='transparent'\r\n                onPress={async (e) => {\r\n                  e.preventDefault();\r\n                  setShowModal(true);\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    textAlign: \"left\",\r\n                    fontFamily: \"Poppins\",\r\n                    color: isHover === \"add\" ? Colors.primary : \"#686868\",\r\n                    fontSize: vw(15),\r\n                  }}\r\n                >\r\n                  Add\r\n                </Text>\r\n              </Menu.Item>\r\n              {lists &&\r\n                lists.length > 1 &&\r\n                activeList &&\r\n                activeList.name !== \"All\" && (\r\n                  <Menu.Item\r\n                    onHoverIn={() => {\r\n                      setIsHover(\"edit\");\r\n                    }}\r\n                    onHoverOut={() => {\r\n                      setIsHover(null);\r\n                    }}\r\n                    background={\"none\"}\r\n                    // _pressed={{\r\n                    //   borderWidth: 1,\r\n                    //   borderColor: Colors.primary,\r\n                    //   borderRadius: 50,\r\n                    //   backgroundColor: \"white\",\r\n                    // }}\r\n                    borderWidth={1}\r\n                    borderColor='transparent'\r\n                    onPress={async (e) => {\r\n                      e.preventDefault();\r\n                      if (activeList && activeList.ord === 1) {\r\n                        moveHandler(activeList.ord, activeList.ord + 1);\r\n                      } else if (activeList && lists && lists.length > 1) {\r\n                        const last = lists[lists.length - 1];\r\n                        if (last.ord === activeList.ord) {\r\n                          moveHandler(activeList.ord, activeList.ord - 1);\r\n                        } else {\r\n                          setIsOpenMove(true);\r\n                        }\r\n                      }\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        textAlign: \"left\",\r\n                        fontFamily: \"Poppins\",\r\n                        color: isHover === \"move\" ? Colors.primary : \"#686868\",\r\n                        fontSize: vw(15),\r\n                      }}\r\n                    >\r\n                      Edit\r\n                    </Text>\r\n                  </Menu.Item>\r\n                )}\r\n              {lists &&\r\n                lists.length > 1 &&\r\n                activeList &&\r\n                activeList.name !== \"All\" && (\r\n                  <Menu.Item\r\n                    onHoverIn={() => {\r\n                      setIsHover(\"delete\");\r\n                    }}\r\n                    onHoverOut={() => {\r\n                      setIsHover(null);\r\n                    }}\r\n                    background={\"none\"}\r\n                    // _pressed={{\r\n                    //   borderWidth: 1,\r\n                    //   borderColor: Colors.primary,\r\n                    //   borderRadius: 50,\r\n                    //   backgroundColor: \"white\",\r\n                    // }}\r\n                    borderWidth={1}\r\n                    borderColor='transparent'\r\n                    onPress={() => {\r\n                      setIsOpen(true);\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        textAlign: \"left\",\r\n                        fontFamily: \"Poppins\",\r\n                        color:\r\n                          isHover === \"delete\" ? Colors.primary : \"#686868\",\r\n                        fontSize: vw(15),\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </Text>\r\n                  </Menu.Item>\r\n                )}\r\n            </Menu> */}\r\n          </HStack>\r\n        </HStack>\r\n      </Hidden>\r\n      {/* For Small Screens */}\r\n      <Hidden from='lg'>\r\n        <VStack\r\n          style={{\r\n            marginHorizontal: vh(20),\r\n            marginBottom: vh(10),\r\n            borderBottomColor: \"rgba(0,0,0,0.15)\",\r\n            borderBottomWidth: 1,\r\n          }}\r\n          space={2}\r\n        >\r\n          <HStack justifyContent={\"space-between\"}>\r\n            <Text\r\n              style={{\r\n                fontSize: vw(24),\r\n                paddingTop: vh(10),\r\n                color: \"#303030\",\r\n                fontFamily: \"Poppins_medium\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              Lists\r\n            </Text>\r\n            <Pressable\r\n              bg={{\r\n                linearGradient: {\r\n                  colors: [\"lightBlue.300\", \"violet.800\"],\r\n                  start: [0, 0],\r\n                  end: [1, 0],\r\n                },\r\n              }}\r\n              onPress={(e) => {\r\n                e.preventDefault();\r\n                setShowModal(true);\r\n              }}\r\n              rounded={\"full\"}\r\n              style={{\r\n                marginTop: vh(30),\r\n                height: vh(36),\r\n                width: vh(36),\r\n                borderColor: \"rgba(0, 0, 0, 0.15)\",\r\n                borderWidth: 1,\r\n                // backgroundColor: \"transparent\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <NotesIcon fill={\"rgba(102, 102, 102, 1)\"} />\r\n            </Pressable>\r\n\r\n            {/* <Menu\r\n              placement='left top'\r\n              borderRadius={vw(10)}\r\n              borderWidth={0}\r\n              backgroundColor={\"white\"}\r\n              trigger={(triggerProps) => {\r\n                return (\r\n                  <Pressable\r\n                    accessibilityLabel='More options menu'\r\n                    {...triggerProps}\r\n                    style={{\r\n                      // position: \"absolute\",\r\n                      // right: 0,\r\n                      // top: vh(30),\r\n                      marginTop: vh(20),\r\n                    }}\r\n                  >\r\n                    <MoreIcon />\r\n                  </Pressable>\r\n                );\r\n              }}\r\n            >\r\n              <Menu.Item\r\n                onHoverIn={() => {\r\n                  setIsHover(\"add\");\r\n                }}\r\n                onHoverOut={() => {\r\n                  setIsHover(null);\r\n                }}\r\n                background={\"none\"}\r\n                // _pressed={{\r\n                //   borderWidth: 1,\r\n                //   borderColor: Colors.primary,\r\n                //   borderRadius: 50,\r\n                //   backgroundColor: \"white\",\r\n                // }}\r\n                borderWidth={1}\r\n                borderColor='transparent'\r\n                onPress={async (e) => {\r\n                  e.preventDefault();\r\n                  setShowModal(true);\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    textAlign: \"left\",\r\n                    fontFamily: \"Poppins\",\r\n                    color: isHover === \"add\" ? Colors.primary : \"#686868\",\r\n                    fontSize: vw(15),\r\n                  }}\r\n                >\r\n                  Add\r\n                </Text>\r\n              </Menu.Item>\r\n              <Menu.Item\r\n                onHoverIn={() => {\r\n                  setIsHover(\"move\");\r\n                }}\r\n                onHoverOut={() => {\r\n                  setIsHover(null);\r\n                }}\r\n                background={\"none\"}\r\n                // _pressed={{\r\n                //   borderWidth: 1,\r\n                //   borderColor: Colors.primary,\r\n                //   borderRadius: 50,\r\n                //   backgroundColor: \"white\",\r\n                // }}\r\n                borderWidth={1}\r\n                borderColor='transparent'\r\n                onPress={async (e) => {\r\n                  e.preventDefault();\r\n                  if (activeList && activeList.ord === 1) {\r\n                    moveHandler(activeList.ord, activeList.ord + 1);\r\n                  } else if (activeList && lists && lists.length > 1) {\r\n                    const last = lists[lists.length - 1];\r\n                    if (last.ord === activeList.ord) {\r\n                      moveHandler(activeList.ord, activeList.ord - 1);\r\n                    } else {\r\n                      setIsOpenMove(true);\r\n                    }\r\n                  }\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    textAlign: \"left\",\r\n                    fontFamily: \"Poppins\",\r\n                    color: isHover === \"move\" ? Colors.primary : \"#686868\",\r\n                    fontSize: vw(15),\r\n                  }}\r\n                >\r\n                  Move\r\n                </Text>\r\n              </Menu.Item>\r\n              <Menu.Item\r\n                onHoverIn={() => {\r\n                  setIsHover(\"delete\");\r\n                }}\r\n                onHoverOut={() => {\r\n                  setIsHover(null);\r\n                }}\r\n                background={\"none\"}\r\n                // _pressed={{\r\n                //   borderWidth: 1,\r\n                //   borderColor: Colors.primary,\r\n                //   borderRadius: 50,\r\n                //   backgroundColor: \"white\",\r\n                // }}\r\n                borderWidth={1}\r\n                borderColor='transparent'\r\n                onPress={() => {\r\n                  setIsOpen(true);\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    textAlign: \"left\",\r\n                    fontFamily: \"Poppins\",\r\n                    color: isHover === \"delete\" ? Colors.primary : \"#686868\",\r\n                    fontSize: vw(15),\r\n                  }}\r\n                >\r\n                  Delete\r\n                </Text>\r\n              </Menu.Item>\r\n            </Menu> */}\r\n          </HStack>\r\n          <HStack\r\n            style={{\r\n              flexWrap: \"wrap\",\r\n              width: \"100%\",\r\n              justifyContent: \"flex-start\",\r\n              zoom: \"85%\",\r\n            }}\r\n          >\r\n            {lists.map((p) => (\r\n              <HStack\r\n                key={\"pl-\" + p._id}\r\n                style={{\r\n                  justifyContent: \"space-between\",\r\n                  height: vh(40),\r\n                }}\r\n              >\r\n                <Pressable\r\n                  key={\"h-\" + p._id}\r\n                  onPress={(e) => {\r\n                    e.preventDefault();\r\n                    dispatch({ type: events.SET_ACTIVE_LIST, data: p });\r\n                  }}\r\n                >\r\n                  <Text\r\n                    key={p._id}\r\n                    style={{\r\n                      fontSize: vw(15),\r\n                      // paddingTop: vh(40),\r\n                      paddingHorizontal: vw(10),\r\n                      color: \"#303030\",\r\n                      fontFamily: \"Poppins_medium\",\r\n                      marginHorizontal: vw(12),\r\n                      paddingBottom: vh(5),\r\n                      borderBottomWidth:\r\n                        activeList && list === p._id ? vh(4) : 0,\r\n                      borderBottomColor: \"rgba(125, 43, 233, 1)\",\r\n                    }}\r\n                  >\r\n                    {p.name + p.campaign}\r\n                  </Text>\r\n                </Pressable>\r\n              </HStack>\r\n            ))}\r\n          </HStack>\r\n        </VStack>\r\n      </Hidden>\r\n      <AddList\r\n        edit={false}\r\n        showModal={showModal}\r\n        setShowModal={setShowModal}\r\n        _showAlert={_showAlert}\r\n      />\r\n      <ShadowModal\r\n        size='md'\r\n        height={vh(60)}\r\n        isOpen={isOpen}\r\n        close={() => {\r\n          setIsOpen(false);\r\n        }}\r\n        header='Delete List'\r\n        buttons={\r\n          <HStack space={2}>\r\n            <ShadowButton\r\n              space={2}\r\n              onPress={() => {\r\n                setIsOpen(false);\r\n              }}\r\n              color='rgba(0,0,0, 0.5)'\r\n              variant='outline'\r\n              label='Cancel'\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n            <ShadowButton\r\n              space={2}\r\n              isLoading={isDeleting}\r\n              onPress={deleteHandler}\r\n              color='white'\r\n              label='Delete'\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n          </HStack>\r\n        }\r\n      >\r\n        <Text\r\n          style={{\r\n            fontFamily: \"Poppins\",\r\n            fontSize: vw(15),\r\n            color: \"rgba(0,0,0,0.8)\",\r\n          }}\r\n        >\r\n          Are you sure you want to delete this list?\r\n        </Text>\r\n      </ShadowModal>\r\n      <ShadowModal\r\n        size='md'\r\n        height={vh(60)}\r\n        isOpen={isOpenMove}\r\n        close={() => {\r\n          setIsOpenMove(false);\r\n        }}\r\n        header='Move List'\r\n        buttons={\r\n          <HStack space={2}>\r\n            <ShadowButton\r\n              space={2}\r\n              onPress={() => {\r\n                setIsOpenMove(false);\r\n              }}\r\n              variant='outline'\r\n              label='Cancel'\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n            <ShadowButton\r\n              space={2}\r\n              // isLoading={isMovingLeft}\r\n              onPress={() => {\r\n                moveHandler(activeList.ord, activeList.ord - 1);\r\n              }}\r\n              label='Left'\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n            <ShadowButton\r\n              space={2}\r\n              // isLoading={isMovingRight}\r\n              onPress={() => {\r\n                console.log(activeList.ord, activeList.ord + 1);\r\n                moveHandler(activeList.ord, activeList.ord + 1);\r\n              }}\r\n              label='Right'\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n          </HStack>\r\n        }\r\n      >\r\n        <Text\r\n          style={{\r\n            fontFamily: \"Poppins\",\r\n            fontSize: vw(15),\r\n            color: \"rgba(0,0,0,0.8)\",\r\n          }}\r\n        >\r\n          Move this list?\r\n        </Text>\r\n      </ShadowModal>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nconst PropertyFilters = ({ profile, status, tags, ft, setPage, list }) => {\r\n  const dRef = useRef();\r\n  const cRef = useRef();\r\n  const dispatch = useDispatch();\r\n\r\n  const [openFilter, setOpenFilter] = useState(null);\r\n  const [refresh, setRefresh] = useState(false);\r\n  const defaultFilter = {\r\n    bed: [],\r\n    bath: [],\r\n    sqft: [],\r\n    acre: [],\r\n    year: [],\r\n    ev: [],\r\n    date: { from: null, to: null },\r\n    tags: [],\r\n    status: [],\r\n    sort: \"\",\r\n    order: \"asc\",\r\n    ts: null,\r\n  };\r\n  const [filters, setFilters] = useState({});\r\n\r\n  var formatter = new Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\",\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 0,\r\n  });\r\n\r\n  // handle click outside\r\n  useEffect(() => {\r\n    /**\r\n     * Alert if clicked on outside of element\r\n     */\r\n    function handleClickOutside(event) {\r\n      if (dRef.current && !dRef.current.contains(event.target)) {\r\n        const e = document.elementsFromPoint(event.clientX, event.clientY);\r\n        const isCler = e.includes(cRef.current);\r\n        if (isCler) {\r\n          cRef.current.click();\r\n        }\r\n        setOpenFilter(null);\r\n      }\r\n    }\r\n\r\n    // Bind the event listener\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      // Unbind the event listener on clean up\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [dRef]);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"@listFilter:\" + list)) {\r\n      setFilters((f) => {\r\n        f[list] = JSON.parse(localStorage.getItem(\"@listFilter:\" + list));\r\n        return f;\r\n      });\r\n      setRefresh((r) => !r);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <HStack\r\n      space={4}\r\n      style={{\r\n        zoom: \"85%\",\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        width: \"100vw\",\r\n        justifyContent: \"flex-start\",\r\n      }}\r\n    >\r\n      {/* Bed */}\r\n      <ShadowDropDown\r\n        k='bed'\r\n        //setRefresh={setRefresh}\r\n        defaultFilter={defaultFilter}\r\n        setFilters={setFilters}\r\n        filters={filters}\r\n        label={\"Bed\"}\r\n        data={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((b) =>\r\n          b === 10 ? b + \"+\" : b\r\n        )}\r\n        openFilter={openFilter}\r\n        setOpenFilter={setOpenFilter}\r\n        setPage={setPage}\r\n        list={list}\r\n      />\r\n      {/* Bath */}\r\n      <ShadowDropDown\r\n        k='bath'\r\n        //setRefresh={setRefresh}\r\n        defaultFilter={defaultFilter}\r\n        setFilters={setFilters}\r\n        filters={filters}\r\n        label={\"Bath\"}\r\n        data={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((b) =>\r\n          b === 10 ? b + \"+\" : b\r\n        )}\r\n        openFilter={openFilter}\r\n        setOpenFilter={setOpenFilter}\r\n        setPage={setPage}\r\n        list={list}\r\n      />\r\n      {/* Sqft */}\r\n      <ShadowDropDown\r\n        k='sqft'\r\n        //setRefresh={setRefresh}\r\n        defaultFilter={defaultFilter}\r\n        setFilters={setFilters}\r\n        filters={filters}\r\n        label={\"Sq. Ft\"}\r\n        data={[\r\n          1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\r\n        ].map((b) => (b === 20 ? `20000+` : b * 1000))}\r\n        openFilter={openFilter}\r\n        setOpenFilter={setOpenFilter}\r\n        setPage={setPage}\r\n        list={list}\r\n      />\r\n\r\n      {/* Acre */}\r\n      <ShadowDropDown\r\n        k='acre'\r\n        //setRefresh={setRefresh}\r\n        defaultFilter={defaultFilter}\r\n        setFilters={setFilters}\r\n        filters={filters}\r\n        label={\"Acre\"}\r\n        data={[...Array(51).keys()].map((b) =>\r\n          b === 0\r\n            ? \"<0.4999\"\r\n            : b === 50\r\n            ? (b * 0.5).toFixed(4) + \"+\"\r\n            : (b * 0.5).toFixed(4)\r\n        )}\r\n        openFilter={openFilter}\r\n        setOpenFilter={setOpenFilter}\r\n        setPage={setPage}\r\n        list={list}\r\n      />\r\n\r\n      {/* Built year */}\r\n      <ShadowDropDown\r\n        k='year'\r\n        //setRefresh={setRefresh}\r\n        defaultFilter={defaultFilter}\r\n        setFilters={setFilters}\r\n        filters={filters}\r\n        label={\"Built year\"}\r\n        data={[\r\n          ...Array(moment().diff(moment(\"1900-01-01\"), \"years\") + 1).keys(),\r\n        ].map((b) => {\r\n          const y = moment().format(\"YYYY\") - b;\r\n          return y === 1900 ? \"<1900\" : y.toString();\r\n        })}\r\n        openFilter={openFilter}\r\n        setOpenFilter={setOpenFilter}\r\n        setPage={setPage}\r\n        list={list}\r\n      />\r\n      {/* Estimated Value */}\r\n      <ShadowDropDown\r\n        k='ev'\r\n        //setRefresh={setRefresh}\r\n        defaultFilter={defaultFilter}\r\n        setFilters={setFilters}\r\n        filters={filters}\r\n        label={\"Estimated Value\"}\r\n        data={[\r\n          0, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 2000, 3000,\r\n          4000, 5000, 6000, 7000, 8000, 9000, 10000,\r\n        ].map((b) => {\r\n          let label = formatter.format(b * 1000).toString();\r\n          if (b === 10000) {\r\n            label = label + \"+\";\r\n          } else if (b === 0) {\r\n            label = \"$0-99,999\";\r\n          }\r\n          return label;\r\n        })}\r\n        openFilter={openFilter}\r\n        setOpenFilter={setOpenFilter}\r\n        setPage={setPage}\r\n        list={list}\r\n      />\r\n      {/* Tags */}\r\n      <ShadowDropDown\r\n        k='tags'\r\n        //setRefresh={setRefresh}\r\n        defaultFilter={defaultFilter}\r\n        setFilters={setFilters}\r\n        filters={filters}\r\n        label={\"Tags\"}\r\n        data={tags}\r\n        openFilter={openFilter}\r\n        setOpenFilter={setOpenFilter}\r\n        setPage={setPage}\r\n        list={list}\r\n      />\r\n      {/* Status */}\r\n      <ShadowDropDown\r\n        k='status'\r\n        //setRefresh={setRefresh}\r\n        defaultFilter={defaultFilter}\r\n        setFilters={setFilters}\r\n        filters={filters}\r\n        openFilter={openFilter}\r\n        setOpenFilter={setOpenFilter}\r\n        label={\"Status\"}\r\n        data={status}\r\n        setPage={setPage}\r\n        list={list}\r\n      />\r\n      {/* Date */}\r\n      <VStack ref={dRef} style={{ marginVertical: vh(5) }}>\r\n        {filters &&\r\n          filters[list] &&\r\n          filters[list][\"date\"] &&\r\n          filters[list][\"date\"].from && (\r\n            <Badge // bg=\"red.400\"\r\n              bg={Colors.primary}\r\n              rounded='full'\r\n              // mb={-1}\r\n              mr={-4}\r\n              zIndex={997}\r\n              variant='solid'\r\n              alignSelf='flex-end'\r\n              _text={{\r\n                fontSize: 10,\r\n              }}\r\n              style={{ position: \"absolute\", marginTop: vh(-15) }}\r\n            >\r\n              {1}\r\n            </Badge>\r\n          )}\r\n        <>\r\n          <Button\r\n            variant='unstyled'\r\n            onPress={() => {\r\n              setOpenFilter(\"date\");\r\n            }}\r\n            _text={{\r\n              fontSize: vw(13),\r\n              fontFamily: \"Poppins_medium\",\r\n              color:\r\n                openFilter === \"date\"\r\n                  ? Colors.primary\r\n                  : \"rgba(102, 102, 102, 1)\",\r\n            }}\r\n            style={{\r\n              height: vh(36),\r\n              // width: vh(100),\r\n              backgroundColor: \"white\",\r\n              alignItems: \"center\",\r\n              zIndex: 995,\r\n              borderRadius: 10,\r\n              boxShadow: \"0px 2px 8px rgba(0, 0, 0, 0.1)\",\r\n            }}\r\n            rightIcon={<DropDownIcon />}\r\n          >\r\n            Added Date\r\n          </Button>\r\n          {openFilter === \"date\" && (\r\n            <VStack\r\n              style={{\r\n                position: \"absolute\",\r\n                marginTop: 40,\r\n                justifyContent: \"center\",\r\n                backgroundColor: \"white\",\r\n                width: vw(240),\r\n                padding: vw(10),\r\n                borderRadius: vw(10),\r\n                flex: 1,\r\n              }}\r\n              // height={vh(200)}\r\n            >\r\n              <HStack space={8} style={{ zIndex: 999999 }}>\r\n                <VStack space={1}>\r\n                  <Text\r\n                    style={{\r\n                      fontFamily: \"Poppins\",\r\n                      fontSize: vw(13),\r\n                      color: \"rgba(0,0,0,0.15\",\r\n                      marginLeft: vw(10),\r\n                    }}\r\n                  >\r\n                    From Date\r\n                  </Text>\r\n                  <DatePicker\r\n                    selected={\r\n                      filters[list] && filters[list][\"date\"].from\r\n                        ? new Date(filters[list][\"date\"].from)\r\n                        : new Date()\r\n                    }\r\n                    onChange={(date) => {\r\n                      setFilters((f) => {\r\n                        let v = f[list];\r\n                        if (!v) {\r\n                          v = defaultFilter;\r\n                        }\r\n                        v[\"date\"].from = date;\r\n                        v[\"date\"].to = v[\"date\"].to ? v[\"date\"].to : new Date();\r\n                        v[\"ts\"] = moment().valueOf();\r\n                        setPage((p) => {\r\n                          p[list] = 1;\r\n                          return p;\r\n                        });\r\n                        dispatch({\r\n                          type: events.FILTER_LAST_UPDATED,\r\n                          data: moment().valueOf(),\r\n                        });\r\n                        localStorage.setItem(\r\n                          \"@listFilter:\" + list,\r\n                          JSON.stringify(v)\r\n                        );\r\n                        f[list] = v;\r\n                        return f;\r\n                      });\r\n                      //setRefresh((r) => !r);\r\n                    }}\r\n                    selectsStart\r\n                    startDate={\r\n                      filters[list] && filters[list][\"date\"].from\r\n                        ? new Date(filters[list][\"date\"].from)\r\n                        : new Date()\r\n                    }\r\n                    endDate={\r\n                      filters[list] && filters[list][\"date\"].to\r\n                        ? new Date(filters[list][\"date\"].to)\r\n                        : new Date()\r\n                    }\r\n                    minDate={new Date(profile.created)}\r\n                    maxDate={new Date()}\r\n                  />\r\n                </VStack>\r\n                <VStack space={1}>\r\n                  <Text\r\n                    style={{\r\n                      fontFamily: \"Poppins\",\r\n                      fontSize: vw(13),\r\n                      color: \"rgba(0,0,0,0.15\",\r\n                      marginLeft: vw(10),\r\n                    }}\r\n                  >\r\n                    To Date\r\n                  </Text>\r\n                  <DatePicker\r\n                    selected={\r\n                      filters[list] && filters[list][\"date\"].to\r\n                        ? new Date(filters[list][\"date\"].to)\r\n                        : new Date()\r\n                    }\r\n                    onChange={(date) => {\r\n                      setFilters((f) => {\r\n                        let v = f[list];\r\n                        if (!v) {\r\n                          v = defaultFilter;\r\n                        }\r\n                        v[\"date\"].from = v[\"date\"].from\r\n                          ? v[\"date\"].from\r\n                          : new Date();\r\n                        v[\"date\"].to = date;\r\n                        v[\"ts\"] = moment().valueOf();\r\n                        setPage((p) => {\r\n                          p[list] = 1;\r\n                          return p;\r\n                        });\r\n                        dispatch({\r\n                          type: events.FILTER_LAST_UPDATED,\r\n                          data: moment().valueOf(),\r\n                        });\r\n                        localStorage.setItem(\r\n                          \"@listFilter:\" + list,\r\n                          JSON.stringify(v)\r\n                        );\r\n                        f[list] = v;\r\n                        return f;\r\n                      });\r\n                      //setRefresh((r) => !r);\r\n                    }}\r\n                    selectsEnd\r\n                    startDate={\r\n                      filters[list] && filters[list][\"date\"].from\r\n                        ? new Date(filters[list][\"date\"].from)\r\n                        : new Date()\r\n                    }\r\n                    endDate={\r\n                      filters[list] && filters[list][\"date\"].to\r\n                        ? new Date(filters[list][\"date\"].to)\r\n                        : new Date()\r\n                    }\r\n                    minDate={\r\n                      filters[list] && filters[list][\"date\"].from\r\n                        ? new Date(filters[list][\"date\"].from)\r\n                        : new Date()\r\n                    }\r\n                    maxDate={new Date()}\r\n                  />\r\n                </VStack>\r\n              </HStack>\r\n              <Center style={{ marginTop: vh(10) }}>\r\n                <ShadowButton\r\n                  onPress={() => {\r\n                    setFilters((f) => {\r\n                      let v = f[list];\r\n                      if (!v) {\r\n                        v = defaultFilter;\r\n                      }\r\n                      v[\"date\"].from = null;\r\n                      v[\"date\"].to = null;\r\n                      v[\"ts\"] = moment().valueOf();\r\n                      dispatch({\r\n                        type: events.FILTER_LAST_UPDATED,\r\n                        data: moment().valueOf(),\r\n                      });\r\n                      localStorage.setItem(\r\n                        \"@listFilter:\" + list,\r\n                        JSON.stringify(v)\r\n                      );\r\n                      f[list] = v;\r\n                      return f;\r\n                    });\r\n\r\n                    //setRefresh((r) => !r);\r\n                    setOpenFilter(null);\r\n                  }}\r\n                  variant='outline'\r\n                  label='Clear Date Filter'\r\n                  color={Colors.primary}\r\n                  style={{\r\n                    height: vh(32),\r\n                  }}\r\n                />\r\n              </Center>\r\n            </VStack>\r\n          )}\r\n        </>\r\n      </VStack>\r\n      {/* Sort */}\r\n      <ShadowDropDown\r\n        k='sort'\r\n        radio\r\n        //setRefresh={setRefresh}\r\n        defaultFilter={defaultFilter}\r\n        setFilters={setFilters}\r\n        filters={filters}\r\n        label={\"Sort by\"}\r\n        data={[\"#ID\", \"Owner Name\", \"User\"]}\r\n        precomponent={\r\n          <HStack margin={2} space={4}>\r\n            <Text>\r\n              {filters[\"order\"] === \"desc\" ? \"Descending\" : \"Ascending\"}\r\n            </Text>\r\n            <Switch\r\n              onTrackColor={Colors.primary}\r\n              offTrackColor={\"rgba(0,0,0,0.15)\"}\r\n              isChecked={filters[\"order\"] === \"desc\"}\r\n              onValueChange={(v) => {\r\n                if (v) {\r\n                  setFilters((f) => {\r\n                    let v = f[list];\r\n                    if (!v) {\r\n                      v = defaultFilter;\r\n                    }\r\n                    v[\"order\"] = \"desc\";\r\n                    v[\"ts\"] = moment().valueOf();\r\n                    dispatch({\r\n                      type: events.FILTER_LAST_UPDATED,\r\n                      data: moment().valueOf(),\r\n                    });\r\n                    localStorage.setItem(\r\n                      \"@listFilter:\" + list,\r\n                      JSON.stringify(v)\r\n                    );\r\n                    f[list] = v;\r\n                    return f;\r\n                  });\r\n                  //setRefresh((r) => !r);\r\n                } else {\r\n                  setFilters((f) => {\r\n                    let v = f[list];\r\n                    if (!v) {\r\n                      v = defaultFilter;\r\n                    }\r\n                    v[\"order\"] = \"asc\";\r\n                    v[\"ts\"] = moment().valueOf();\r\n                    dispatch({\r\n                      type: events.FILTER_LAST_UPDATED,\r\n                      data: moment().valueOf(),\r\n                    });\r\n                    localStorage.setItem(\r\n                      \"@listFilter:\" + list,\r\n                      JSON.stringify(v)\r\n                    );\r\n                    f[list] = v;\r\n                    return f;\r\n                  });\r\n                  //setRefresh((r) => !r);\r\n                }\r\n              }}\r\n              // value={filters[\"order\"] === \"desc\"}\r\n              size={\"sm\"}\r\n            />\r\n          </HStack>\r\n        }\r\n        openFilter={openFilter}\r\n        setOpenFilter={setOpenFilter}\r\n        setPage={setPage}\r\n      />\r\n      {ft > 0 && (\r\n        <Pressable\r\n          rounded={\"full\"}\r\n          style={{\r\n            marginLeft: vw(10),\r\n            marginTop: vh(8),\r\n          }}\r\n          onPress={() => {\r\n            localStorage.removeItem(\"@listFilter:\" + list);\r\n            setFilters((f) => {\r\n              f[list] = defaultFilter;\r\n              return f;\r\n            });\r\n            dispatch({\r\n              type: events.FILTER_LAST_UPDATED,\r\n              data: moment().valueOf(),\r\n            });\r\n            setPage((p) => {\r\n              p[list] = 1;\r\n              return p;\r\n            });\r\n            setOpenFilter(null);\r\n            setRefresh((r) => !r);\r\n          }}\r\n          variant={\"outline\"}\r\n        >\r\n          <Text\r\n            ref={cRef}\r\n            id='clear-filter'\r\n            style={{\r\n              fontFamily: \"Poppins_medium\",\r\n              fontSize: vw(15),\r\n              lineHeight: vh(32),\r\n            }}\r\n          >\r\n            Clear\r\n          </Text>\r\n        </Pressable>\r\n      )}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nconst setShowFiltersPersist = (list, show) => {\r\n  localStorage.setItem(\"@showFilters:\" + list, show);\r\n};\r\n\r\nconst getShowFiltersPersist = (list) => {\r\n  return localStorage.getItem(\"@showFilters:\" + list);\r\n};\r\n\r\nconst ListHeader = ({\r\n  setIsLoading,\r\n  setSearch,\r\n  setPage,\r\n  setSearchNow,\r\n  setIsSearched,\r\n  search,\r\n  lists,\r\n  total,\r\n  liststatusCount,\r\n  profile,\r\n  setClearFilter,\r\n  tags,\r\n  status,\r\n  activelist,\r\n  name,\r\n  _showAlert,\r\n  setSelectMode,\r\n  selectMode,\r\n  page,\r\n  limit,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const list = activelist && activelist._id;\r\n  const [showFilters, setShowFilters] = useState({});\r\n  const [inProcess, setInProcess] = useState(false);\r\n  const [moveTo, setMoveTo] = useState(null);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [refresh, setRefresh] = useState(false);\r\n  const sRef = useRef();\r\n  const cRef = useRef();\r\n  const ft = listsActions.filtersTotal(list);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [isStopping, setIsStopping] = useState(false);\r\n  const [stopCampaignAlert, setStopCampaignAlert] = useState(false);\r\n\r\n  console.log(\"Reloading...\");\r\n\r\n  const running =\r\n    liststatusCount &&\r\n    liststatusCount[list] &&\r\n    liststatusCount[list].find((s) => s.status === \"running\" && s.count > 0);\r\n\r\n  useEffect(() => {\r\n    global.selected = null;\r\n    setSelectMode(null);\r\n  }, [list]);\r\n\r\n  const deleteHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      setIsDeleting(true);\r\n      const _id = list;\r\n      const action = listsActions.deleteList(_id, null);\r\n      await dispatch(action);\r\n      setIsDeleting(false);\r\n      _showAlert(\"success\", \"List deleted successfully.\");\r\n      setIsOpen(false);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n      setIsDeleting(false);\r\n      _showAlert(\"error\", \"An error occured, cannot delete list.\");\r\n    }\r\n  };\r\n\r\n  const _onSubmitEditing = (e) => {\r\n    if (e.nativeEvent.text === \"\") {\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n    setSearch(e.nativeEvent.text);\r\n    setPage((p) => {\r\n      p[list] = 1;\r\n      return p;\r\n    });\r\n    setSearchNow(true);\r\n    setIsSearched(true);\r\n  };\r\n\r\n  const _listMenu = () => {\r\n    return (\r\n      <Menu\r\n        shadow={2}\r\n        w='190'\r\n        mr={10}\r\n        trigger={(triggerProps) => {\r\n          return (\r\n            <Pressable\r\n              style={{ marginTop: 40 }}\r\n              accessibilityLabel='More options menu'\r\n              {...triggerProps}\r\n            >\r\n              <HamburgerIcon size={\"lg\"} />\r\n            </Pressable>\r\n          );\r\n        }}\r\n      >\r\n        <Menu.Item\r\n          onPress={(e) => {\r\n            e.preventDefault();\r\n            setShowModal(true);\r\n          }}\r\n        >\r\n          Edit List\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          onPress={(e) => {\r\n            e.preventDefault();\r\n            setIsOpen(true);\r\n          }}\r\n        >\r\n          Delete List\r\n        </Menu.Item>\r\n        {total > 0 && (\r\n          <>\r\n            <Menu.Item\r\n              style={{\r\n                display:\r\n                  total && total === 0\r\n                    ? \"none\"\r\n                    : running && running.count > 0\r\n                    ? \"flex\"\r\n                    : \"none\",\r\n              }}\r\n              onPress={(e) => {\r\n                e.preventDefault();\r\n                setStopCampaignAlert(true);\r\n              }}\r\n            >\r\n              Stop Campaign\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              onPress={(e) => {\r\n                e.preventDefault();\r\n                setSelectMode(\"selected:del\");\r\n              }}\r\n            >\r\n              Remove Properties\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              onPress={(e) => {\r\n                e.preventDefault();\r\n                setSelectMode(\"selected:move\");\r\n              }}\r\n            >\r\n              Move Properties\r\n            </Menu.Item>\r\n          </>\r\n        )}\r\n      </Menu>\r\n    );\r\n  };\r\n\r\n  const _headerItem = () => {\r\n    const status = (liststatusCount && liststatusCount[list]) || [];\r\n    let stopped = 0;\r\n    let completed = 0;\r\n    let notset = 0;\r\n    let running = 0;\r\n\r\n    console.log(status);\r\n\r\n    if (status && status.length > 0) {\r\n      for (const s of status) {\r\n        if (s.status === \"stopped\") {\r\n          stopped = s.count;\r\n        } else if (s.status === \"completed\") {\r\n          completed = s.count;\r\n        } else if (s.status === \"notset\") {\r\n          notset = s.count;\r\n        } else if (s.status === \"running\") {\r\n          running = s.count;\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Center\r\n        mx={1}\r\n        my={2}\r\n        px={2}\r\n        py={1}\r\n        space={1}\r\n        style={{\r\n          justifyContent: \"center\",\r\n          borderColor: \"rgba(0,0,0,0.15)\",\r\n          borderWidth: 1,\r\n          width: 400,\r\n          alignSelf: \"center\",\r\n          borderRadius: 10,\r\n          height: 60,\r\n          marginTop: 20,\r\n          marginLeft: 10,\r\n        }}\r\n      >\r\n        <Text\r\n          style={{\r\n            color: \"rgba(0,0,0,0.8)\",\r\n            fontFamily: \"Poppins\",\r\n            fontSize: 13,\r\n            position: \"absolute\",\r\n            top: -10,\r\n            left: 20,\r\n            backgroundColor: \"rgb(247, 248, 250)\",\r\n          }}\r\n        >\r\n          Campaigns\r\n        </Text>\r\n        <HStack\r\n          space={1}\r\n          style={{\r\n            justifyContent: \"space-between\",\r\n            paddingVertical: 5,\r\n            flex: 1,\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <Center\r\n            style={{\r\n              paddingVertical: 5,\r\n              paddingHorizontal: 10,\r\n              backgroundColor: Colors.primary,\r\n              borderRadius: 5,\r\n              flex: 1,\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                color: \"white\",\r\n                fontFamily: \"Poppins\",\r\n                fontSize: 10,\r\n              }}\r\n            >\r\n              Running\r\n            </Text>\r\n            <Text\r\n              style={{\r\n                color: \"white\",\r\n                fontFamily: \"Poppins\",\r\n                fontSize: 15,\r\n              }}\r\n            >\r\n              {running}\r\n            </Text>\r\n          </Center>\r\n          <Center\r\n            style={{\r\n              paddingVertical: 5,\r\n              paddingHorizontal: 10,\r\n              backgroundColor: Colors.primary,\r\n              borderRadius: 5,\r\n              flex: 1,\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                color: \"white\",\r\n                fontFamily: \"Poppins\",\r\n                fontSize: 10,\r\n              }}\r\n            >\r\n              Completed\r\n            </Text>\r\n            <Text\r\n              style={{\r\n                color: \"white\",\r\n                fontFamily: \"Poppins\",\r\n                fontSize: 15,\r\n              }}\r\n            >\r\n              {completed}\r\n            </Text>\r\n          </Center>\r\n          <Center\r\n            style={{\r\n              paddingVertical: 5,\r\n              paddingHorizontal: 10,\r\n              backgroundColor: Colors.primary,\r\n              borderRadius: 5,\r\n              flex: 1,\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                color: \"white\",\r\n                fontFamily: \"Poppins\",\r\n                fontSize: 10,\r\n              }}\r\n            >\r\n              Stopped\r\n            </Text>\r\n            <Text\r\n              style={{\r\n                color: \"white\",\r\n                fontFamily: \"Poppins\",\r\n                fontSize: 15,\r\n              }}\r\n            >\r\n              {stopped}\r\n            </Text>\r\n          </Center>\r\n          <Center\r\n            style={{\r\n              paddingVertical: 5,\r\n              paddingHorizontal: 10,\r\n              backgroundColor: Colors.primary,\r\n              borderRadius: 5,\r\n              flex: 1,\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                color: \"white\",\r\n                fontFamily: \"Poppins\",\r\n                fontSize: 10,\r\n              }}\r\n            >\r\n              Not Set\r\n            </Text>\r\n            <Text\r\n              style={{\r\n                color: \"white\",\r\n                fontFamily: \"Poppins\",\r\n                fontSize: 15,\r\n              }}\r\n            >\r\n              {notset}\r\n            </Text>\r\n          </Center>\r\n        </HStack>\r\n      </Center>\r\n    );\r\n  };\r\n\r\n  const _headerSelect = () => {\r\n    let isDisabled = false;\r\n    let action = \"\";\r\n    let label = \"\";\r\n    if (selectMode === \"selected:stop\") {\r\n      action = \"Stop Campaign\";\r\n      label = \"Stop\";\r\n    } else if (selectMode === \"selected:set\") {\r\n      action = \"Set Campaign\";\r\n      label = \"Set\";\r\n    } else if (selectMode === \"selected:del\") {\r\n      action = \"Remove Properties\";\r\n      label = \"Remove\";\r\n    } else if (selectMode === \"selected:move\") {\r\n      action = \"Move Properties\";\r\n      label = \"Move\";\r\n    }\r\n\r\n    if (!global.selected) {\r\n      isDisabled = true;\r\n    } else if (global.selected && global.selected.length === 0) {\r\n      isDisabled = true;\r\n    }\r\n\r\n    if (selectMode === \"selected:move\" && !moveTo) {\r\n      isDisabled = true;\r\n    }\r\n\r\n    return (\r\n      <Center\r\n        mx={1}\r\n        my={2}\r\n        px={2}\r\n        py={2}\r\n        space={1}\r\n        style={{\r\n          justifyContent: \"center\",\r\n          borderColor: Colors.primary,\r\n          borderWidth: 1,\r\n          width: 335,\r\n          alignSelf: \"center\",\r\n          borderRadius: 10,\r\n          height: selectMode === \"selected:move\" ? 120 : 70,\r\n        }}\r\n      >\r\n        <Text\r\n          style={{\r\n            color: Colors.primary,\r\n            fontFamily: \"Poppins\",\r\n            fontSize: 13,\r\n            position: \"absolute\",\r\n            top: -10,\r\n            left: 20,\r\n            // backgroundColor: \"white\",\r\n            backgroundColor: \"rgb(247, 248, 250)\",\r\n            paddingHorizontal: 1,\r\n          }}\r\n        >\r\n          {action} - {global.selected ? global.selected.length : 0} Selected\r\n        </Text>\r\n        {selectMode === \"selected:move\" && (\r\n          <HStack style={{ marginTop: 40 }}>\r\n            <Text style={{ lineHeight: 30, marginRight: 10 }}>To</Text>\r\n            <Select\r\n              dropdownIcon={<DropDownIcon />}\r\n              size={\"sm\"}\r\n              variant='outline'\r\n              selectedValue={moveTo}\r\n              minWidth='200'\r\n              height={30}\r\n              accessibilityLabel='Move To'\r\n              placeholder='Move To'\r\n              // _selectedItem={{\r\n              //   // bg: Colors.primary,\r\n              //   // color:\"white\",\r\n              //   endIcon: <CheckIcon size='5' />,\r\n              // }}\r\n              onValueChange={(itemValue) => setMoveTo(itemValue)}\r\n            >\r\n              {lists &&\r\n                lists\r\n                  .filter((f) => f._id != list && f.name != \"All\")\r\n                  .map((l) => (\r\n                    <Select.Item\r\n                      key={\"m-\" + l._id}\r\n                      label={l.name}\r\n                      value={l._id}\r\n                    />\r\n                  ))}\r\n            </Select>\r\n          </HStack>\r\n        )}\r\n        <HStack\r\n          py={3}\r\n          space={5}\r\n          my={3}\r\n          mt={selectMode === \"selected:move\" ? 0 : 3}\r\n          justifyContent={\"space-between\"}\r\n        >\r\n          <ShadowButton\r\n            label={\"cancel\"}\r\n            variant={\"outline\"}\r\n            style={{ width: 100, height: 35 }}\r\n            onPress={() => {\r\n              // props.setSelectedProperties([]);\r\n              setMoveTo(null);\r\n              delete global.selected;\r\n              setSelectMode(null);\r\n            }}\r\n          />\r\n          <ShadowButton\r\n            isDisabled={isDisabled}\r\n            isLoading={inProcess}\r\n            onPress={() => {\r\n              if (\r\n                (global.selected && global.selected.length === 0) ||\r\n                !global.selected\r\n              ) {\r\n                return;\r\n              }\r\n              if (selectMode === \"selected:stop\") {\r\n                stopPropertiesCampaign(global.selected);\r\n              } else if (selectMode === \"selected:set\") {\r\n                setPropertiesCampaign(global.selected);\r\n              } else if (selectMode === \"selected:del\") {\r\n                removeProperties(global.selected);\r\n              } else if (selectMode === \"selected:move\") {\r\n                if (!moveTo) return;\r\n                moveProperties(global.selected);\r\n              }\r\n            }}\r\n            label={label}\r\n            style={{\r\n              width: 100,\r\n              elevation: 0,\r\n              height: 35,\r\n              backgroundColor:\r\n                global.selected && global.selected.length === 0\r\n                  ? \"rgba(0,0,0,0.15)\"\r\n                  : selectMode === \"selected:move\" && !moveTo\r\n                  ? \"rgba(0,0,0,0.15)\"\r\n                  : !global.selected\r\n                  ? \"rgba(0,0,0,0.15)\"\r\n                  : Colors.primary,\r\n            }}\r\n          />\r\n        </HStack>\r\n      </Center>\r\n    );\r\n  };\r\n\r\n  const moveProperties = async (ids) => {\r\n    try {\r\n      if (!moveTo) {\r\n        _showAlert.show(\"error\", \"Please select a list to move to.\");\r\n        return;\r\n      }\r\n      setInProcess(true);\r\n      const result = await propertiesActions.moveProperties({\r\n        from: list,\r\n        to: moveTo,\r\n        _ids: ids,\r\n      });\r\n      if (result) {\r\n        setMoveTo(null);\r\n        setInProcess(false);\r\n        delete global.selected;\r\n        setSelectMode(null);\r\n        const to = lists.find((p) => p._id === moveTo);\r\n        dispatch(\r\n          listsActions.fetchListProperties({\r\n            page: page || 1,\r\n            limit: limit || 20,\r\n            _id: list,\r\n            name,\r\n            search,\r\n          })\r\n        );\r\n        _showAlert(\r\n          \"success\",\r\n          \"Selected properties moved from \" +\r\n            activelist.name +\r\n            \" to \" +\r\n            to.name +\r\n            \".\"\r\n        );\r\n      } else {\r\n        _showAlert(\"error\", \"something went wrong\");\r\n        setInProcess(false);\r\n      }\r\n    } catch (err) {\r\n      setInProcess(false);\r\n      console.log(\"Move Error\", err);\r\n      _showAlert(\"error\", \"something went wrong\");\r\n    }\r\n  };\r\n\r\n  const setPropertiesCampaign = async (ids) => {\r\n    try {\r\n      setInProcess(true);\r\n      const result = await propertiesActions.setPropertiesCampaign({\r\n        _ids: ids,\r\n        campaign: activelist.campaign,\r\n        list,\r\n      });\r\n      if (result) {\r\n        _showAlert(\r\n          \"success\",\r\n          \"Campaign set to selected properties successfully.\"\r\n        );\r\n        setInProcess(false);\r\n        delete global.selected;\r\n        setSelectMode(null);\r\n        dispatch(\r\n          listsActions.fetchListProperties({\r\n            page: page || 1,\r\n            limit: limit || 20,\r\n            _id: list,\r\n            name,\r\n            search,\r\n          })\r\n        );\r\n      } else {\r\n        _showAlert(\"error\", \"something went wrong\");\r\n        setInProcess(false);\r\n      }\r\n    } catch (err) {\r\n      setInProcess(false);\r\n      _showAlert(\"error\", \"something went wrong\");\r\n    }\r\n  };\r\n\r\n  const stopPropertiesCampaign = async (ids) => {\r\n    try {\r\n      setInProcess(true);\r\n      const result = await propertiesActions.stopPropertiesCampaign({\r\n        _ids: ids,\r\n      });\r\n      if (result) {\r\n        _showAlert(\r\n          \"success\",\r\n          \"Selected properties campaign stopped successfully.\"\r\n        );\r\n        setInProcess(false);\r\n        delete global.selected;\r\n        setSelectMode(null);\r\n        dispatch(\r\n          listsActions.fetchListProperties({\r\n            page: page || 1,\r\n            limit: limit || 20,\r\n            _id: list,\r\n            name,\r\n            search,\r\n          })\r\n        );\r\n      } else {\r\n        _showAlert(\"error\", \"something went wrong\");\r\n        setInProcess(false);\r\n      }\r\n    } catch (err) {\r\n      setInProcess(false);\r\n      _showAlert(\"error\", err.message);\r\n    }\r\n  };\r\n\r\n  const removeProperties = async (ids) => {\r\n    try {\r\n      setInProcess(true);\r\n      const result = await propertiesActions.removeProperties({\r\n        _ids: ids,\r\n        _id: list,\r\n      });\r\n      if (result) {\r\n        _showAlert(\r\n          \"success\",\r\n          \"Selected properties removed from list successfully.\"\r\n        );\r\n        setInProcess(false);\r\n        delete global.selected;\r\n        setSelectMode(null);\r\n        dispatch(\r\n          listsActions.fetchListProperties({\r\n            page: page || 1,\r\n            limit: limit || 20,\r\n            _id: list,\r\n            name,\r\n            search,\r\n          })\r\n        );\r\n      } else {\r\n        _showAlert(\"error\", \"something went wrong\");\r\n        setInProcess(false);\r\n      }\r\n    } catch (err) {\r\n      setInProcess(false);\r\n      _showAlert(\"error\", \"something went wrong\");\r\n    }\r\n  };\r\n\r\n  const stopAll = async () => {\r\n    try {\r\n      setIsStopping(true);\r\n      const action = listsActions.stopList(list, null);\r\n      await dispatch(action);\r\n      setIsStopping(false);\r\n      setStopCampaignAlert(false);\r\n      dispatch(\r\n        listsActions.fetchListProperties({\r\n          page: page || 1,\r\n          limit: limit || 20,\r\n          _id: list,\r\n          name,\r\n          search,\r\n        })\r\n      );\r\n      _showAlert(\"success\", \"List campaigns stopped successfully.\");\r\n    } catch (err) {\r\n      console.log(err.message);\r\n      setIsStopping(false);\r\n      _showAlert(\"error\", \"An error occured, cannot stop list campaigns.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack\r\n      style={{\r\n        // height: vh(100),\r\n        marginTop: vh(-10),\r\n        marginHorizontal: vw(20),\r\n        borderBottomColor: \"rgba(0,0,0,0.15)\",\r\n        borderBottomWidth: 1,\r\n        justifyContent: \"space-between\",\r\n        zIndex: 99999,\r\n        paddingBottom: vh(10),\r\n        backgroundColor: \"rgb(247, 248, 250)\",\r\n      }}\r\n    >\r\n      <Hidden only={[\"sm\", \"base\"]}>\r\n        <HStack justifyContent={\"space-between\"}>\r\n          {name !== \"All\" && (\r\n            <HStack space={2}>\r\n              {_listMenu()}\r\n              {_headerItem()}\r\n            </HStack>\r\n          )}\r\n          <HStack space={2}>\r\n            <Button\r\n              onPress={() => {\r\n                setShowFiltersPersist(!showFilters);\r\n                setShowFilters((f) => {\r\n                  f[list] = !f[list];\r\n                  return f;\r\n                });\r\n                setRefresh(!refresh);\r\n              }}\r\n              leftIcon={\r\n                <FilterIcon\r\n                  fill={\r\n                    showFilters[list]\r\n                      ? Colors.primary\r\n                      : \"rgba(102, 102, 102, 1)\"\r\n                  }\r\n                />\r\n              }\r\n              style={{\r\n                marginTop: vh(30),\r\n                height: vh(36),\r\n                borderColor: \"rgba(0, 0, 0, 0.15)\",\r\n                borderWidth: 1,\r\n                backgroundColor: \"transparent\",\r\n                alignItems: \"center\",\r\n              }}\r\n              rounded={\"full\"}\r\n            >\r\n              {ft > 0 && (\r\n                <Badge\r\n                  rounded={\"full\"}\r\n                  bg={Colors.primary}\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    right: vw(-12),\r\n                    top: vh(-17),\r\n                  }}\r\n                  _text={{\r\n                    fontSize: vw(10),\r\n                    fontFamily: \"Poppins\",\r\n                    color: \"white\",\r\n                  }}\r\n                >\r\n                  {ft}\r\n                </Badge>\r\n              )}\r\n              <Text\r\n                style={{\r\n                  color: showFilters[list]\r\n                    ? Colors.primary\r\n                    : \"rgba(102, 102, 102, 1)\",\r\n                  fontFamily: \"Poppins_medium\",\r\n                  fontSize: vw(15),\r\n                  paddingTop: vh(3),\r\n                }}\r\n              >\r\n                Filters\r\n              </Text>\r\n            </Button>\r\n            <Center style={{ marginTop: vh(30), height: vh(36) }}>\r\n              <Input\r\n                ref={sRef}\r\n                autoComplete='Off'\r\n                rounded={\"full\"}\r\n                variant='outline'\r\n                size={\"xs\"}\r\n                placeholder='Search by #id/name/address'\r\n                onSubmitEditing={_onSubmitEditing}\r\n                onChangeText={(v) => {\r\n                  cRef.current.style.visibility =\r\n                    v !== \"\" ? \"visible\" : \"hidden\";\r\n                  if (v === \"\") {\r\n                    localStorage.removeItem(\"@propertyFilter\");\r\n                    setSearchNow(true);\r\n                    setSearch(\"\");\r\n                    setPage((p) => {\r\n                      p[list] = 1;\r\n                      return p;\r\n                    });\r\n                    setIsLoading(true);\r\n                    sRef.current.value = \"\";\r\n                    cRef.current.style.visibility = \"hidden\";\r\n                  }\r\n                }}\r\n                style={{\r\n                  height: vh(36),\r\n                  width: vw(250),\r\n                  fontSize: vw(13),\r\n                  fontFamily: \"Poppins\",\r\n                }}\r\n                leftElement={\r\n                  <Center style={{ marginLeft: vw(10) }}>\r\n                    <SearchIcon width={18} height={18} fill={Colors.primary} />\r\n                  </Center>\r\n                }\r\n                rightElement={\r\n                  <Pressable\r\n                    ref={cRef}\r\n                    onPress={() => {\r\n                      if (search !== \"\") {\r\n                        localStorage.removeItem(\"@propertyFilter\");\r\n                        setSearchNow(true);\r\n                        setSearch(\"\");\r\n                        setPage((p) => {\r\n                          p[list] = 1;\r\n                          return p;\r\n                        });\r\n                        setIsLoading(true);\r\n                      }\r\n                      sRef.current.value = \"\";\r\n                      cRef.current.style.visibility = \"hidden\";\r\n                    }}\r\n                    style={{\r\n                      marginRight: vw(10),\r\n                      visibility: \"hidden\",\r\n                    }}\r\n                  >\r\n                    <CloseIcon />\r\n                  </Pressable>\r\n                  // ) : (\r\n                  //   <Pressable style={{ width: vw(24) }}></Pressable>\r\n                  // )\r\n                }\r\n              />\r\n            </Center>\r\n          </HStack>\r\n        </HStack>\r\n        {name !== \"All\" && selectMode && _headerSelect()}\r\n      </Hidden>\r\n      <Hidden from='md'>\r\n        <HStack justifyContent={\"space-between\"}>\r\n          <Center style={{ marginTop: vh(10), height: vh(36) }}>\r\n            <Input\r\n              autoComplete='Off'\r\n              rounded={\"full\"}\r\n              variant='outline'\r\n              size={\"xs\"}\r\n              placeholder='Search by #id/name/address'\r\n              onSubmitEditing={_onSubmitEditing}\r\n              style={{\r\n                height: vh(36),\r\n                width: vw(250),\r\n                fontSize: vw(13),\r\n                fontFamily: \"Poppins\",\r\n              }}\r\n              leftIcon={<SearchIcon width={18} height={18} />}\r\n            />\r\n          </Center>\r\n          <Button\r\n            onPress={() => {\r\n              setShowFiltersPersist(!showFilters);\r\n              setShowFilters(!showFilters);\r\n            }}\r\n            leftIcon={\r\n              <FilterIcon\r\n                fill={showFilters ? Colors.primary : \"rgba(102, 102, 102, 1)\"}\r\n              />\r\n            }\r\n            style={{\r\n              marginTop: vh(10),\r\n              height: vh(36),\r\n              borderColor: \"rgba(0, 0, 0, 0.15)\",\r\n              borderWidth: 1,\r\n              backgroundColor: \"transparent\",\r\n              alignItems: \"center\",\r\n            }}\r\n            rounded={\"full\"}\r\n          >\r\n            {ft > 0 && (\r\n              <Badge\r\n                rounded={\"full\"}\r\n                bg={Colors.primary}\r\n                style={{\r\n                  position: \"absolute\",\r\n                  right: vw(-12),\r\n                  top: vh(-17),\r\n                }}\r\n                _text={{\r\n                  fontSize: vw(10),\r\n                  fontFamily: \"Poppins\",\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                {ft}\r\n              </Badge>\r\n            )}\r\n          </Button>\r\n        </HStack>\r\n      </Hidden>\r\n      <HStack style={{ marginTop: vh(5) }}>\r\n        {/* Filters */}\r\n        {showFilters[list] && (\r\n          <PropertyFilters\r\n            setClearFilter={setClearFilter}\r\n            profile={profile}\r\n            status={status}\r\n            tags={tags}\r\n            ft={ft}\r\n            setPage={setPage}\r\n            list={list}\r\n          />\r\n        )}\r\n      </HStack>\r\n      <AddList\r\n        edit={true}\r\n        showModal={showModal}\r\n        setShowModal={setShowModal}\r\n        _showAlert={_showAlert}\r\n        activeList={activelist}\r\n      />\r\n      <ShadowModal\r\n        size='md'\r\n        height={vh(60)}\r\n        isOpen={isOpen}\r\n        close={() => {\r\n          setIsOpen(false);\r\n        }}\r\n        header='Delete List'\r\n        buttons={\r\n          <HStack space={2}>\r\n            <ShadowButton\r\n              space={2}\r\n              onPress={() => {\r\n                setIsOpen(false);\r\n              }}\r\n              color='rgba(0,0,0, 0.5)'\r\n              variant='outline'\r\n              label='Cancel'\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n            <ShadowButton\r\n              space={2}\r\n              isLoading={isDeleting}\r\n              onPress={deleteHandler}\r\n              color='white'\r\n              label='Delete'\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n          </HStack>\r\n        }\r\n      >\r\n        <Text\r\n          style={{\r\n            fontFamily: \"Poppins\",\r\n            fontSize: vw(15),\r\n            color: \"rgba(0,0,0,0.8)\",\r\n          }}\r\n        >\r\n          Are you sure you want to delete list {name}?\r\n        </Text>\r\n      </ShadowModal>\r\n      <ShadowModal\r\n        size='md'\r\n        height={vh(60)}\r\n        isOpen={stopCampaignAlert}\r\n        close={() => {\r\n          setStopCampaignAlert(false);\r\n        }}\r\n        header='Stop Campaign'\r\n        buttons={\r\n          <HStack space={2}>\r\n            <ShadowButton\r\n              space={2}\r\n              onPress={() => {\r\n                setStopCampaignAlert(false);\r\n              }}\r\n              color='rgba(0,0,0, 0.5)'\r\n              variant='outline'\r\n              label='Cancel'\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n            <ShadowButton\r\n              space={2}\r\n              isLoading={isStopping}\r\n              onPress={async () => {\r\n                await stopAll();\r\n              }}\r\n              color='white'\r\n              label='Stop All'\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n            <ShadowButton\r\n              space={2}\r\n              onPress={() => {\r\n                setSelectMode(\"selected:stop\");\r\n                setStopCampaignAlert(false);\r\n              }}\r\n              color='white'\r\n              label='Stop Selected'\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n          </HStack>\r\n        }\r\n      >\r\n        <Text\r\n          style={{\r\n            fontFamily: \"Poppins\",\r\n            fontSize: vw(15),\r\n            color: \"rgba(0,0,0,0.8)\",\r\n          }}\r\n        >\r\n          Are you sure want to stop campaign for property list {name}?\r\n        </Text>\r\n      </ShadowModal>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nconst Index = ({ user, setLogout }) => {\r\n  const [landscape] = useMediaQuery([\r\n    {\r\n      orientation: \"landscape\",\r\n    },\r\n    {\r\n      orientation: \"portrait\",\r\n    },\r\n  ]);\r\n\r\n  const sz = useBreakpointValue({\r\n    base: \"base\",\r\n    sm: \"sm\",\r\n    lg: \"lg\",\r\n    md: \"md\",\r\n    xl: \"xl\",\r\n  });\r\n\r\n  let cols = useBreakpointValue({\r\n    base: 1,\r\n    sm: 1,\r\n    lg: 4,\r\n    md: 3,\r\n    xl: 5,\r\n  });\r\n\r\n  if (cols === 1 && landscape) {\r\n    cols = 2;\r\n  }\r\n\r\n  const toast = useToast();\r\n  const socket = useContext(SocketContext);\r\n  const dispatch = useDispatch();\r\n  const { onOpen, onClose, isOpen } = useDisclose();\r\n  const {\r\n    lists,\r\n    activeList,\r\n    properties: lp,\r\n    total: lt,\r\n    statusCount: liststatusCount,\r\n  } = useSelector((state) => state.lists);\r\n  const [limit, setLimit] = useState({});\r\n  const [listStyle, setListStyle] = useState(getOrientation(\"lists\"));\r\n  const op = _.sortBy(lists, \"ord\");\r\n  const [page, setPage] = useState({});\r\n  const [search, setSearch] = useState({});\r\n  const [reload, setReload] = useState(false);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selectMode, setSelectMode] = useState(null);\r\n\r\n  const cardwidth = listStyle === \"vertical\" ? 343 : 720;\r\n  cols = Math.floor(window.screen.width / cardwidth);\r\n  if (cols === 0) {\r\n    cols = 1;\r\n  }\r\n\r\n  const list = activeList && activeList._id;\r\n  const name = activeList && activeList.name;\r\n  const properties = lp[list] || [];\r\n  const total = (lt && lt[list]) || 0;\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        await dispatch(listsActions.fetchLists());\r\n        setIsLoading(false);\r\n      } catch (err) {\r\n        _showAlert(\"error\", err.message);\r\n        setIsLoading(false);\r\n      }\r\n    })();\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (list) {\r\n        await dispatch(\r\n          listsActions.fetchListProperties({\r\n            page: page[list] || 1,\r\n            limit: limit[list] || 20,\r\n            _id: list,\r\n            name,\r\n            search: search[list],\r\n          })\r\n        );\r\n        setLimit((l) => {\r\n          if (!l[list]) {\r\n            l[list] = 20;\r\n          }\r\n          return l;\r\n        });\r\n      }\r\n      setIsLoading(false);\r\n    })();\r\n  }, [dispatch, search[list], list, page[list], limit[list], reload]);\r\n\r\n  const _emptyComponent = useCallback(() => {\r\n    return (\r\n      <Center height={\"lg\"} justifyContent='center' alignItems='center'>\r\n        <Text textAlign={\"center\"}>\r\n          {\"No items found.\"}\r\n        </Text>\r\n      </Center>\r\n    );\r\n  }, [activeList]);\r\n\r\n  const _showAlert = useCallback(\r\n    (status, msg) => {\r\n      toast.show({\r\n        placement: \"top\",\r\n        render: () => {\r\n          let bg = \"red.300\";\r\n          if (status === \"error\") {\r\n            bg = \"red.300\";\r\n          } else if (status === \"success\") {\r\n            bg = \"green.300\";\r\n          } else if (status === \"info\") {\r\n            bg = \"blueGray.300\";\r\n          } else if (status === \"warning\") {\r\n            bg = \"orange.300\";\r\n          }\r\n          return (\r\n            <Text\r\n              style={{\r\n                fontSize: vw(12),\r\n                fontFamily: \"Poppins_medium\",\r\n                color: \"#33214B\",\r\n              }}\r\n              p={2}\r\n              bg={bg}\r\n              rounded={\"full\"}\r\n            >\r\n              {msg}\r\n            </Text>\r\n          );\r\n        },\r\n      });\r\n    },\r\n    [toast]\r\n  );\r\n\r\n  const _renderItem = useCallback(\r\n    ({ item, index }) => {\r\n      const isEnd = index === properties.length - 1;\r\n      return listStyle === \"horizontal\" ? (\r\n        <HorizontalItem\r\n          lists={lists}\r\n          activeList={activeList}\r\n          item={item}\r\n          isEnd={isEnd}\r\n          _showAlert={_showAlert}\r\n          selectMode={selectMode}\r\n        />\r\n      ) : (\r\n        <VerticalItem\r\n          activeList={activeList}\r\n          item={item}\r\n          lists={lists}\r\n          _showAlert={_showAlert}\r\n          cols={cols}\r\n          selectMode={selectMode}\r\n        />\r\n      );\r\n    },\r\n    [\r\n      listStyle,\r\n      selectMode,\r\n      activeList,\r\n      _showAlert,\r\n      cols,\r\n      lists,\r\n      properties.length,\r\n    ]\r\n  );\r\n\r\n  const _getItemLayout = useCallback(\r\n    (data, index) => ({\r\n      length: 180,\r\n      offset: 180 * index,\r\n      index,\r\n    }),\r\n    []\r\n  );\r\n\r\n  const RoundButton = (props) => {\r\n    const [isPressed, setIsPressed] = useState(false);\r\n    return (\r\n      <Center\r\n        style={{ bottom: 60 }}\r\n        alignItems='center'\r\n        position={\"fixed\"}\r\n        right={5}\r\n        p={2}\r\n      >\r\n        <Pressable\r\n          zIndex={9999}\r\n          style={{ padding: isPressed ? 10 : 11, marginTop: 1 }}\r\n          borderRadius={100}\r\n          bg={isPressed ? \"white\" : Colors.primary}\r\n          borderColor={isPressed ? Colors.primary : Colors.primary}\r\n          borderWidth={isPressed ? 1 : 0}\r\n          onPressIn={() => {\r\n            setIsPressed(true);\r\n          }}\r\n          onPressOut={() => {\r\n            setIsPressed(false);\r\n          }}\r\n          onPress={() => {\r\n            onOpen();\r\n          }}\r\n        >\r\n          <AddIcon fill={!isPressed ? \"white\" : Colors.primary} />\r\n        </Pressable>\r\n      </Center>\r\n    );\r\n  };\r\n\r\n  const _keyExtractor = useCallback((item) => item._id, []);\r\n\r\n  const ph = 100 - parseFloat(vh(70)) + \"vh\";\r\n  const lh = 100 - parseFloat(vh(70)) - 65.7 + \"vh\";\r\n\r\n  // console.log(\"Properties\", properties);\r\n\r\n  // console.log(\"LIST\", activeList)\r\n\r\n  return (\r\n    <VStack minHeight={\"100vh\"} bg={\"#F7F8FA\"}>\r\n      <NavBar user={user} setLogout={setLogout} />\r\n      <VStack height={ph}>\r\n        <PageHeader\r\n          list={list}\r\n          setListStyle={setListStyle}\r\n          listStyle={listStyle}\r\n          activeList={activeList}\r\n          lists={op}\r\n          _showAlert={_showAlert}\r\n        />\r\n\r\n        {isLoading ? (\r\n          <Center\r\n            flex={1}\r\n            height={lh}\r\n            justifyContent='center'\r\n            alignItems='center'\r\n          >\r\n            <Spinner size='small' color={\"#7D2BE9\"} />\r\n          </Center>\r\n        ) : (\r\n          <>\r\n            {cols === 1 ? (\r\n              <FlatList\r\n                key={\"list-small\"}\r\n                refreshing={refreshing}\r\n                removeClippedSubviews={true}\r\n                _contentContainerStyle={\r\n                  {\r\n                    // marginTop: !showFilters[list] ? 0 : 0,\r\n                  }\r\n                }\r\n                getItemLayout={_getItemLayout}\r\n                disableVirtualization={true}\r\n                ListHeaderComponent={\r\n                  <ListHeader\r\n                    search={search[list] || \"\"}\r\n                    setSearch={setSearch}\r\n                    setIsLoading={setIsLoading}\r\n                    page={page[list] || 1}\r\n                    limit={limit[list] || 20}\r\n                    setPage={setPage}\r\n                    activelist={activeList}\r\n                    name={name}\r\n                    lists={op}\r\n                    _showAlert={_showAlert}\r\n                    liststatusCount={liststatusCount}\r\n                    selectMode={selectMode}\r\n                    setSelectMode={setSelectMode}\r\n                    total={total}\r\n                  />\r\n                }\r\n                ListEmptyComponent={_emptyComponent}\r\n                data={properties}\r\n                extraData={\"vertical\"}\r\n                keyExtractor={_keyExtractor}\r\n                renderItem={_renderItem}\r\n                updateCellsBatchingPeriod={1}\r\n                initialNumToRender={50}\r\n                maxToRenderPerBatch={50}\r\n              />\r\n            ) : (\r\n              <FlatList\r\n                key={\"list-\" + sz + \"-\" + listStyle}\r\n                refreshing={refreshing}\r\n                removeClippedSubviews={true}\r\n                _contentContainerStyle={{\r\n                  // marginTop: !showFilters[] ? 0 : 0,\r\n                  marginLeft: vw(1),\r\n                }}\r\n                columnWrapperStyle={{\r\n                  justifyContent: \"flex-start\",\r\n                }}\r\n                getItemLayout={_getItemLayout}\r\n                disableVirtualization={true}\r\n                ListHeaderComponent={\r\n                  <ListHeader\r\n                    setSearch={setSearch}\r\n                    search={search[list] || \"\"}\r\n                    setIsLoading={setIsLoading}\r\n                    page={page[list] || 1}\r\n                    limit={limit[list] || 20}\r\n                    setPage={setPage}\r\n                    activelist={activeList}\r\n                    name={name}\r\n                    lists={op}\r\n                    _showAlert={_showAlert}\r\n                    liststatusCount={liststatusCount}\r\n                    selectMode={selectMode}\r\n                    total={total}\r\n                    setSelectMode={setSelectMode}\r\n                  />\r\n                }\r\n                ListEmptyComponent={_emptyComponent}\r\n                data={properties}\r\n                extraData={listStyle}\r\n                keyExtractor={_keyExtractor}\r\n                renderItem={_renderItem}\r\n                updateCellsBatchingPeriod={1}\r\n                initialNumToRender={50}\r\n                maxToRenderPerBatch={50}\r\n                numColumns={cols}\r\n              />\r\n            )}\r\n            {/* {total > 0 && (\r\n              <ShadowPagination\r\n                limit={limit}\r\n                total={total}\r\n                page={page}\r\n                setPage={setPage}\r\n                // setIsLoading={setIsLoading}\r\n                setLimit={setLimit}\r\n              />\r\n            )} */}\r\n          </>\r\n        )}\r\n\r\n        {total > 0 && (\r\n          <ShadowPagination\r\n            limit={limit[list]}\r\n            total={total}\r\n            page={page[list]}\r\n            setLimit={(lt) => {\r\n              setLimit((l) => {\r\n                l[list] = lt;\r\n                return l;\r\n              });\r\n              setReload(!reload);\r\n            }}\r\n            setPage={(pg) => {\r\n              setPage((p) => {\r\n                p[list] = pg;\r\n                return p;\r\n              });\r\n              setReload(!reload);\r\n            }}\r\n            setIsLoading={setIsLoading}\r\n          />\r\n        )}\r\n\r\n        <Actionsheet\r\n          isOpen={isOpen}\r\n          onClose={() => {\r\n            // dispatch(\r\n            //   listsActions.fetchListProperties({\r\n            //     page: page[list] || 1,\r\n            //     limit: limit[list] || 20,\r\n            //     _id: list,\r\n            //     name,\r\n            //     search,\r\n            //   })\r\n            // );\r\n            onClose();\r\n            if (global.isChanged) {\r\n              setIsLoading(true);\r\n              setReload(!reload);\r\n              global.isChanged = false;\r\n            }\r\n          }}\r\n        >\r\n          <Actionsheet.Content\r\n            alignSelf={\"center\"}\r\n            width={[\"90vw\", 600]}\r\n            bg={\"white\"}\r\n          >\r\n            <Center>\r\n              <Text fontSize={18}>Add Properties</Text>\r\n              <Text fontSize={12}>{activeList && activeList.name}</Text>\r\n            </Center>\r\n            <AddContacts\r\n              lists={\r\n                lists &&\r\n                lists.length > 0 &&\r\n                lists.filter((l) => l.name !== \"All\").map((l) => l._id)\r\n              }\r\n              list={activeList && list}\r\n              dispatch={dispatch}\r\n              socket={socket}\r\n              _showAlert\r\n            />\r\n          </Actionsheet.Content>\r\n        </Actionsheet>\r\n      </VStack>\r\n      {activeList && activeList.name !== \"All\" && lists && lists.length > 0 && (\r\n        <RoundButton />\r\n      )}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","import React, { forwardRef } from 'react';\nimport { View as RNView } from 'react-native';\nimport { usePropsResolution } from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport type { IViewProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyledView: any = makeStyledComponent(RNView);\n\nexport const View = forwardRef((props: IViewProps, ref: any) => {\n  const { ...resolvedProps } = usePropsResolution('View', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <StyledView {...resolvedProps} ref={ref} />;\n});\n","import React from 'react';\n\nexport function useDisclose(initState?: boolean) {\n  const [isOpen, setIsOpen] = React.useState(initState || false);\n  const onOpen = () => {\n    setIsOpen(true);\n  };\n  const onClose = () => {\n    setIsOpen(false);\n  };\n  const onToggle = () => {\n    setIsOpen(!isOpen);\n  };\n  return {\n    isOpen,\n    onOpen,\n    onClose,\n    onToggle,\n  };\n}\n"],"names":["ShadowPagination","total","limit","setLimit","setPage","page","style","setIsLoading","view","pageCount","Math","ceil","MyPaginate","styled","ReactPaginate","attrs","activeClassName","vw","HStack","boxShadow","justifyContent","alignItems","height","vh","backgroundColor","paddingHorizontal","Text","fontFamily","fontSize","color","marginRight","Select","outlineColor","outlineStyle","borderWidth","variant","selectedValue","parseInt","width","onValueChange","v","dropdownIcon","DropDownIcon","label","value","marginLeft","breakLabel","nextLabel","onPageChange","p","selected","pageRangeDisplayed","marginPagesDisplayed","previousLabel","renderOnZeroPageCount","forcePage","React","Util","ShadowSelect","props","ref","isInvalid","invalid","control","rules","name","render","field","onChange","onBlur","size","_invalid","borderColor","padding","placeholder","defaultValue","items","length","map","item","idx","_pressed","Colors","borderRadius","marginTop","error","fill","xmlns","viewBox","Path","d","fillRule","G","Circle","cx","cy","r","transform","SocketContext","setShowModal","showModal","_showAlert","edit","dispatch","useDispatch","useState","isSaving","setIsSaving","setRefresh","useSelector","state","lists","list","activeList","campaigns","userCampaigns","listname","useForm","mode","handleSubmit","errors","formState","reset","setValue","getValues","useEffect","campaignActions","message","_id","campaign","applyto","exclude","onSubmit","data","action","listActions","console","log","campaignsSelected","l","campaignsFiltered","filter","c","includes","bodyHeight","minHeight","isOpen","close","cancel","save","header","buttons","space","onPress","isLoading","autoFocus","required","inputStyle","Tooltip","children","onClose","onOpen","defaultIsOpen","placement","openDelay","closeDelay","closeOnClick","offset","isDisabled","hasArrow","arrowSize","isOpenProp","undefined","resolvedProps","usePropsResolution","useControllableState","setIsOpen","arrowBg","bgColor","bg","targetRef","enterTimeout","exitTimeout","tooltipID","uniqueId","ResponsiveQueryContext","disableCSSMediaQueries","useId","openWithDelay","current","setTimeout","closeWithDelay","clearTimeout","newChildren","Box","composeEventHandlers","onFocus","onMouseEnter","onMouseLeave","mergeRefs","useKeyboardDismissable","enabled","callback","useHasResponsiveProps","OverlayContainer","PresenceTransition","initial","opacity","animate","transition","duration","exit","visible","StyleSheet","Popper","triggerRef","accessibilityRole","Platform","nativeID","cols","currency","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","pic","createdUser","fullname","firstname","lastname","nameSplit","split","nameFb","ui","id","userUri","CDN","propertyUri","sqft","acre","toString","trim","Link","window","screen","marginHorizontal","marginVertical","href","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","borderTopStartRadius","borderBottomStartRadius","overflow","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","VStack","flex","paddingTop","alignContent","PriceIcon","ev","format","margin","propertyaddress","CalendarWhiteIcon","yearbuilt","borderTopWidth","borderTopColor","borderBottomWidth","borderBottomColor","SqftIcon","AcreIcon","BedIcon","bed","BathIcon","bath","status","tid","Center","rounded","paddingVertical","Avatar","source","uri","lineHeight","TimeIcon","moment","created","selectMode","listcampaign","campaignName","showSelectBox","campaignstatus","Pressable","e","preventDefault","stopPropagation","global","f","type","events","position","top","left","zIndex","Check","resizeMode","borderTopEndRadius","right","mkt","MarketIcon","marginBottom","mid","parseFloat","toFixed","NavCampaignIcon","NavListIcon","getUser","localStorage","getItem","JSON","parse","AddContacts","sRef","useRef","cRef","setTotal","reload","setReload","pIsSav","search","setSearch","properties","setProperties","_getData","useCallback","inList","ninList","token","fetch","API_URL","method","headers","Authorization","body","stringify","skip","fields","owneraddress","notes","sort","response","ok","json","errData","Error","resData","count","unmounted","NoItemsFound","RenderItem","listRef","setInList","saveProperty","del","isChanged","property","err","flexDirection","View","Spinner","Checkbox","accessibilityLabel","isChecked","colorScheme","paddingBottom","Input","w","autoComplete","onSubmitEditing","nativeEvent","text","onChangeText","visibility","leftElement","SearchIcon","rightElement","CloseIcon","FlatList","contentContainerStyle","ListEmptyComponent","keyExtractor","renderItem","initialNumToRender","maxToRenderPerBatch","bottom","zoom","n","ShadowDropDown","precomponent","setFilters","defaultFilter","filters","k","radio","mRef","opened","setOpened","Menu","shouldOverlapWithTrigger","trigger","triggerProps","Badge","alignSelf","_text","Button","rightIcon","minWidth","maxWidth","maxHeight","Radio","valueOf","setItem","b","mx","my","key","val","push","PageHeader","listStyle","setListStyle","isOpenMove","setIsOpenMove","isDeleting","setIsDeleting","deleteHandler","listsActions","moveHandler","t","from","to","Hidden","only","flexWrap","setCurrentList","title","ReportIssueIcon","linearGradient","colors","start","end","orientation","a","x","setOrientation","AddIcon","NotesIcon","AddList","ShadowModal","ShadowButton","ord","PropertyFilters","profile","tags","ft","dRef","openFilter","setOpenFilter","year","date","order","ts","formatter","handleClickOutside","event","contains","target","document","elementsFromPoint","clientX","clientY","click","addEventListener","removeEventListener","display","Array","keys","diff","y","mr","Date","selectsStart","startDate","endDate","minDate","maxDate","selectsEnd","Switch","onTrackColor","offTrackColor","removeItem","setShowFiltersPersist","show","ListHeader","setSearchNow","setIsSearched","liststatusCount","setClearFilter","activelist","setSelectMode","showFilters","setShowFilters","inProcess","setInProcess","moveTo","setMoveTo","refresh","isStopping","setIsStopping","stopCampaignAlert","setStopCampaignAlert","running","find","s","_onSubmitEditing","moveProperties","ids","propertiesActions","_ids","setPropertiesCampaign","stopPropertiesCampaign","removeProperties","stopAll","shadow","Hamburger","stopped","completed","notset","px","py","_headerItem","leftIcon","FilterIcon","itemValue","mt","_headerSelect","user","setLogout","useMediaQuery","landscape","sz","useBreakpointValue","base","sm","lg","md","xl","toast","useToast","socket","useContext","useDisclose","lp","lt","statusCount","getOrientation","op","_","refreshing","cardwidth","floor","_emptyComponent","textAlign","msg","_renderItem","isEnd","index","_getItemLayout","RoundButton","isPressed","setIsPressed","onPressIn","onPressOut","_keyExtractor","ph","lh","NavBar","removeClippedSubviews","_contentContainerStyle","getItemLayout","disableVirtualization","ListHeaderComponent","extraData","updateCellsBatchingPeriod","columnWrapperStyle","numColumns","pg","Actionsheet","StyledView","makeStyledComponent","RNView","forwardRef","initState","onToggle"],"sourceRoot":""}