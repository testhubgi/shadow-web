{"version":3,"file":"static/js/6602.6c083fd7.chunk.js","mappings":"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","sources":["components/ShadowPagination.js","components/ShadowSwitch.js","components/svg/AddIcon.js","components/svg/DropDownIcon.js","pages/private/account/Credits.js","pages/private/account/PageHeader.js","pages/private/properties/Card.js","../node_modules/@react-stately/utils/dist/packages/@react-stately/utils/src/useControlledState.ts","../node_modules/native-base/lib/module/components/primitives/Switch/index.tsx","../node_modules/native-base/node_modules/@react-stately/toggle/dist/packages/@react-stately/toggle/src/useToggleState.ts"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { HStack, Select, Center, Pressable, Text } from \"native-base\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { vh, vw } from \"../util\";\r\nimport PrevIcon from \"./svg/PrevIcon\";\r\nimport NextIcon from \"./svg/NextIcon\";\r\nimport Colors from \"../constants/Colors\";\r\nimport DropDownIcon from \"./svg/DropDownIcon\";\r\n\r\nconst ShadowPagination = ({\r\n  total = 1,\r\n  limit = 10,\r\n  setLimit,\r\n  setPage,\r\n  page,\r\n  setIsLoading,\r\n  style,\r\n  view = true,\r\n  \r\n}) => {\r\n  const pageCount = Math.ceil(total / limit);\r\n\r\n  const onPageChange = (p) => {\r\n    setPage(p.selected + 1);\r\n  };\r\n\r\n  const MyPaginate = styled(ReactPaginate).attrs({\r\n    activeClassName: \"active\", // default to \"disabled\"\r\n  })`\r\n    margin-bottom: 1rem;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-end;\r\n    list-style-type: none;\r\n    padding: 0 1rem;\r\n    li a {\r\n      border-radius: 4px;\r\n      padding: 0.1rem 1rem;\r\n      cursor: pointer;\r\n      color: rgba(102, 102, 102, 1);\r\n      font-family: \"Poppins_medium\";\r\n      font-size: ${vw(15)};\r\n    }\r\n    li.previous a,\r\n    li.next a,\r\n    li.break a {\r\n      border-color: transparent;\r\n      color: rgba(102, 102, 102, 1);\r\n      font-family: \"Poppins_medium\";\r\n      font-size: ${vw(15)};\r\n    }\r\n    li.active a {\r\n      background-color: #7d2be9;\r\n      border-color: transparent;\r\n      color: white;\r\n      min-width: 24px;\r\n      font-family: \"Poppins_medium\";\r\n      font-size: ${vw(15)};\r\n    }\r\n    li.disabled a {\r\n      color: rgba(102, 102, 102, 0.5);\r\n    }\r\n    li.disable,\r\n    li.disabled a {\r\n      cursor: default;\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <HStack\r\n      style={{\r\n        boxShadow: \"0px 0px 15px rgba(0, 0, 0, 0.1)\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        height: vh(60),\r\n        backgroundColor: \"white\", //\"rgba(247, 248, 250, 1)\",\r\n        ...style,\r\n      }}\r\n    >\r\n      {view ? (\r\n        <HStack style={{ alignItems: \"center\", paddingHorizontal: vh(20) }}>\r\n          <Text\r\n            style={{\r\n              fontFamily: \"Poppins_medium\",\r\n              fontSize: vw(15),\r\n              color: \"rgba(102, 102, 102, 1)\",\r\n              marginRight: vw(10),\r\n            }}\r\n          >\r\n            View\r\n          </Text>\r\n          <Select\r\n            outlineColor={\"rgba(0,0,0.0.15)\"}\r\n            outlineStyle={{\r\n              borderWidth: vh(2),\r\n            }}\r\n            variant='outline'\r\n            selectedValue={parseInt(limit)}\r\n            style={{\r\n              width: vw(50),\r\n            }}\r\n            onValueChange={(v) => {\r\n              setPage(1);\r\n              setLimit(v);\r\n            }}\r\n            dropdownIcon={<DropDownIcon />}\r\n          >\r\n            <Select.Item label={\"1\"} value={1} />\r\n            <Select.Item label={\"5\"} value={5} />\r\n            <Select.Item label={\"10\"} value={10} />\r\n            <Select.Item label={\"20\"} value={20} />\r\n            <Select.Item label={\"30\"} value={30} />\r\n            <Select.Item label={\"40\"} value={40} />\r\n            <Select.Item label={\"50\"} value={50} />\r\n            <Select.Item label={\"100\"} value={100} />\r\n          </Select>\r\n          <Text\r\n            style={{\r\n              fontFamily: \"Poppins_medium\",\r\n              fontSize: vw(15),\r\n              color: \"rgba(102, 102, 102, 1)\",\r\n              marginLeft: vw(10),\r\n            }}\r\n          >\r\n            per page\r\n          </Text>\r\n        </HStack>\r\n      ) : (\r\n        <HStack></HStack>\r\n      )}\r\n      <MyPaginate\r\n        breakLabel='...'\r\n        nextLabel='Next >'\r\n        onPageChange={onPageChange}\r\n        pageRangeDisplayed={3}\r\n        marginPagesDisplayed={2}\r\n        pageCount={pageCount}\r\n        previousLabel='< Previous'\r\n        renderOnZeroPageCount={null}\r\n        forcePage={page - 1}\r\n      />\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShadowPagination);\r\n","import React from \"react\";\r\nimport { Switch, FormControl } from \"native-base\";\r\nimport { Controller } from \"react-hook-form\";\r\nimport { vw, vh } from \"../util\";\r\nimport Colors from \"../constants/Colors\";\r\n\r\nconst ShadowSwitch = (props) => {\r\n  return (\r\n    <FormControl\r\n      isInvalid={props.invalid}\r\n      style={{\r\n        height: vh(48),\r\n        ...props.style,\r\n      }}\r\n    >\r\n      {props.label && (\r\n        <FormControl.Label\r\n          style={{\r\n            fontSize: vw(13),\r\n            fontFamily: \"Poppins_medium\",\r\n            color: props.invalid ? \"red.500\" : \"rgba(102, 102, 102, 0.7)\",\r\n            height: vh(19),\r\n          }}\r\n        >\r\n          {props.label}\r\n        </FormControl.Label>\r\n      )}\r\n\r\n      <Controller\r\n        control={props.control}\r\n        rules={props.rules}\r\n        name={props.name}\r\n        render={({ field: { onChange, onBlur, value } }) => (\r\n          <Switch\r\n            onTrackColor={Colors.primary}\r\n            style={{ marginTop: vh(10) }}\r\n            size={\"md\"}\r\n            {...props}\r\n            onToggle={(v) => {\r\n              // console.log(v);\r\n              // setIsChecked(v);\r\n              props.isChanged(v);\r\n              onChange(v);\r\n            }}\r\n            // isChecked={true}\r\n            colorScheme=\"purple\"\r\n          />\r\n        )}\r\n      />\r\n      <FormControl.ErrorMessage style={{ marginTop: vh(-3) }}>\r\n        {props.error}\r\n      </FormControl.ErrorMessage>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default ShadowSwitch;\r\n","import * as React from \"react\"\r\nimport Svg, { Path } from \"react-native-svg\"\r\n\r\nconst AddIcon = ({fill, stroke}) => (\r\n  <Svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width={24} height={24} >\r\n    <Path data-name=\"Rectangle 37\" fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n    <Path\r\n      data-name=\"Path 10127\"\r\n      d=\"M17.1 12.52h-4.22v4.26H11.1v-4.26H6.9v-1.66h4.2V6.58h1.78v4.28h4.22Z\"\r\n      fill={fill || \"#fff\"}\r\n    />\r\n  </Svg>\r\n)\r\n\r\nexport default AddIcon\r\n","import * as React from \"react\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\nimport { vh, vw } from \"../../util\";\r\n\r\nconst DropDownIcon = (props) => (\r\n  <Svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    viewBox='0 0 24 24'\r\n    width={vh(24)}\r\n    height={vw(24)}\r\n    {...props}\r\n  >\r\n    <Path data-name='Rectangle 287' fill='none' d='M0 0h24v24H0z' />\r\n    <Path\r\n      data-name='Path 149'\r\n      d='m12 12.682 3.708-3.717 1.062 1.062L12 14.8l-4.77-4.773 1.062-1.062Z'\r\n      fill={props.fill || \"#666\"}\r\n    />\r\n  </Svg>\r\n);\r\n\r\nexport default DropDownIcon;\r\n","import React, { useRef, useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  Center,\r\n  HStack,\r\n  VStack,\r\n  Text,\r\n  FlatList,\r\n  Popover,\r\n  Pressable,\r\n  Hidden,\r\n  useBreakpointValue,\r\n} from \"native-base\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport PageHeader from \"./PageHeader\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport { vh, vw } from \"../../../util\";\r\nimport ShadowButton from \"../../../components/ShadowButton\";\r\nimport * as settingsActions from \"../../../store/actions/settings\";\r\nimport * as authActions from \"../../../store/actions/auth\";\r\n// import * as planActions from \"../../../store/actions/plan\";\r\nimport PaymentMethods from \"./PaymentMethods\";\r\nimport moment from \"moment-timezone\";\r\nimport ShadowPagination from \"../../../components/ShadowPagination\";\r\nimport ShadowInput from \"../../../components/ShadowInput\";\r\nimport Card from \"../properties/Card\";\r\nimport ShadowSwitch from \"../../../components/ShadowSwitch\";\r\nimport { getUser } from \"../../../constants/Config\";\r\nimport ShadowModal from \"../../../components/ShadowModal\";\r\n\r\nconst useMountedState = () => {\r\n  const mountedRef = useRef(false);\r\n  const isMounted = useCallback(() => mountedRef.current, []);\r\n\r\n  useEffect(() => {\r\n    mountedRef.current = true;\r\n\r\n    return () => {\r\n      mountedRef.current = false;\r\n    };\r\n  }, []);\r\n\r\n  return isMounted;\r\n};\r\n\r\nconst SetAutoReload = ({ profile, _showAlert, dispatch, sz }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n    getValues,\r\n    setValue,\r\n    trigger,\r\n  } = useForm({\r\n    mode: \"all\",\r\n    defaultValues: {\r\n      amount:\r\n        (profile &&\r\n          profile.settings &&\r\n          profile.settings.reload_credit.toString()) ||\r\n        \"30\",\r\n      threshold:\r\n        (profile &&\r\n          profile.settings &&\r\n          profile.settings.reload_threshold.toString()) ||\r\n        \"10\",\r\n      autosmartsearch:\r\n        (profile && profile.settings && profile.settings.autosmartsearch) ||\r\n        false,\r\n    },\r\n  });\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      setIsSaving(true);\r\n      const action = authActions.updateProfile({\r\n        _id: profile._id,\r\n        \"settings.reload_credit\": parseInt(data.amount),\r\n        \"settings.reload_threshold\": parseInt(data.threshold),\r\n        \"settings.autosmartsearch\": data.autosmartsearch,\r\n      });\r\n      await dispatch(action);\r\n      setIsSaving(false);\r\n      setIsOpen(false);\r\n      _showAlert(\"success\", \"Auto reload settings saved successfully.\");\r\n    } catch (err) {\r\n      setIsSaving(false);\r\n      console.log(\"Created Error\", err);\r\n      _showAlert(\r\n        \"error\",\r\n        \"Something went wrong, cannot save auto reload settings.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Pressable\r\n        onPress={() => {\r\n          setIsOpen(true);\r\n        }}\r\n        style={{\r\n          borderColor: \"rgba(0,0,0,0.15)\",\r\n          borderWidth: 1,\r\n          borderRadius: 100,\r\n          paddingHorizontal: vh(15),\r\n          paddingVertical: vh(sz === \"sm\" || sz === \"base\" ? 5 : 8),\r\n          background: \"white\",\r\n          height: vw(36),\r\n          width: sz === \"sm\" || sz === \"base\" ? vw(90) : \"100%\",\r\n          marginTop: vh(sz === \"sm\" || sz === \"base\" ? 5 : 15),\r\n        }}\r\n      >\r\n        <Text\r\n          style={{\r\n            color: Colors.primary,\r\n            fontSize: vw(11),\r\n            fontFamily: \"Poppins_medium\",\r\n            textAlign: \"center\",\r\n            lineHeight: sz === \"sm\" || sz === \"base\" ? vh(12) : vh(18),\r\n          }}\r\n        >\r\n          Set Auto Reload\r\n        </Text>\r\n      </Pressable>\r\n      <ShadowModal\r\n        size={\"md\"}\r\n        placement={\"top\"}\r\n        isOpen={isOpen}\r\n        close={() => {\r\n          reset();\r\n          setIsOpen(false);\r\n        }}\r\n        header={\"Set Auto Reload Credit\"}\r\n        buttons={\r\n          <HStack space={2}>\r\n            <ShadowButton\r\n              space={2}\r\n              label='Cancel'\r\n              variant='outline'\r\n              onPress={() => {\r\n                reset();\r\n                setIsOpen(false);\r\n              }}\r\n              style={{ height: vh(36) }}\r\n            />\r\n            <ShadowButton\r\n              space={2}\r\n              isLoading={isSaving}\r\n              label='Save'\r\n              onPress={handleSubmit(onSubmit)}\r\n              style={{ height: vh(36) }}\r\n            />\r\n          </HStack>\r\n        }\r\n      >\r\n        <VStack space={8} style={{ marginTop: vh(-20) }}>\r\n          <HStack\r\n            space={4}\r\n            style={{ width: vw(140), justifyContent: \"space-between\" }}\r\n          >\r\n            <ShadowInput\r\n              isRequired\r\n              name='amount'\r\n              label={\"Enter reload amount \"}\r\n              placeholder='Enter reload amount'\r\n              control={control}\r\n              rules={{\r\n                pattern: {\r\n                  value: /^(0|[1-9]\\d*)(\\.\\d+)?$/,\r\n                  message: \"Please enter valid reload amount\",\r\n                },\r\n                required: {\r\n                  value: true,\r\n                  message: \"Please enter valid reload amount\",\r\n                },\r\n              }}\r\n              invalid={errors.amount ? true : false}\r\n              error={errors.amount ? errors.amount.message : \"\"}\r\n              inputStyle={{}}\r\n              // height={vh(80)}\r\n            />\r\n            <ShadowInput\r\n              isRequired\r\n              name='threshold'\r\n              label={\"Enter reload threshold \"}\r\n              placeholder='Enter threshold'\r\n              control={control}\r\n              rules={{\r\n                pattern: {\r\n                  value: /^\\d+$/,\r\n                  message: \"Please enter valid reload threshold\",\r\n                },\r\n                required: {\r\n                  value: true,\r\n                  message: \"Please enter valid reload threshold\",\r\n                },\r\n              }}\r\n              invalid={errors.threshold ? true : false}\r\n              error={errors.threshold ? errors.threshold.message : \"\"}\r\n              inputStyle={{}}\r\n              // height={vh(80)}\r\n            />\r\n          </HStack>\r\n          <ShadowSwitch\r\n            type='switch'\r\n            control={control}\r\n            isChanged={(v) => {\r\n              setValue(\"autosmartsearch\", v);\r\n              trigger(\"autosmartsearch\");\r\n            }}\r\n            id='autosmartsearch'\r\n            name='autosmartsearch'\r\n            label='Enable Auto Smart Search? '\r\n            isChecked={getValues(\"autosmartsearch\")}\r\n            // required\r\n            invalid={errors.autosmartsearch ? true : false}\r\n            error={errors.autosmartsearch ? errors.autosmartsearch.message : \"\"}\r\n            rules={{}}\r\n          />\r\n        </VStack>\r\n      </ShadowModal>\r\n    </>\r\n\r\n    //   <Popover\r\n    //     isOpen={isOpen}\r\n    //     trigger={(triggerProps) => {\r\n    //       return (\r\n    //         <Pressable\r\n    //           {...triggerProps}\r\n    //           onPress={() => {\r\n    //             setIsOpen(true);\r\n    //           }}\r\n    //           style={{\r\n    //             borderColor: \"rgba(0,0,0,0.15)\",\r\n    //             borderWidth: 1,\r\n    //             borderRadius: 100,\r\n    //             paddingHorizontal: vh(15),\r\n    //             paddingVertical: vh(8),\r\n    //             background: \"white\",\r\n    //             height: vw(36),\r\n    //             marginTop: vh(10),\r\n    //             width: vw(sz === \"sm\" || sz === \"base\" ? vw(90) : \"100%\"),\r\n    //           }}\r\n    //         >\r\n    //           <Text\r\n    //             style={{\r\n    //               color: Colors.primary,\r\n    //               fontSize: vw(11),\r\n    //               fontFamily: \"Poppins_medium\",\r\n    //               textAlign: \"center\",\r\n    //             }}\r\n    //           >\r\n    //             Set Auto Reload\r\n    //           </Text>\r\n    //         </Pressable>\r\n    //       );\r\n    //     }}\r\n    //   >\r\n    //     <Popover.Content\r\n    //       accessibilityLabel='Date'\r\n    //       style={{ backgroundColor: \"white\", width: 400 }}\r\n    //     >\r\n    //       <Popover.Arrow />\r\n    //       <Popover.CloseButton\r\n    //         onPress={() => {\r\n    //           setIsOpen(false);\r\n    //         }}\r\n    //       />\r\n    //       <Popover.Header\r\n    //         style={{\r\n    //           borderWidth: 0,\r\n    //           borderBottomColor: \"white\",\r\n    //           backgroundColor: \"white\",\r\n    //         }}\r\n    //       >\r\n    //         {\"Set Auto Reload Credit\"}\r\n    //       </Popover.Header>\r\n    //       <Popover.Body style={{ height: vh(220) }} marginTop={vh(10)} bg='white'>\r\n    //         <VStack space={8} style={{ marginTop: vh(-20) }}>\r\n    //           <HStack\r\n    //             space={4}\r\n    //             style={{ width: vw(180), justifyContent: \"space-between\" }}\r\n    //           >\r\n    //             <ShadowInput\r\n    //               isRequired\r\n    //               name='amount'\r\n    //               label={\"Enter reload amount \"}\r\n    //               placeholder='Enter reload amount'\r\n    //               control={control}\r\n    //               rules={{\r\n    //                 pattern: {\r\n    //                   value: /^(0|[1-9]\\d*)(\\.\\d+)?$/,\r\n    //                   message: \"Please enter valid reload amount\",\r\n    //                 },\r\n    //                 required: {\r\n    //                   value: true,\r\n    //                   message: \"Please enter valid reload amount\",\r\n    //                 },\r\n    //               }}\r\n    //               invalid={errors.amount ? true : false}\r\n    //               error={errors.amount ? errors.amount.message : \"\"}\r\n    //               inputStyle={{}}\r\n    //               // height={vh(80)}\r\n    //             />\r\n    //             <ShadowInput\r\n    //               isRequired\r\n    //               name='threshold'\r\n    //               label={\"Enter reload threshold \"}\r\n    //               placeholder='Enter threshold'\r\n    //               control={control}\r\n    //               rules={{\r\n    //                 pattern: {\r\n    //                   value: /^\\d+$/,\r\n    //                   message: \"Please enter valid reload threshold\",\r\n    //                 },\r\n    //                 required: {\r\n    //                   value: true,\r\n    //                   message: \"Please enter valid reload threshold\",\r\n    //                 },\r\n    //               }}\r\n    //               invalid={errors.threshold ? true : false}\r\n    //               error={errors.threshold ? errors.threshold.message : \"\"}\r\n    //               inputStyle={{}}\r\n    //               // height={vh(80)}\r\n    //             />\r\n    //           </HStack>\r\n    //           <ShadowSwitch\r\n    //             type='switch'\r\n    //             control={control}\r\n    //             isChanged={(v) => {\r\n    //               setValue(\"autosmartsearch\", v);\r\n    //               trigger(\"autosmartsearch\");\r\n    //             }}\r\n    //             id='autosmartsearch'\r\n    //             name='autosmartsearch'\r\n    //             label='Enable Auto Smart Search? '\r\n    //             isChecked={getValues(\"autosmartsearch\")}\r\n    //             // required\r\n    //             invalid={errors.autosmartsearch ? true : false}\r\n    //             error={\r\n    //               errors.autosmartsearch ? errors.autosmartsearch.message : \"\"\r\n    //             }\r\n    //             rules={{}}\r\n    //           />\r\n    //           <HStack space={4} style={{ justifyContent: \"center\" }}>\r\n    //             <ShadowButton\r\n    //               color={\"rgba(0,0,0, 0.5 )\"}\r\n    //               label='Cancel'\r\n    //               variant='outline'\r\n    //               onPress={() => {\r\n    //                 reset();\r\n    //                 setIsOpen(false);\r\n    //               }}\r\n    //               style={{ height: vh(36) }}\r\n    //             />\r\n    //             <ShadowButton\r\n    //               isLoading={isSaving}\r\n    //               label='Save'\r\n    //               onPress={handleSubmit(onSubmit)}\r\n    //               style={{ height: vh(36) }}\r\n    //             />\r\n    //           </HStack>\r\n    //         </VStack>\r\n    //       </Popover.Body>\r\n    //     </Popover.Content>\r\n    //   </Popover>\r\n  );\r\n};\r\n\r\nconst Credits = ({ _showAlert, profile }) => {\r\n  const dispatch = useDispatch();\r\n  const sz = useBreakpointValue({\r\n    base: \"base\",\r\n    sm: \"sm\",\r\n    lg: \"lg\",\r\n    md: \"md\",\r\n    xl: \"xl\",\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [limit, setLimit] = useState(5);\r\n  const [page, setPage] = useState(1);\r\n  const { plan } = useSelector((state) => state.plan);\r\n  const { creditsHistory, total } = useSelector((state) => state.credits);\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    _getData(unmounted);\r\n    return () => {\r\n      unmounted = true;\r\n    };\r\n  }, [page, limit]);\r\n\r\n  const _getData = useCallback(\r\n    async (unmounted = false) => {\r\n      try {\r\n        if (!unmounted) {\r\n          // console.log(page, limit);\r\n          await dispatch(settingsActions.fetchCredits(page, parseInt(limit)));\r\n          setIsLoading(false);\r\n        }\r\n      } catch (err) {\r\n        if (!unmounted) {\r\n          setIsLoading(false);\r\n          _showAlert(\"error\", err.message);\r\n        }\r\n      }\r\n    },\r\n    [page, limit]\r\n  );\r\n\r\n  const NoItemsFound = () => {\r\n    return (\r\n      <Center marginTop={vh(100)}>\r\n        <Text>No credit data found!</Text>\r\n      </Center>\r\n    );\r\n  };\r\n\r\n  const _renderItem = ({ item, index }) => {\r\n    const isEnd = index === creditsHistory.length - 1;\r\n    return sz === \"sz\" || sz === \"base\" ? (\r\n      <VStack\r\n        style={{\r\n          boxShadow: \"0px 3px 10px #0000001A\",\r\n          marginVertical: vh(5),\r\n          marginHorizontal: vh(5),\r\n          paddingVertical: vh(5),\r\n          paddingHorizontal: vw(5),\r\n          borderRadius: vw(10),\r\n        }}\r\n        space={1}\r\n      >\r\n        <Text\r\n          style={{\r\n            fontSize: vw(15),\r\n            fontFamily: \"Poppins\",\r\n            alignItems: \"center\",\r\n            color: Colors.primary,\r\n          }}\r\n          flex={2}\r\n          flexWrap={\"wrap\"}\r\n          textAlign={\"left\"}\r\n        >\r\n          {item.desc + \": \" + item.credits.toFixed(2)}\r\n        </Text>\r\n        <Text\r\n          style={{\r\n            fontSize: vw(15),\r\n            fontFamily: \"Poppins\",\r\n            alignItems: \"center\",\r\n          }}\r\n          flex={2.5}\r\n          textAlign={\"left\"}\r\n        >\r\n          {moment(item.created).format(\"MM/DD/YYYY - hh:mm A A\")}\r\n        </Text>\r\n      </VStack>\r\n    ) : (\r\n      <HStack\r\n        flex={9}\r\n        style={{\r\n          // borderRadius: vw(10),\r\n          backgroundColor: \"white\",\r\n          // marginHorizontal: vw(20),\r\n          // marginVertical: vh(20),\r\n          paddingHorizontal: vw(20),\r\n          justifyContent: \"flex-start\",\r\n          borderBottomWidth: isEnd ? 0 : 1,\r\n          borderBottomColor: \"rgba(0, 0, 0, 0.15)\",\r\n        }}\r\n      >\r\n        <Text\r\n          style={{\r\n            fontSize: vw(15),\r\n            fontFamily: \"Poppins\",\r\n            paddingVertical: vh(20),\r\n            height: vh(60),\r\n            alignItems: \"center\",\r\n            color: Colors.primary,\r\n          }}\r\n          flex={2}\r\n          flexWrap={\"wrap\"}\r\n          textAlign={\"left\"}\r\n        >\r\n          {item.desc + \": \" + item.credits.toFixed(2)}\r\n        </Text>\r\n        <Text\r\n          style={{\r\n            fontSize: vw(15),\r\n            fontFamily: \"Poppins\",\r\n            paddingVertical: vh(20),\r\n            height: vh(60),\r\n            alignItems: \"center\",\r\n          }}\r\n          flex={2.5}\r\n          textAlign={\"left\"}\r\n        >\r\n          {moment(item.created).format(\"MM/DD/YYYY - hh:mm A\")}\r\n        </Text>\r\n      </HStack>\r\n    );\r\n  };\r\n\r\n  const RecentTransaction = () => {\r\n    const transaction = creditsHistory && creditsHistory[0];\r\n    return (\r\n      <Card\r\n        style={{\r\n          width: sz === \"sm\" || sz === \"base\" ? \"100%\" : \"32%\",\r\n          flex: 1,\r\n          height: vh(300),\r\n        }}\r\n        title={\"Recent Transaction\"}\r\n      >\r\n        {transaction ? (\r\n          <VStack\r\n            style={{ flex: 1, marginVertical: vh(10), paddingBottom: vh(20) }}\r\n          >\r\n            <HStack\r\n              style={{\r\n                justifyContent: \"space-between\",\r\n                marginVertical: vh(10),\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  fontFamily: \"Poppins\",\r\n                  fontSize: vw(13),\r\n                  color: \"#919191\",\r\n                }}\r\n              >\r\n                You Added\r\n              </Text>\r\n              <Text\r\n                style={{\r\n                  fontFamily: \"Poppins_medium\",\r\n                  fontSize: vw(13),\r\n                  color: \"#303030\",\r\n                }}\r\n              >\r\n                {transaction.pay ? transaction.pay.amount : \"-\"}\r\n              </Text>\r\n            </HStack>\r\n            <HStack\r\n              style={{\r\n                justifyContent: \"space-between\",\r\n                marginVertical: vh(10),\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  fontFamily: \"Poppins\",\r\n                  fontSize: vw(13),\r\n                  color: \"#919191\",\r\n                }}\r\n              >\r\n                Date\r\n              </Text>\r\n              <Text\r\n                style={{\r\n                  fontFamily: \"Poppins_medium\",\r\n                  fontSize: vw(13),\r\n                  color: \"#303030\",\r\n                }}\r\n              >\r\n                {moment(transaction.created).format(\"MM-DD-YYYY HH:mm\")}\r\n              </Text>\r\n            </HStack>\r\n            <HStack\r\n              style={{\r\n                justifyContent: \"space-between\",\r\n                marginVertical: vh(10),\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  fontFamily: \"Poppins\",\r\n                  fontSize: vw(13),\r\n                  color: \"#919191\",\r\n                }}\r\n              >\r\n                Payment\r\n              </Text>\r\n              <Text\r\n                style={{\r\n                  fontFamily: \"Poppins_medium\",\r\n                  fontSize: vw(13),\r\n                  color: \"#303030\",\r\n                }}\r\n              >\r\n                {transaction.pay ? transaction.pay.card : \"-\"}\r\n              </Text>\r\n            </HStack>\r\n            <HStack\r\n              style={{\r\n                justifyContent: \"space-between\",\r\n                marginVertical: vh(10),\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  fontFamily: \"Poppins\",\r\n                  fontSize: vw(13),\r\n                  color: \"#919191\",\r\n                }}\r\n              >\r\n                Credits\r\n              </Text>\r\n              <Text\r\n                style={{\r\n                  fontFamily: \"Poppins_medium\",\r\n                  fontSize: vw(13),\r\n                  color: \"#303030\",\r\n                }}\r\n              >\r\n                {transaction.credits}\r\n              </Text>\r\n            </HStack>\r\n            <VStack\r\n              style={{\r\n                justifyContent: \"space-between\",\r\n                marginTop: vh(10),\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  fontFamily: \"Poppins\",\r\n                  fontSize: vw(11),\r\n                  color: \"#919191\",\r\n                }}\r\n              >\r\n                Description\r\n              </Text>\r\n              <Text\r\n                style={{\r\n                  fontFamily: \"Poppins\",\r\n                  fontSize: vw(11),\r\n                  color: \"#303030\",\r\n                }}\r\n              >\r\n                {transaction.desc}\r\n              </Text>\r\n            </VStack>\r\n          </VStack>\r\n        ) : (\r\n          <Center flex={1}> No Transaction Found</Center>\r\n        )}\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  const CreditBalance = () => {\r\n    const transaction = creditsHistory && creditsHistory[0];\r\n    // const [isOpen, setIsOpen] = useState(false);\r\n    let timeago = transaction && transaction.credits > 0 ? \"Added \" : \"Spent \";\r\n    if (transaction) {\r\n      timeago += moment(transaction.created).fromNow();\r\n    }\r\n    return (\r\n      <>\r\n        <Card\r\n          style={{\r\n            paddingVertical: vh(20),\r\n            width: sz === \"sm\" || sz === \"base\" ? \"100%\" : \"65.3%\",\r\n          }}\r\n          // title={\"Personal Information\"}\r\n        >\r\n          <Card\r\n            style={{\r\n              width: \"100%\",\r\n              padding: vw(20),\r\n              height: vh(150),\r\n              backgroundColor: \"white\",\r\n            }}\r\n            // title={\"Personal Information\"}\r\n          >\r\n            <HStack justifyContent={\"space-between\"}>\r\n              <VStack>\r\n                <Text\r\n                  style={{\r\n                    fontSize: vw(15),\r\n                    fontFamily: \"Poppins_medium\",\r\n                    color: \"#303030\",\r\n                  }}\r\n                >\r\n                  Current Balance\r\n                </Text>\r\n                <Text\r\n                  style={{\r\n                    fontSize: vw(40),\r\n                    fontFamily: \"Poppins_medium\",\r\n                    color: \"#303030\",\r\n                    marginVertical: vh(5),\r\n                  }}\r\n                >\r\n                  {parseFloat(profile.credits).toFixed(2)}\r\n                </Text>\r\n                <Text\r\n                  style={{\r\n                    fontSize: vw(15),\r\n                    fontFamily: \"Poppins_medium\",\r\n                    color: \"#919191\",\r\n                  }}\r\n                >\r\n                  {timeago}\r\n                </Text>\r\n              </VStack>\r\n              {profile.role === \"admin\" && (\r\n                <VStack>\r\n                  <AddCredits sz={sz} />\r\n                  <SetAutoReload\r\n                    sz={sz}\r\n                    _showAlert={_showAlert}\r\n                    profile={profile}\r\n                    dispatch={dispatch}\r\n                  />\r\n                </VStack>\r\n              )}\r\n            </HStack>\r\n          </Card>\r\n          <VStack style={{ marginTop: vh(20) }}>\r\n            <Text\r\n              style={{\r\n                fontSize: vw(13),\r\n                fontFamily: \"Poppins_medium\",\r\n                color: \"#303030\",\r\n              }}\r\n            >\r\n              Payment methods\r\n            </Text>\r\n            <PaymentMethods profile={profile} _showAlert={_showAlert} />\r\n          </VStack>\r\n        </Card>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const AddCredits = () => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [isPaying, setIsPaying] = useState(false);\r\n    const {\r\n      control,\r\n      handleSubmit,\r\n      formState: { errors },\r\n      reset,      \r\n    } = useForm({\r\n      mode: \"all\",\r\n      defaultValues: {\r\n        amount: \"10\",\r\n      },\r\n    });\r\n\r\n    const plan = profile.plan;\r\n    const creditprice = (plan && plan.credits) || 0;\r\n\r\n    const onSubmit = async (data) => {\r\n      try {\r\n        setIsPaying(true);\r\n        const { pm } = getUser();\r\n        const amt = creditprice * data.amount;\r\n        const action = settingsActions.purchaseCredits({\r\n          amt,\r\n          price: creditprice,\r\n          credits: data.amount,\r\n          pm,\r\n        });\r\n        const result = await dispatch(action);\r\n        if (result === \"succeeded\") {\r\n          await dispatch(settingsActions.fetchCredits(1, limit));\r\n          setIsPaying(false);\r\n          setIsOpen(false);\r\n          _showAlert(\"success\", \"Thank you! Payment successful.\");\r\n        } else {\r\n          _showAlert(\"error\", \"Sorry! Payment failed. Please try again.\");\r\n        }\r\n        setIsPaying(false);\r\n      } catch (err) {\r\n        console.log(\"Created Error\", err);\r\n        _showAlert(\"error\", \"something went wrong. Please try again.\");\r\n        setIsPaying(false);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <VStack   marginTop={vh(10)}>\r\n        <Pressable\r\n          onPress={() => {\r\n            setIsOpen(true);\r\n          }}\r\n          style={{\r\n            borderColor: \"rgba(0,0,0,0.15)\",\r\n            borderWidth: 1,\r\n            borderRadius: 100,\r\n            paddingHorizontal: vh(15),\r\n            paddingVertical: vh(sz === \"sm\" || sz === \"base\" ? 5 : 8),\r\n            background: \"white\",\r\n            height: vw(36),\r\n            width: sz === \"sm\" || sz === \"base\" ? vw(90) : \"100%\",\r\n            // marginTop: vh(sz === \"sm\" || sz === \"base\" ? 5 : 15),\r\n\r\n            // width: vw(!active ? 100 : 170),\r\n            background:\r\n              \"transparent linear-gradient(124deg, rgba(186, 71, 243, 1) 0%, rgba(125, 43, 233, 1) 100%) 0% 0% no-repeat padding-box\",\r\n          }}\r\n        >\r\n          <Text\r\n            style={{\r\n              color: \"white\",\r\n              fontSize: sz === \"sm\" || sz === \"base\" ? vw(11) : vw(13),\r\n              fontFamily: \"Poppins_medium\",\r\n              textAlign: \"center\",\r\n              lineHeight: sz === \"sm\" || sz === \"base\" ? vh(12) : vh(18),\r\n            }}\r\n          >\r\n            {\"Add Credits\"}\r\n          </Text>\r\n        </Pressable>\r\n        <ShadowModal\r\n          placement='top'\r\n          size='md'\r\n          height={vh(250)}\r\n          bodyHeight={vh(100)}\r\n          isOpen={isOpen}\r\n          header='Add Credits'\r\n          close={() => {\r\n            reset();\r\n            setIsOpen(false);\r\n          }}\r\n          buttons={\r\n            <HStack space={2}>\r\n              <ShadowButton\r\n                space={2}\r\n                label='Cancel'\r\n                variant='outline'\r\n                onPress={() => {\r\n                  reset();\r\n                  setIsOpen(false);\r\n                }}\r\n                style={{ height: vh(36) }}\r\n              />\r\n              <ShadowButton\r\n                space={2}\r\n                isLoading={isSaving}\r\n                label='Purchase'\r\n                onPress={handleSubmit(onSubmit)}\r\n                style={{ height: vh(36) }}\r\n              />\r\n            </HStack>\r\n          }\r\n        >\r\n          <VStack space={4}>\r\n            <ShadowInput\r\n              isRequired\r\n              name='amount'\r\n              label={\"Enter amount of credits you wish to purchase \"}\r\n              placeholder='Enter credits'\r\n              control={control}\r\n              rules={{\r\n                pattern: {\r\n                  value: /^(0|[1-9]\\d*)(\\.\\d+)?$/,\r\n                  message: \"Please enter valid amount of credits\",\r\n                },\r\n                required: {\r\n                  value: true,\r\n                  message: \"Please enter valid amount of credits\",\r\n                },\r\n              }}\r\n              invalid={errors.amount ? true : false}\r\n              error={errors.amount ? errors.amount.message : \"\"}\r\n              inputStyle={{}}\r\n            />\r\n          </VStack>\r\n        </ShadowModal>\r\n      </VStack>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <VStack>\r\n      <PageHeader\r\n        title='Credits'\r\n        // subtitle={\r\n        //   \"Es un hecho establecido hace demasiado tiempo que un lector se\"\r\n        // }\r\n      />\r\n\r\n      {/* Credit Balance */}\r\n      <VStack>\r\n        <Hidden only={[\"sm\", \"base\"]}>\r\n          <HStack\r\n            space={8}\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"space-between\",\r\n              marginBottom: vh(20),\r\n            }}\r\n          >\r\n            <CreditBalance />\r\n            <RecentTransaction />\r\n          </HStack>\r\n        </Hidden>\r\n        <Hidden from={\"md\"}>\r\n          <VStack\r\n            space={8}\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              marginBottom: vh(20),\r\n            }}\r\n          >\r\n            <CreditBalance />\r\n            <RecentTransaction />\r\n          </VStack>\r\n        </Hidden>\r\n      </VStack>\r\n      {/* History */}\r\n      <VStack\r\n        style={{\r\n          boxShadow: \"0px 3px 10px #0000001A\",\r\n          borderRadius: 10,\r\n          backgroundColor: \"white\",\r\n          // paddingVertical: vh(20),\r\n          paddingHorizontal: vw(20),\r\n          marginVertical: vh(20),\r\n          flex: 1,\r\n        }}\r\n      >\r\n        <Text\r\n          style={{\r\n            marginTop: vh(10),\r\n            fontSize: vw(15),\r\n            fontFamily: \"Poppins_medium\",\r\n            color: \"rgba(48, 48, 48, 1)\",\r\n          }}\r\n        >\r\n          Credit History\r\n        </Text>\r\n        <Hidden only={[\"sm\", \"base\"]}>\r\n          <HStack\r\n            flex={9}\r\n            style={{\r\n              borderTopLeftRadius: vh(10),\r\n              borderTopRightRadius: vh(10),\r\n              backgroundColor: \"rgba(251, 252, 254, 1)\",\r\n              // marginHorizontal: vw(20),\r\n              // marginTop: vh(10),\r\n              paddingHorizontal: vw(20),\r\n              justifyContent: \"flex-start\",\r\n              borderBottomWidth: 2,\r\n              borderBottomColor: \"rgba(0, 0, 0, 0.15)\",\r\n              height: vh(60),\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontSize: vw(15),\r\n                fontFamily: \"Poppins\",\r\n                paddingVertical: vh(20),\r\n                height: vh(60),\r\n                alignItems: \"center\",\r\n              }}\r\n              flex={2}\r\n              textAlign={\"left\"}\r\n            >\r\n              Description\r\n            </Text>\r\n            <Text\r\n              style={{\r\n                fontSize: vw(15),\r\n                fontFamily: \"Poppins\",\r\n                paddingVertical: vh(20),\r\n                height: vh(60),\r\n                alignItems: \"center\",\r\n              }}\r\n              flex={2.5}\r\n              textAlign={\"left\"}\r\n            >\r\n              Date\r\n            </Text>\r\n          </HStack>\r\n        </Hidden>\r\n        <FlatList\r\n          contentContainerStyle={{ paddingBottom: 60 }}\r\n          style={{ paddingTop: 5 }}\r\n          ListEmptyComponent={<NoItemsFound />}\r\n          data={creditsHistory}\r\n          keyExtractor={(item) => item._id}\r\n          renderItem={_renderItem}\r\n          initialNumToRender={10}\r\n          maxToRenderPerBatch={10}\r\n          scrollEnabled={true}\r\n        />\r\n        {total > limit && (\r\n          <ShadowPagination\r\n            total={total}\r\n            limit={limit}\r\n            setLimit={setLimit}\r\n            setPage={setPage}\r\n            page={page}\r\n            view={false}\r\n          />\r\n        )}\r\n      </VStack>\r\n      {/* Set Auto reload modal */}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Credits;\r\n","import React from \"react\";\r\nimport { HStack, VStack, Text } from \"native-base\";\r\nimport { vh, vw } from \"../../../util\";\r\n\r\nconst PageHeader = ({ title, subtitle, rightElement, noborder = false }) => {\r\n  let bottomBorder = {\r\n    borderBottomColor: \"rgba(0,0,0, 0.15)\",\r\n    borderBottomWidth: vw(1.5),\r\n    marginBottom: vh(20),\r\n  };\r\n  if (noborder) {\r\n    bottomBorder = {};\r\n  }\r\n  return (\r\n    <HStack\r\n      style={{ paddingBottom: vh(16), ...bottomBorder }}\r\n      justifyContent={\"space-between\"}\r\n    >\r\n      <VStack>\r\n        <Text\r\n          style={{\r\n            fontSize: vw(24),\r\n            color: \"#303030\",\r\n            fontFamily: \"Poppins_medium\",\r\n          }}\r\n        >\r\n          {title}\r\n        </Text>\r\n        <Text\r\n          style={{\r\n            fontSize: vw(13),\r\n            color: \"#666666\",\r\n            fontFamily: \"Poppins\",\r\n          }}\r\n        >\r\n          {subtitle}\r\n        </Text>\r\n      </VStack>\r\n      {rightElement}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import React from \"react\";\r\nimport { VStack, HStack, Text, Pressable } from \"native-base\";\r\nimport AddIcon from \"../../../components/svg/AddIcon\";\r\nimport Util from \"../../../util\";\r\nimport Colors from \"../../../constants/Colors\";\r\nconst { vw, vh } = Util;\r\nconst Card = ({\r\n  title,\r\n  subtitle,\r\n  children,\r\n  onPress,\r\n  rightElement,\r\n  style,\r\n  titlestyle,\r\n  headerStyle,\r\n}) => {\r\n  return (\r\n    <VStack\r\n      style={{\r\n        backgroundColor: \"white\",\r\n        borderRadius: vw(10),\r\n        boxShadow: \"0px 3px 10px #0000001A\",\r\n        ...style,\r\n      }}\r\n    >\r\n      {title && (\r\n        <HStack\r\n          style={{\r\n            height: vh(54),\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            marginHorizontal: vw(20),\r\n            borderBottomWidth: vw(2),\r\n            borderBottomColor: \"rgba(0,0,0, 0.10)\",\r\n            ...headerStyle,\r\n          }}\r\n        >\r\n          <VStack space={1}>\r\n            <Text\r\n              style={{\r\n                fontFamily: \"Poppins_medium\",\r\n                fontSize: vw(13),\r\n                color: \"#303030\",\r\n                ...titlestyle,\r\n              }}\r\n            >\r\n              {title}\r\n            </Text>\r\n            {subtitle && (\r\n              <Text\r\n                style={{\r\n                  fontFamily: \"Poppins_medium\",\r\n                  fontSize: vw(13),\r\n                  color: \"#303030\",\r\n                  marginTop: vh(-8)\r\n                }}\r\n              >\r\n                {subtitle}\r\n              </Text>\r\n            )}\r\n          </VStack>\r\n          {onPress ? (\r\n            <Pressable onPress={onPress}>\r\n              {rightElement ? rightElement : <AddIcon fill={Colors.primary} />}\r\n            </Pressable>\r\n          ) : (\r\n            rightElement\r\n          )}\r\n        </HStack>\r\n      )}\r\n      <VStack style={{ marginHorizontal: vw(20) }}>{children}</VStack>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useCallback, useRef, useState} from 'react';\n\nexport function useControlledState<T>(\n  value: T,\n  defaultValue: T,\n  onChange: (value: T, ...args: any[]) => void\n): [T, (value: T, ...args: any[]) => void]  {\n  let [stateValue, setStateValue] = useState(value || defaultValue);\n  let ref = useRef(value !== undefined);\n  let wasControlled = ref.current;\n  let isControlled = value !== undefined;\n  // Internal state reference for useCallback\n  let stateRef = useRef(stateValue);\n  if (wasControlled !== isControlled) {\n    console.warn(`WARN: A component changed from ${wasControlled ? 'controlled' : 'uncontrolled'} to ${isControlled ? 'controlled' : 'uncontrolled'}.`);\n  }\n\n  ref.current = isControlled;\n\n  let setValue = useCallback((value, ...args) => {\n    let onChangeCaller = (value, ...onChangeArgs) => {\n      if (onChange) {\n        if (!Object.is(stateRef.current, value)) {\n          onChange(value, ...onChangeArgs);\n        }\n      }\n      if (!isControlled) {\n        stateRef.current = value;\n      }\n    };\n\n    if (typeof value === 'function') {\n      console.warn('We can not support a function callback. See Github Issues for details https://github.com/adobe/react-spectrum/issues/2320');\n      // this supports functional updates https://reactjs.org/docs/hooks-reference.html#functional-updates\n      // when someone using useControlledState calls setControlledState(myFunc)\n      // this will call our useState setState with a function as well which invokes myFunc and calls onChange with the value from myFunc\n      // if we're in an uncontrolled state, then we also return the value of myFunc which to setState looks as though it was just called with myFunc from the beginning\n      // otherwise we just return the controlled value, which won't cause a rerender because React knows to bail out when the value is the same\n      let updateFunction = (oldValue, ...functionArgs) => {\n        let interceptedValue = value(isControlled ? stateRef.current : oldValue, ...functionArgs);\n        onChangeCaller(interceptedValue, ...args);\n        if (!isControlled) {\n          return interceptedValue;\n        }\n        return oldValue;\n      };\n      setStateValue(updateFunction);\n    } else {\n      if (!isControlled) {\n        setStateValue(value);\n      }\n      onChangeCaller(value, ...args);\n    }\n  }, [isControlled, onChange]);\n\n  // If a controlled component's value prop changes, we need to update stateRef\n  if (isControlled) {\n    stateRef.current = value;\n  } else {\n    value = stateValue;\n  }\n\n  return [value, setValue];\n}\n","import React, { memo, forwardRef } from 'react';\nimport { useToggleState } from '@react-stately/toggle';\nimport { Switch as RNSwitch } from 'react-native';\nimport isNil from 'lodash.isnil';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useToken } from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport type { ISwitchProps } from './types';\nimport { mergeRefs } from '../../../utils';\nimport { useHover } from '@react-native-aria/interactions';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { useFormControlContext } from '../../composites/FormControl';\nimport { combineContextAndProps } from '../../../utils';\n\nconst StyledNBSwitch = makeStyledComponent(RNSwitch);\n\n// TODO: Needs proper refactor\nconst Switch = (\n  {\n    disabled,\n    isDisabled,\n    isInvalid,\n    isChecked,\n    defaultIsChecked,\n    accessibilityLabel,\n    accessibilityHint,\n    onToggle,\n    value,\n    onValueChange,\n    isHovered: isHoveredProp,\n    ...props\n  }: ISwitchProps,\n  ref: any\n) => {\n  const formControlContext = useFormControlContext();\n\n  const combinedProps = combineContextAndProps(formControlContext, props);\n\n  const state = useToggleState({\n    defaultSelected: !isNil(defaultIsChecked) ? defaultIsChecked : false,\n  });\n  const checked = !isNil(isChecked) ? isChecked : state.isSelected;\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n\n  const {\n    onTrackColor: _onTrackColor,\n    offTrackColor: _offTrackColor,\n    onThumbColor: _onThumbColor,\n    offThumbColor: _offThumbColor,\n    ...resolvedProps\n  } = usePropsResolution('Switch', props, {\n    isHovered: isHoveredProp || isHovered,\n    isDisabled: disabled || isDisabled || combinedProps.isDisabled,\n    isInvalid: isInvalid || combinedProps.isInvalid,\n    isChecked: checked,\n  });\n\n  const onTrackColor = useToken('colors', _onTrackColor);\n  const offTrackColor = useToken('colors', _offTrackColor);\n  const onThumbColor = useToken('colors', _onThumbColor);\n  const offThumbColor = useToken('colors', _offThumbColor);\n\n  //TODO: refactor for responsive prop\n  if (\n    useHasResponsiveProps({\n      ...props,\n      isDisabled,\n      isInvalid,\n      isChecked,\n      defaultIsChecked,\n      accessibilityLabel,\n      accessibilityHint,\n    })\n  ) {\n    return null;\n  }\n  return (\n    <StyledNBSwitch\n      accessibilityLabel={accessibilityLabel}\n      accessibilityHint={accessibilityHint}\n      trackColor={{ false: offTrackColor, true: onTrackColor }}\n      thumbColor={checked ? onThumbColor : offThumbColor}\n      activeThumbColor={onThumbColor} // react-native-web prop for active thumbColor\n      ios_backgroundColor={offTrackColor}\n      {...resolvedProps}\n      disabled={disabled || isDisabled || combinedProps.isDisabled}\n      onValueChange={(val: boolean) => {\n        onValueChange && onValueChange(val);\n        onToggle ? onToggle(val) : state.toggle();\n      }}\n      value={value || checked}\n      ref={mergeRefs([ref, _ref])}\n    />\n  );\n};\n\nexport default memo(forwardRef(Switch));\nexport type { ISwitchProps };\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ToggleProps} from '@react-types/checkbox';\nimport {useControlledState} from '@react-stately/utils';\n\nexport interface ToggleState {\n  /** Whether the toggle is selected. */\n  readonly isSelected: boolean,\n\n  /** Updates selection state. */\n  setSelected(isSelected: boolean): void,\n  \n  /** Toggle the selection state. */\n  toggle(): void\n}\n\n/**\n * Provides state management for toggle components like checkboxes and switches.\n */\nexport function useToggleState(props: ToggleProps = {}): ToggleState {\n  let {isReadOnly, onChange} = props;\n\n  // have to provide an empty function so useControlledState doesn't throw a fit\n  // can't use useControlledState's prop calling because we need the event object from the change\n  let [isSelected, setSelected] = useControlledState(props.isSelected, props.defaultSelected || false, () => {});\n\n  function updateSelected(value) {\n    if (!isReadOnly) {\n      setSelected(value);\n      if (onChange) {\n        onChange(value);\n      }\n    }\n  }\n\n  function toggleState() {\n    if (!isReadOnly) {\n      setSelected(prev => {\n        let newVal = !prev;\n        if (onChange) {\n          onChange(newVal);\n        }\n        return newVal;\n      });\n    }\n  }\n\n  return {\n    isSelected,\n    setSelected: updateSelected,\n    toggle: toggleState\n  };\n}\n"],"names":["ShadowPagination","total","limit","setLimit","setPage","page","style","setIsLoading","view","pageCount","Math","ceil","MyPaginate","styled","ReactPaginate","attrs","activeClassName","vw","HStack","boxShadow","justifyContent","alignItems","height","vh","backgroundColor","paddingHorizontal","Text","fontFamily","fontSize","color","marginRight","Select","outlineColor","outlineStyle","borderWidth","variant","selectedValue","parseInt","width","onValueChange","v","dropdownIcon","DropDownIcon","label","value","marginLeft","breakLabel","nextLabel","onPageChange","p","selected","pageRangeDisplayed","marginPagesDisplayed","previousLabel","renderOnZeroPageCount","forcePage","React","props","isInvalid","invalid","control","rules","name","render","field","onChange","onBlur","onTrackColor","Colors","marginTop","size","onToggle","isChanged","colorScheme","error","fill","stroke","xmlns","viewBox","Path","d","SetAutoReload","profile","_showAlert","dispatch","sz","useState","isOpen","setIsOpen","isSaving","setIsSaving","useForm","mode","defaultValues","amount","settings","reload_credit","toString","threshold","reload_threshold","autosmartsearch","handleSubmit","errors","formState","reset","getValues","setValue","trigger","onSubmit","data","action","authActions","_id","console","log","onPress","borderColor","borderRadius","paddingVertical","background","textAlign","lineHeight","placement","close","header","buttons","space","isLoading","isRequired","placeholder","pattern","message","required","inputStyle","type","id","isChecked","useDispatch","useBreakpointValue","base","sm","lg","md","xl","useSelector","state","plan","credits","creditsHistory","useEffect","unmounted","_getData","useCallback","settingsActions","NoItemsFound","RecentTransaction","transaction","flex","title","marginVertical","paddingBottom","pay","moment","created","format","card","desc","CreditBalance","timeago","fromNow","padding","parseFloat","toFixed","role","AddCredits","setIsPaying","creditprice","getUser","pm","amt","price","bodyHeight","only","marginBottom","from","borderTopLeftRadius","borderTopRightRadius","borderBottomWidth","borderBottomColor","contentContainerStyle","paddingTop","ListEmptyComponent","keyExtractor","item","renderItem","isEnd","index","length","marginHorizontal","flexWrap","initialNumToRender","maxToRenderPerBatch","scrollEnabled","subtitle","rightElement","noborder","bottomBorder","Util","children","titlestyle","headerStyle","$458b0a5536c1a7cf$export$40bfa8c7b0832715","value1","defaultValue","$6imuh$useState","stateValue","setStateValue","ref","$6imuh$useRef","undefined","wasControlled","current","isControlled","stateRef","warn","$6imuh$useCallback","value2","args","onChangeCaller","onChangeArgs","Object","is","updateFunction","oldValue","functionArgs","interceptedValue","StyledNBSwitch","makeStyledComponent","RNSwitch","Switch","disabled","isDisabled","defaultIsChecked","accessibilityLabel","accessibilityHint","isHoveredProp","isHovered","formControlContext","useFormControlContext","combinedProps","combineContextAndProps","useToggleState","defaultSelected","isNil","checked","isSelected","_ref","useHover","usePropsResolution","_onTrackColor","_offTrackColor","offTrackColor","_onThumbColor","onThumbColor","_offThumbColor","offThumbColor","resolvedProps","useToken","useHasResponsiveProps","trackColor","false","true","thumbColor","activeThumbColor","ios_backgroundColor","val","toggle","mergeRefs","memo","forwardRef","isReadOnly","useControlledState","setSelected","prev","newVal"],"sourceRoot":""}