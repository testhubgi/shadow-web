{"version":3,"file":"static/js/7532.05eae05c.chunk.js","mappings":"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","sources":["components/svg/AddIcon.js","components/svg/NotesIcon.js","context/index.js","../node_modules/native-base/lib/module/components/composites/Tooltip/Tooltip.tsx","pages/private/lists/HorizontalItem.js","pages/private/lists/VerticalItem.js","pages/private/lists/AddContacts.js","pages/private/lists/AddList.js","pages/private/lists/index.js","../node_modules/native-base/lib/module/components/basic/View/View.tsx","../node_modules/native-base/lib/module/hooks/useDisclose.ts"],"sourcesContent":["import * as React from \"react\"\r\nimport Svg, { Path } from \"react-native-svg\"\r\n\r\nconst AddIcon = ({fill, stroke}) => (\r\n  <Svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width={24} height={24} >\r\n    <Path data-name=\"Rectangle 37\" fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n    <Path\r\n      data-name=\"Path 10127\"\r\n      d=\"M17.1 12.52h-4.22v4.26H11.1v-4.26H6.9v-1.66h4.2V6.58h1.78v4.28h4.22Z\"\r\n      fill={fill || \"#fff\"}\r\n    />\r\n  </Svg>\r\n)\r\n\r\nexport default AddIcon\r\n","import * as React from \"react\"\r\nimport Svg, { Path, G } from \"react-native-svg\"\r\n\r\nconst NotesIcon = ({fill}) => (\r\n  <Svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width={24} height={24} >\r\n    <Path data-name=\"Rectangle 243\" fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n    <G fill={fill || \"#7d2be9\"}>\r\n      <Path\r\n        data-name=\"Path 10125\"\r\n        d=\"M15.666 17.78H5.889V8.003h5.876l.889-.889H5.889A.889.889 0 0 0 5 8.003v9.778a.889.889 0 0 0 .889.889h9.778a.889.889 0 0 0 .889-.889v-6.667l-.889.889Z\"\r\n      />\r\n      <Path\r\n        data-name=\"Path 10126\"\r\n        d=\"m18.122 7.047-1.5-1.5a.716.716 0 0 0-1.013 0l-6.087 6.127-.5 2.138a.716.716 0 0 0 .7.857.751.751 0 0 0 .164 0l2.156-.476 6.08-6.137a.716.716 0 0 0 0-1.013Zm-6.54 6.324-1.627.36.378-1.613L14.922 7.5l1.253 1.253Zm5.093-5.124-1.253-1.249.689-.7 1.262 1.262Z\"\r\n      />\r\n    </G>\r\n  </Svg>\r\n)\r\n\r\nexport default NotesIcon\r\n","import React from 'react';\r\n\r\nconst SocketContext = React.createContext();\r\n\r\nexport default SocketContext;\r\n","import { OverlayContainer } from '@react-native-aria/overlays';\nimport React from 'react';\nimport { useControllableState, useKeyboardDismissable } from '../../../hooks';\nimport { Popper } from '../Popper';\nimport { composeEventHandlers, mergeRefs } from '../../../utils';\nimport { PresenceTransition } from '../Transitions';\nimport { Platform, StyleSheet } from 'react-native';\nimport { usePropsResolution } from '../../../hooks';\nimport Box from '../../primitives/Box';\nimport type { ITooltipProps } from './types';\nimport { useId } from '@react-native-aria/utils';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { uniqueId } from 'lodash';\nimport { ResponsiveQueryContext } from '../../../utils/useResponsiveQuery/ResponsiveQueryProvider';\n\nexport const Tooltip = ({\n  label,\n  children,\n  onClose,\n  onOpen,\n  defaultIsOpen,\n  placement,\n  openDelay = 0,\n  closeDelay = 0,\n  closeOnClick = true,\n  offset,\n  isDisabled,\n  hasArrow,\n  arrowSize = 12,\n  isOpen: isOpenProp,\n  ...props\n}: ITooltipProps) => {\n  if (hasArrow && offset === undefined) {\n    offset = 0;\n  } else {\n    offset = 6;\n  }\n\n  const resolvedProps = usePropsResolution('Tooltip', props);\n  const [isOpen, setIsOpen] = useControllableState({\n    value: isOpenProp,\n    defaultValue: defaultIsOpen,\n    onChange: (value) => {\n      value ? onOpen && onOpen() : onClose && onClose();\n    },\n  });\n\n  const arrowBg =\n    props.backgroundColor ?? props.bgColor ?? props.bg ?? resolvedProps.bg;\n\n  const targetRef = React.useRef(null);\n\n  const enterTimeout = React.useRef<any>();\n  const exitTimeout = React.useRef<any>();\n  // const tooltipID = '';\n  // const tooltipID = useId();\n\n  let tooltipID = uniqueId();\n\n  // let id = uniqueId();\n  const responsiveQueryContext = React.useContext(ResponsiveQueryContext);\n  const disableCSSMediaQueries = responsiveQueryContext.disableCSSMediaQueries;\n\n  if (!disableCSSMediaQueries) {\n    // This if statement technically breaks the rules of hooks, but is safe\n    // because the condition never changes after mounting.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    tooltipID = useId();\n  }\n\n  const openWithDelay = React.useCallback(() => {\n    if (!isDisabled) {\n      enterTimeout.current = setTimeout(() => setIsOpen(true), openDelay);\n    }\n  }, [isDisabled, setIsOpen, openDelay]);\n\n  const closeWithDelay = React.useCallback(() => {\n    if (enterTimeout.current) {\n      clearTimeout(enterTimeout.current);\n    }\n    exitTimeout.current = setTimeout(() => setIsOpen(false), closeDelay);\n  }, [closeDelay, setIsOpen]);\n\n  React.useEffect(\n    () => () => {\n      clearTimeout(enterTimeout.current);\n      clearTimeout(exitTimeout.current);\n    },\n    []\n  );\n\n  let newChildren = children;\n\n  if (typeof children === 'string') {\n    newChildren = <Box>{children}</Box>;\n  }\n\n  newChildren = React.cloneElement(newChildren, {\n    'onPress': composeEventHandlers<any>(newChildren.props.onPress, () => {\n      if (closeOnClick) {\n        closeWithDelay();\n      }\n    }),\n    'onFocus': composeEventHandlers<any>(\n      newChildren.props.onFocus,\n      openWithDelay\n    ),\n    'onBlur': composeEventHandlers<any>(\n      newChildren.props.onBlur,\n      closeWithDelay\n    ),\n    'onMouseEnter': composeEventHandlers<any>(\n      newChildren.props.onMouseEnter,\n      openWithDelay\n    ),\n    'onMouseLeave': composeEventHandlers<any>(\n      newChildren.props.onMouseLeave,\n      closeWithDelay\n    ),\n    'ref': mergeRefs([newChildren.ref, targetRef]),\n\n    'aria-describedby': isOpen ? tooltipID : undefined,\n  });\n\n  useKeyboardDismissable({\n    enabled: isOpen,\n    callback: () => setIsOpen(false),\n  });\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <>\n      {newChildren}\n      {isOpen && (\n        <OverlayContainer>\n          <PresenceTransition\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1, transition: { duration: 150 } }}\n            exit={{ opacity: 0, transition: { duration: 100 } }}\n            visible={isOpen}\n            style={StyleSheet.absoluteFill}\n          >\n            <Popper\n              triggerRef={targetRef}\n              onClose={() => setIsOpen(false)}\n              placement={placement}\n              offset={offset}\n            >\n              <Popper.Content isOpen={isOpen}>\n                {hasArrow && (\n                  <Popper.Arrow\n                    borderColor=\"transparent\"\n                    backgroundColor={arrowBg}\n                    height={arrowSize}\n                    width={arrowSize}\n                  />\n                )}\n                <Box\n                  {...resolvedProps}\n                  //@ts-ignore\n                  accessibilityRole={\n                    Platform.OS === 'web' ? 'tooltip' : undefined\n                  }\n                  nativeID={tooltipID}\n                >\n                  {label}\n                </Box>\n              </Popper.Content>\n            </Popper>\n          </PresenceTransition>\n        </OverlayContainer>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\r\nimport { HStack, VStack, Text, Center, Box, Avatar, Link } from \"native-base\";\r\nimport { CDN } from \"../../../constants/Config\";\r\nimport moment from \"moment-timezone\";\r\n\r\nimport Util from \"../../../util\";\r\n\r\nimport CalendarWhiteIcon from \"../../../components/svg/CalendarWhiteIcon\";\r\nimport SqftIcon from \"../../../components/svg/SqftIcon\";\r\nimport AcreIcon from \"../../../components/svg/AcreIcon\";\r\nimport BedIcon from \"../../../components/svg/BedIcon\";\r\nimport BathIcon from \"../../../components/svg/BathIcon\";\r\nimport TimeIcon from \"../../../components/svg/TimeIcon\";\r\nimport PriceIcon from \"../../../components/svg/PriceIcon\";\r\n\r\nconst { vw, vh } = Util;\r\n\r\nconst HorizontalItem = ({ item, cols }) => {\r\n  var currency = new Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\",\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 0,\r\n  });\r\n  //default pic\r\n  let pic = \"1\";\r\n  if (item && item.pic) {\r\n    pic = item.pic;\r\n  }\r\n  const createdUser = item.createdUser && item.createdUser;\r\n  // user name\r\n  const fullname =\r\n    createdUser && createdUser.firstname + \" \" + createdUser.lastname;\r\n  //avatar fall back\r\n  const nameSplit = fullname.split(\" \");\r\n  const fn = nameSplit[0][0];\r\n  const ln = nameSplit[1] ? nameSplit[1][0] : \"-\";\r\n  const nameFb = fn + ln;\r\n  // avatar image source uri\r\n  const ui =\r\n    createdUser && createdUser.pic && createdUser.pic.id\r\n      ? createdUser.pic.id\r\n      : \"0\";\r\n  const userUri = `${CDN}/users/${createdUser._id}/${ui}`;\r\n  //property image uri\r\n  const propertyUri = `${CDN}/properties/${item._id ? item._id : \"-\"}/${pic}`;\r\n\r\n  let sqft = \"-\";\r\n  let acre = \"-\";\r\n  if (item.sqft) {\r\n    sqft = item.sqft !== null ? item.sqft.toString() : \"-\";\r\n  }\r\n\r\n  if (item.acre) {\r\n    acre = item.acre !== null ? item.acre.toString() : \"-\";\r\n  }\r\n  //property owner name\r\n  const name = item.name && item.name !== \"\" ? item.name.trim() : \"-\";\r\n\r\n  return (\r\n    <Link\r\n      style={{\r\n        width: vw((window.screen.width - cols * 40) / cols),\r\n        height: vh(210),\r\n        marginHorizontal: vw(20),\r\n        marginVertical: vh(20),\r\n      }}\r\n      href={`/properties/${item._id}`}\r\n      // isExternal\r\n    >\r\n      <HStack\r\n        style={{\r\n          width: vw((window.screen.width - cols * 40) / cols),\r\n          height: vh(210),\r\n          borderRadius: vw(10),\r\n          backgroundColor: \"white\",\r\n          shadowColor: \"#000\",\r\n          shadowOffset: {\r\n            width: 0,\r\n            height: vh(3),\r\n          },\r\n          shadowOpacity: 0.15,\r\n          shadowRadius: vh(10),\r\n          elevation: vh(5),\r\n        }}\r\n      >\r\n        <Box\r\n          style={{\r\n            height: vh(210),\r\n            width: vw(260),\r\n            borderTopStartRadius: vw(10),\r\n            borderBottomStartRadius: vw(10),\r\n            overflow: \"hidden\",\r\n            backgroundImage: `url(${propertyUri})`,\r\n            backgroundPosition: \"center\",\r\n            backgroundSize: \"cover\",\r\n            backgroundRepeat: \"no-repeat\",\r\n          }}\r\n        />\r\n        <VStack\r\n          style={{\r\n            flex: 1,\r\n            paddingHorizontal: vw(20),\r\n            paddingTop: vh(20),\r\n          }}\r\n        >\r\n          <HStack\r\n            style={{ justifyContent: \"space-between\", alignItems: \"center\" }}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontFamily: \"Poppins_medium\",\r\n                fontSize: vw(15),\r\n                color: \"rgba(48, 48, 48, 1)\",\r\n              }}\r\n            >\r\n              {name}\r\n            </Text>\r\n            <HStack alignContent={\"center\"}>\r\n              <PriceIcon width={vw(24)} height={vh(24)} />\r\n              <Text\r\n                style={{\r\n                  fontFamily: \"Poppins_medium\",\r\n                  fontSize: vw(15),\r\n                  color: \"rgba(48, 48, 48, 1)\",\r\n                  paddingTop: vh(2),\r\n                }}\r\n              >\r\n                {item.ev ? \"  \" + currency.format(item.ev.toString()) : \"  - \"}\r\n              </Text>\r\n            </HStack>\r\n          </HStack>\r\n          <HStack\r\n            justifyContent={\"space-between\"}\r\n            alignItems={\"center\"}\r\n            style={{ height: vh(20), padding: 0, margin: 0 }}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontFamily: \"Poppins_medium\",\r\n                fontSize: vw(12),\r\n                color: \"rgba(102, 102, 102, 1)\",\r\n              }}\r\n            >\r\n              {item.propertyaddress}\r\n            </Text>\r\n            <HStack\r\n              height={vh(20)}\r\n              flex={1}\r\n              justifyContent={\"flex-end\"}\r\n              alignItems={\"center\"}\r\n            >\r\n              <CalendarWhiteIcon\r\n                fill='rgba(102, 102, 102, 1)'\r\n                width={vw(18)}\r\n                height={vh(18)}\r\n              />\r\n              <Text\r\n                style={{\r\n                  fontFamily: \"Poppins_medium\",\r\n                  fontSize: vw(12),\r\n                  color: \"rgba(102, 102, 102, 1)\",\r\n                }}\r\n              >\r\n                {item.yearbuilt}\r\n              </Text>\r\n            </HStack>\r\n          </HStack>\r\n\r\n          <HStack\r\n            style={{\r\n              justifyContent: \"space-between\",\r\n              borderTopWidth: vh(2),\r\n              borderTopColor: \"rgba(0, 0, 0, 0.15)\",\r\n              borderBottomWidth: vh(2),\r\n              borderBottomColor: \"rgba(0, 0, 0, 0.15)\",\r\n              alignItems: \"center\",\r\n              height: vh(39),\r\n              marginTop: vh(20),\r\n            }}\r\n          >\r\n            {/*Sqft*/}\r\n            <HStack style={{ marginRight: vw(14), alignItems: \"center\" }}>\r\n              <SqftIcon width={vw(24)} height={vh(24)} />\r\n              <Text\r\n                style={{\r\n                  color: \"#919191\",\r\n                  fontFamily: \"Poppins_medium\",\r\n                  fontSize: vw(13),\r\n                  marginTop: vh(1),\r\n                }}\r\n              >\r\n                {sqft}\r\n              </Text>\r\n            </HStack>\r\n            {/*Acre*/}\r\n            <HStack style={{ marginHorizontal: vw(14), alignItems: \"center\" }}>\r\n              <AcreIcon width={vw(24)} height={vh(24)} />\r\n              <Text\r\n                style={{\r\n                  color: \"#919191\",\r\n                  fontFamily: \"Poppins_medium\",\r\n                  fontSize: vw(13),\r\n                  marginTop: vh(1),\r\n                }}\r\n              >\r\n                {acre}\r\n              </Text>\r\n            </HStack>\r\n            {/*Bed*/}\r\n            <HStack style={{ marginHorizontal: vw(14), alignItems: \"center\" }}>\r\n              <BedIcon width={vw(24)} height={vh(24)} />\r\n              <Text\r\n                style={{\r\n                  color: \"#919191\",\r\n                  fontFamily: \"Poppins_medium\",\r\n                  fontSize: vw(13),\r\n                  marginTop: vh(1),\r\n                }}\r\n              >\r\n                {item.bed}\r\n              </Text>\r\n            </HStack>\r\n            {/*Bath*/}\r\n            <HStack style={{ marginHorizontal: vw(7), alignItems: \"center\" }}>\r\n              <BathIcon width={vw(24)} height={vh(24)} />\r\n              <Text\r\n                style={{\r\n                  color: \"#919191\",\r\n                  fontFamily: \"Poppins_medium\",\r\n                  fontSize: vw(13),\r\n                  marginTop: vh(1),\r\n                }}\r\n              >\r\n                {item.bath}\r\n              </Text>\r\n            </HStack>\r\n          </HStack>\r\n\r\n          {/* Status and #id */}\r\n          <HStack\r\n            style={{\r\n              marginTop: vh(18),\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontSize: vw(13),\r\n                fontFamily: \"Poppins_medium\",\r\n                color: \"rgba(125, 43, 233, 1)\",\r\n              }}\r\n            >\r\n              {item.status && item.status.name}\r\n            </Text>\r\n            <Text\r\n              style={{\r\n                fontSize: vw(13),\r\n                fontFamily: \"Poppins_medium\",\r\n                color: \"rgba(125, 43, 233, 1)\",\r\n              }}\r\n            >\r\n              {\"#\" + item.tid}\r\n            </Text>\r\n          </HStack>\r\n          {/* User Block */}\r\n          <HStack\r\n            style={{\r\n              marginTop: vh(6),\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <HStack alignItems={\"center\"}>\r\n              <Center\r\n                rounded={\"full\"}\r\n                style={{\r\n                  backgroundColor: \"white\",\r\n                  paddingVertical: vw(2),\r\n                }}\r\n              >\r\n                <Avatar\r\n                  source={{\r\n                    uri: userUri,\r\n                  }}\r\n                  style={{\r\n                    width: vw(24),\r\n                    height: vh(24),\r\n                  }}\r\n                >\r\n                  {nameFb}\r\n                </Avatar>\r\n              </Center>\r\n              <Text\r\n                style={{\r\n                  paddingTop: vh(2),\r\n                  lineHeight: vh(24),\r\n                  fontSize: vw(13),\r\n                  color: \"rgba(104, 104, 104, 1)\",\r\n                  fontFamily: \"Poppins_medium\",\r\n                  marginLeft: vw(10),\r\n                }}\r\n              >\r\n                {fullname}\r\n              </Text>\r\n            </HStack>\r\n            <HStack style={{ marginTop: vh(5) }} alignItems={\"center\"}>\r\n              <TimeIcon width={vw(24)} height={vh(24)} />\r\n              <Text\r\n                style={{\r\n                  fontSize: vw(13),\r\n                  color: \"rgba(104, 104, 104, 1)\",\r\n                  fontFamily: \"Poppins_medium\",\r\n                  lineHeight: vh(24),\r\n                }}\r\n              >\r\n                {moment(item.created).format(\"MM/DD/YYYY - hh:mm A\")}\r\n              </Text>\r\n            </HStack>\r\n          </HStack>\r\n        </VStack>\r\n      </HStack>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default HorizontalItem;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  HStack,\r\n  VStack,\r\n  Text,\r\n  Center,\r\n  Box,\r\n  Avatar,\r\n  Link,\r\n  Button,\r\n} from \"native-base\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { CDN } from \"../../../constants/Config\";\r\nimport { vw, vh } from \"../../../util\";\r\nimport CalendarWhiteIcon from \"../../../components/svg/CalendarWhiteIcon\";\r\nimport SqftIcon from \"../../../components/svg/SqftIcon\";\r\nimport AcreIcon from \"../../../components/svg/AcreIcon\";\r\nimport BedIcon from \"../../../components/svg/BedIcon\";\r\nimport BathIcon from \"../../../components/svg/BathIcon\";\r\nimport TimeIcon from \"../../../components/svg/TimeIcon\";\r\nimport moment from \"moment-timezone\";\r\nimport MarketIcon from \"../../../components/svg/MarketIcon\";\r\nimport NavCampaignIcon from \"../../../components/svg/NavCampaignIcon\";\r\nimport NavListIcon from \"../../../components/svg/NavListIcon\";\r\nimport ReportIssueIcon from \"../../../components/svg/ReportIssueIcon\";\r\nimport PriceIcon from \"../../../components/svg/PriceIcon\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport * as propertiesActions from \"../../../store/actions/properties\";\r\n\r\nconst VerticalItem = ({ item, activeList, _showAlert }) => {\r\n  const dispatch = useDispatch();\r\n  const [isAttaching, setIsAttaching] = useState(false);\r\n  const listCampaign = activeList && activeList.listcampaign;\r\n  var currency = new Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\",\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 0,\r\n  });\r\n  //default pic\r\n  let pic = \"1\";\r\n  if (item && item.pic) {\r\n    pic = item.pic;\r\n  }\r\n  const createdUser = item.createdUser && item.createdUser;\r\n  // user name\r\n  const fullname =\r\n    createdUser && createdUser.firstname + \" \" + createdUser.lastname;\r\n  //avatar fall back\r\n  const nameSplit = fullname.split(\" \");\r\n  const fn = nameSplit[0][0];\r\n  const ln = nameSplit[1] ? nameSplit[1][0] : \"-\";\r\n  const nameFb = fn + ln;\r\n  // avatar image source uri\r\n  const ui =\r\n    createdUser && createdUser.pic && createdUser.pic.id\r\n      ? createdUser.pic.id\r\n      : \"0\";\r\n  const userUri = `${CDN}/users/${createdUser._id}/${ui}`;\r\n  //property image uri\r\n  const propertyUri = `${CDN}/properties/${item._id ? item._id : \"-\"}/${pic}`;\r\n\r\n  let sqft = \"-\";\r\n  let acre = \"-\";\r\n  if (item.sqft) {\r\n    sqft = item.sqft !== null ? item.sqft.toString() : \"-\";\r\n  }\r\n\r\n  if (item.acre) {\r\n    acre = item.acre !== null ? item.acre.toString() : \"-\";\r\n  }\r\n  //property owner name\r\n  const name = item.name && item.name !== \"\" ? item.name.trim() : \"-\";\r\n\r\n  // console.log(\"activeList\", activeList);\r\n\r\n  const attachCampaign = async (data) => {\r\n    try {\r\n      setIsAttaching(true);\r\n      const action = propertiesActions.updateOutreachCampaignSettings({\r\n        _id: item._id,\r\n        campaign: listCampaign,\r\n      });\r\n      await dispatch(action);\r\n      setIsAttaching(false);\r\n      _showAlert(\r\n        \"success\",\r\n        \"List Campaign \" + listCampaign.name + \" attached successfully.\"\r\n      );\r\n    } catch (err) {\r\n      _showAlert(\"error\", err.message);\r\n      setIsAttaching(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Link\r\n      style={{\r\n        width: vw(343), //vw((window.screen.width - cols * 40) / cols), // vw(320), //  vw((window.screen.width - cols * 40) / cols),\r\n        height: vh(300),\r\n        marginHorizontal: vw(20),\r\n        marginVertical: vh(20),\r\n        // flex: 1,\r\n      }}\r\n      href={`/properties/${item._id}`}\r\n    >\r\n      <VStack\r\n        style={{\r\n          flex: 1,\r\n          width: vw(343), //  vw((window.screen.width - cols * 40) / cols),\r\n          height: vh(300),\r\n          borderRadius: vw(10),\r\n          backgroundColor: \"white\",\r\n          shadowColor: \"#000\",\r\n          shadowOffset: {\r\n            width: 0,\r\n            height: vh(3),\r\n          },\r\n          shadowOpacity: 0.15,\r\n          shadowRadius: vh(10),\r\n          elevation: vh(5),\r\n        }}\r\n      >\r\n        <Box\r\n          resizeMode='cover'\r\n          style={{\r\n            height: vh(150),\r\n            borderTopStartRadius: vw(10),\r\n            borderTopEndRadius: vw(10),\r\n            overflow: \"hidden\",\r\n            backgroundImage: `url(${propertyUri})`,\r\n            backgroundPosition: \"center\",\r\n            backgroundSize: \"cover\",\r\n            backgroundRepeat: \"no-repeat\",\r\n          }}\r\n        >\r\n          {item.applyto &&\r\n            item.applyto === \"selected\" &&\r\n            listCampaign &&\r\n            listCampaign._id !== item.campaign._id && (\r\n              <Button\r\n                isLoading={isAttaching}\r\n                rounded={\"full\"}\r\n                shadow={5}\r\n                onPress={async (e) => {\r\n                  e.preventDefault();\r\n                  await attachCampaign();\r\n                }}\r\n                size={\"xs\"}\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  left: 10,\r\n                  backgroundColor: Colors.primary,\r\n                  alignItems: \"center\",\r\n                  height: 34,\r\n                  // borderRadius: 5,\r\n                }}\r\n                _text={{\r\n                  fontFamily: \"Poppins\",\r\n                  fontSize: 10,\r\n                  color: \"white\",\r\n                  lineHeight: 14,\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                {`Click to attach\\n`}\r\n                <Text\r\n                  style={{\r\n                    fontFamily: \"Poppins\",\r\n                    fontSize: 10,\r\n                    color: \"white\",\r\n                    lineHeight: 14,\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  {listCampaign && listCampaign.name}\r\n                </Text>\r\n              </Button>\r\n            )}\r\n          <HStack\r\n            style={{\r\n              borderRadius: 10,\r\n              position: \"absolute\",\r\n              right: 10,\r\n              top: 10,\r\n              backgroundColor: \"rgba(0,0,0, 0.30)\",\r\n            }}\r\n            alignContent={\"center\"}\r\n          >\r\n            <PriceIcon fill='white' width={vw(24)} height={vh(24)} />\r\n            <Text\r\n              style={{\r\n                fontFamily: \"Poppins_medium\",\r\n                fontSize: vw(15),\r\n                color: \"white\",\r\n                paddingTop: vh(2),\r\n              }}\r\n            >\r\n              {item.ev ? \"  \" + currency.format(item.ev.toString()) : \"  - \"}\r\n            </Text>\r\n          </HStack>\r\n          <VStack style={{ marginTop: vh(91), marginHorizontal: vw(10) }}>\r\n            <Text\r\n              style={{\r\n                marginBottom: vh(6),\r\n                fontFamily: \"Poppins_medium\",\r\n                fontSize: vw(15),\r\n                color: \"white\",\r\n              }}\r\n            >\r\n              {name}\r\n            </Text>\r\n            <HStack justifyContent={\"space-between\"}>\r\n              <Text\r\n                style={{\r\n                  fontFamily: \"Poppins_medium\",\r\n                  fontSize: vw(10),\r\n                  color: \"white\",\r\n                  marginTop: vh(1),\r\n                }}\r\n              >\r\n                {item.propertyaddress}\r\n              </Text>\r\n              <HStack flex={1} justifyContent={\"flex-end\"}>\r\n                <Center marginTop={vh(-2)}>\r\n                  <CalendarWhiteIcon width={vw(18)} height={vh(18)} />\r\n                </Center>\r\n                <Text\r\n                  style={{\r\n                    fontFamily: \"Poppins_medium\",\r\n                    fontSize: vw(10),\r\n                    color: \"white\",\r\n                  }}\r\n                >\r\n                  {item.yearbuilt}\r\n                </Text>\r\n              </HStack>\r\n            </HStack>\r\n          </VStack>\r\n          {item.mid && (\r\n            <Center style={{ position: \"absolute\", right: 5, top: 5 }}>\r\n              <MarketIcon fill={\"#7d2be9\"} />\r\n            </Center>\r\n          )}\r\n        </Box>\r\n\r\n        <HStack\r\n          style={{\r\n            marginHorizontal: vw(14),\r\n            marginTop: vh(20),\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-around\",\r\n          }}\r\n        >\r\n          {/*Sqft*/}\r\n          <HStack style={{ alignItems: \"center\" }}>\r\n            <SqftIcon width={vw(24)} height={vh(24)} />\r\n            <Text\r\n              style={{\r\n                color: \"#919191\",\r\n                fontFamily: \"Poppins_medium\",\r\n                fontSize: vw(13),\r\n                lineHeight: vh(24),\r\n                marginTop: vh(1),\r\n              }}\r\n            >\r\n              {sqft}\r\n            </Text>\r\n          </HStack>\r\n          {/*Acre*/}\r\n          <HStack style={{ marginHorizontal: vw(14), alignItems: \"center\" }}>\r\n            <AcreIcon width={vw(24)} height={vh(24)} />\r\n            <Text\r\n              style={{\r\n                color: \"#919191\",\r\n                fontFamily: \"Poppins_medium\",\r\n                fontSize: vw(13),\r\n                lineHeight: vh(24),\r\n                marginTop: vh(1),\r\n              }}\r\n            >\r\n              {acre === \"-\" ? acre : parseFloat(acre).toFixed(4)}\r\n            </Text>\r\n          </HStack>\r\n          {/*Bed*/}\r\n          <HStack\r\n            style={{\r\n              marginLeft: vw(14),\r\n              marginRight: vw(7),\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <BedIcon width={vw(24)} height={vh(24)} />\r\n            <Text\r\n              style={{\r\n                color: \"#919191\",\r\n                fontFamily: \"Poppins_medium\",\r\n                fontSize: vw(13),\r\n                lineHeight: vh(24),\r\n                marginTop: vh(1),\r\n              }}\r\n            >\r\n              {item.bed}\r\n            </Text>\r\n          </HStack>\r\n          {/*Bath*/}\r\n          <HStack style={{ marginHorizontal: vw(7), alignItems: \"center\" }}>\r\n            <BathIcon width={vw(24)} height={vh(24)} />\r\n            <Text\r\n              style={{\r\n                color: \"#919191\",\r\n                fontFamily: \"Poppins_medium\",\r\n                fontSize: vw(13),\r\n                lineHeight: vh(24),\r\n                marginTop: vh(1),\r\n              }}\r\n            >\r\n              {item.bath}\r\n            </Text>\r\n          </HStack>\r\n        </HStack>\r\n\r\n        {/* Status and #id */}\r\n        <HStack\r\n          style={{\r\n            marginTop: vh(5),\r\n            marginHorizontal: vw(20),\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Text\r\n            style={{\r\n              fontSize: vw(15),\r\n              fontFamily: \"Poppins_medium\",\r\n              color: \"rgba(125, 43, 233, 1)\",\r\n            }}\r\n          >\r\n            {item.status && item.status.name}\r\n          </Text>\r\n          <Text\r\n            style={{\r\n              fontSize: vw(15),\r\n              fontFamily: \"Poppins_medium\",\r\n              color: \"rgba(125, 43, 233, 1)\",\r\n            }}\r\n          >\r\n            {\"#\" + item.tid}\r\n          </Text>\r\n        </HStack>\r\n        <HStack\r\n          style={{\r\n            marginTop: vh(10),\r\n            marginHorizontal: vw(20),\r\n            justifyContent: \"space-between\",\r\n          }}\r\n        >\r\n          <Text\r\n            style={{\r\n              fontSize: vw(12),\r\n              fontFamily: \"Poppins_medium\",\r\n              color: \"rgba(145, 145, 145, 1)\",\r\n            }}\r\n          >\r\n            {item.campaign && Object.keys(item.campaign).length > 0 ? (\r\n              <HStack space={1}>\r\n                <NavCampaignIcon width={16} height={16} />{\" \"}\r\n                {item.campaign && item.campaign.name}\r\n              </HStack>\r\n            ) : (\r\n              <HStack>\r\n                <ReportIssueIcon width={16} height={16} /> No Campaign attached\r\n              </HStack>\r\n            )}\r\n          </Text>\r\n          <Text\r\n            style={{\r\n              fontSize: vw(12),\r\n              fontFamily: \"Poppins_medium\",\r\n              color: \"rgba(145, 145, 145, 1)\",\r\n            }}\r\n          >\r\n            <HStack space={1}>\r\n              <NavListIcon width={16} height={16} />{\" \"}\r\n              {!item.listname ? \"All\" : item.listname}\r\n            </HStack>\r\n          </Text>\r\n        </HStack>\r\n\r\n        {/* User Block */}\r\n        <HStack\r\n          style={{\r\n            marginHorizontal: vw(20),\r\n            justifyContent: \"space-between\",\r\n            marginTop: vh(5),\r\n          }}\r\n        >\r\n          <HStack>\r\n            <Center\r\n              rounded={\"full\"}\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                paddingVertical: vw(2),\r\n\r\n                marginRight: vw(10),\r\n              }}\r\n            >\r\n              <Avatar\r\n                source={{\r\n                  uri: userUri,\r\n                }}\r\n                style={{\r\n                  width: vw(24),\r\n                  height: vh(24),\r\n                }}\r\n              >\r\n                {nameFb}\r\n              </Avatar>\r\n            </Center>\r\n            {/* <Text\r\n              style={{\r\n                paddingTop: vh(2),\r\n                lineHeight: vh(fullname.length > 10 ? 12 : 24),\r\n                fontSize: vw(13),\r\n                color: \"rgba(104, 104, 104, 1)\",\r\n                fontFamily: \"Poppins_medium\",\r\n                width: vw(100),\r\n                wordWrap: \"break-word\",\r\n              }}\r\n            >\r\n              {fullname}\r\n            </Text> */}\r\n          </HStack>\r\n          <HStack style={{ alignItems: \"center\" }}>\r\n            <TimeIcon />\r\n            <Text\r\n              style={{\r\n                // paddingTop: vh(2),\r\n                lineHeight: vh(24),\r\n                fontSize: vw(13),\r\n                color: \"rgba(104, 104, 104, 1)\",\r\n                fontFamily: \"Poppins_medium\",\r\n              }}\r\n            >\r\n              {moment(item.created).format(\"MM/DD/YYYY - hh:mm A a\")}\r\n            </Text>\r\n          </HStack>\r\n        </HStack>\r\n      </VStack>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default VerticalItem;\r\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  Center,\r\n  Spinner,\r\n  Pressable,\r\n  FlatList,\r\n  View,\r\n  Checkbox,\r\n  Input,\r\n} from \"native-base\";\r\n\r\nimport * as events from \"../../../store/events\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport { API_URL } from \"../../../constants/Config\";\r\nimport ShadowPagination from \"../../../components/ShadowPagination\";\r\nimport { vh, vw } from \"../../../util\";\r\nimport SearchIcon from \"../../../components/svg/SearchIcon\";\r\nimport CloseIcon from \"../../../components/svg/CloseIcon\";\r\n\r\nconst getUser = () => {\r\n  if (localStorage.getItem(\"@shadowuser\") !== null) {\r\n    const user = JSON.parse(localStorage.getItem(\"@shadowuser\"));\r\n    return user;\r\n  }\r\n};\r\n\r\nconst AddContacts = ({ list, lists, _showAlert, dispatch }) => {\r\n  const sRef = useRef();\r\n  const cRef = useRef();\r\n  const [page, setPage] = useState(1);\r\n  const [total, setTotal] = useState(0);\r\n  const [limit, setLimit] = useState(50);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [reload, setReload] = useState(false);\r\n  const [pIsSav] = useState({});\r\n  const [search, setSearch] = useState(\"\");\r\n  const [properties, setProperties] = useState([]);\r\n\r\n  const _getData = useCallback(async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const filter = {\r\n        // fromdate: moment(fromDate).format(\"YYYY-MM-DD\"),\r\n        // todata: moment(toDate).format(\"YYYY-MM-DD\"),\r\n        inList: list,\r\n        ninList: lists,\r\n      };\r\n\r\n      const { token } = getUser();\r\n\r\n      const response = await fetch(`${API_URL}/properties/get`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n        body: JSON.stringify({\r\n          skip: page === 1 ? 0 : (page - 1) * parseInt(limit),\r\n          limit: parseInt(limit),\r\n          search,\r\n          filter,\r\n          fields: {\r\n            _id: 1,\r\n            name: 1,\r\n            owneraddress: 1,\r\n            tid: 1,\r\n            \"createdUser._id\": 1,\r\n            \"createdUser.firstname\": 1,\r\n            \"createdUser.lastname\": 1,\r\n            propertyaddress: 1,\r\n            notes: 1,\r\n            created: 1,\r\n            lists: 1,\r\n          },\r\n          sort: { tid: -1 },\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errData = await response.json();\r\n        console.log(errData);\r\n        let message = \"Something went wrong!\";\r\n        if (errData.error) {\r\n          message = errData.error;\r\n        } else {\r\n          throw new Error(message);\r\n        }\r\n      } else {\r\n        const resData = await response.json();\r\n        console.log(\"List Add Contacts\", resData);\r\n        if (resData.data && resData.data.length > 0) {\r\n          setTotal(resData.count);\r\n          setProperties([...resData.data]);\r\n        }\r\n      }\r\n\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n      setIsLoading(false);\r\n      _showAlert(\"error\", err.message);\r\n    }\r\n  }, [limit, page, search, _showAlert, list, lists]);\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    if (!unmounted) {\r\n      _getData();\r\n    }\r\n    return () => {\r\n      unmounted = false;\r\n    };\r\n  }, [page, search, _getData]);\r\n\r\n  const NoItemsFound = () => {\r\n    return (\r\n      <Center style={{ minHeight: vh(300) }}>\r\n        <Text>No Contacts found!</Text>\r\n      </Center>\r\n    );\r\n  };\r\n\r\n  const RenderItem = ({ item, list }) => {\r\n    const listRef = useRef(item.lists && item.lists.length > 0);\r\n    const [inList, setInList] = useState(item.lists && item.lists.length > 0);\r\n    const createdUser = item.createdUser;\r\n    const saveProperty = async (p, del = false) => {\r\n      try {\r\n        if (p._id) {\r\n          if (!del) {\r\n            const data = {\r\n              property: p._id,\r\n              list,\r\n              data: {\r\n                _id: p._id,\r\n                created: p.created,\r\n                createdUser: {\r\n                  _id: p.createdUser._id,\r\n                  firstname: p.createdUser.firstname,\r\n                  lastname: p.createdUser.lastname,\r\n                },\r\n                name: p.name,\r\n                notes: p.notes,\r\n                propertyaddress: p.propertyaddress,\r\n                tid: p.tid,\r\n              },\r\n            };\r\n            dispatch({ type: events.ADD_LIST_PROPERTY_SAGA, data });\r\n            listRef.current = true;\r\n            setInList(true);\r\n          } else {\r\n            const data = {\r\n              property: p._id,\r\n              list,\r\n            };\r\n            dispatch({\r\n              type: events.REMOVE_LIST_PROPERTY_SAGA,\r\n              data,\r\n            });\r\n            listRef.current = false;\r\n            setInList(false);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.log(\"Created Error\", err);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Pressable\r\n        style={{\r\n          borderBottomColor: \"rgba(0,0,0, 0.15)\",\r\n          borderBottomWidth: 1,\r\n          paddingVertical: 5,\r\n        }}\r\n        onPress={() => {\r\n          saveProperty(item, inList);\r\n        }}\r\n      >\r\n        <Box\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-around\",\r\n            borderRadius: 5,\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              justifyContent: \"center\",\r\n              width: \"15%\",\r\n            }}\r\n          >\r\n            {pIsSav[item._id] ? (\r\n              <Spinner size={\"small\"} color={Colors.primary} />\r\n            ) : (\r\n              <Center>\r\n                <Checkbox\r\n                  size={\"sm\"}\r\n                  accessibilityLabel='Select contact'\r\n                  isChecked={inList}\r\n                  colorScheme='purple'\r\n                />\r\n              </Center>\r\n            )}\r\n          </View>\r\n          <View style={{ width: \"85%\" }}>\r\n            <Text\r\n              style={{\r\n                fontSize: 14,\r\n                color: Colors.primary,\r\n                fontFamily: \"Poppins\",\r\n              }}\r\n            >\r\n              {item.name + \" (#\" + item.tid + \")\"}\r\n            </Text>\r\n            <Text\r\n              style={{\r\n                color: \"#414141\",\r\n                fontSize: 12,\r\n                fontFamily: \"Poppins\",\r\n              }}\r\n            >\r\n              {item.owneraddress}\r\n            </Text>\r\n            <Text\r\n              style={{\r\n                color: \"#414141\",\r\n                fontSize: 10,\r\n                fontFamily: \"Poppins\",\r\n              }}\r\n            >\r\n              {\"Added By \" + createdUser.firstname + \" \" + createdUser.lastname}\r\n            </Text>\r\n          </View>\r\n        </Box>\r\n      </Pressable>\r\n    );\r\n  };\r\n\r\n  const _onSubmitEditing = (e) => {\r\n    if (e.nativeEvent.text === \"\") {\r\n      return;\r\n    }\r\n    // setIsLoading(true);\r\n    setProperties([]);\r\n    setPage(1);\r\n    setSearch(e.nativeEvent.text);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      flex={1}\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        paddingBottom: vh(10),\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      {total > 0 && (\r\n        <Center style={{ marginVertical: vh(20), width: \"100%\" }}>\r\n          <Input\r\n            w={\"full\"}\r\n            ref={sRef}\r\n            autoComplete='Off'\r\n            rounded={\"full\"}\r\n            variant='outline'\r\n            size={\"xs\"}\r\n            placeholder='Search by #id/name/address'\r\n            onSubmitEditing={_onSubmitEditing}\r\n            onChangeText={(v) => {\r\n              cRef.current.style.visibility = v !== \"\" ? \"visible\" : \"hidden\";\r\n              if (v === \"\") {\r\n                setSearch(\"\");\r\n                setPage(1);\r\n                setProperties([]);\r\n                sRef.current.value = \"\";\r\n              }\r\n            }}\r\n            style={{\r\n              height: vh(36),\r\n              fontSize: vw(13),\r\n              fontFamily: \"Poppins\",\r\n              flex: 1,\r\n            }}\r\n            leftElement={\r\n              <Center style={{ marginLeft: vw(10) }}>\r\n                <SearchIcon width={18} height={18} fill={Colors.primary} />\r\n              </Center>\r\n            }\r\n            rightElement={\r\n              <Pressable\r\n                ref={cRef}\r\n                onPress={() => {\r\n                  if (search !== \"\") {\r\n                    setSearch(\"\");\r\n                    setPage(1);\r\n                    setProperties([]);\r\n                  }\r\n                  sRef.current.value = \"\";\r\n                  cRef.current.style.visibility = \"hidden\";\r\n                }}\r\n                style={{\r\n                  marginRight: vw(10),\r\n                  visibility: \"hidden\",\r\n                }}\r\n              >\r\n                <CloseIcon />\r\n              </Pressable>\r\n            }\r\n          />\r\n        </Center>\r\n      )}\r\n      {isLoading ? (\r\n        <Center style={{ minHeight: vh(396) }}>\r\n          <Spinner size='small' color={Colors.primary} />\r\n        </Center>\r\n      ) : (\r\n        <FlatList\r\n          contentContainerStyle={{\r\n            backgroundColor: \"white\",\r\n            width: \"100%\",\r\n            minHeight: vh(500),\r\n            // marginHorizontal: vh(10),\r\n            marginBottom: vh(60),\r\n            marginTop: vh(10),\r\n          }}\r\n          ListEmptyComponent={<NoItemsFound />}\r\n          style={{ marginTop: 0 }}\r\n          data={properties}\r\n          keyExtractor={(item) => item._id}\r\n          renderItem={({ item }) => (\r\n            <RenderItem\r\n              item={item}\r\n              list={list}\r\n              lists={lists}\r\n              setReload={setReload}\r\n              reload={reload}\r\n              setIsSaving={setIsSaving}\r\n              isSaving={isSaving}\r\n              setProperties={setProperties}\r\n            />\r\n          )}\r\n          initialNumToRender={50}\r\n          maxToRenderPerBatch={50}\r\n        />\r\n      )}\r\n      {total > 0 && (\r\n        <ShadowPagination\r\n          limit={limit}\r\n          setLimit={setLimit}\r\n          total={total}\r\n          page={page}\r\n          setPage={setPage}\r\n          setIsLoading={setIsLoading}\r\n          style={{\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            marginHorizontal: 0,\r\n            width: \"100%\",\r\n            zoom: \"70%\",\r\n          }}\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(AddContacts, (p, n) => {\r\n  // console.log(p.pipeline, \"prev\", n.pipeline, \"new\");\r\n  return true;\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { HStack, Pressable, VStack, Text, Checkbox } from \"native-base\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport ShadowButton from \"../../../components/ShadowButton\";\r\nimport ShadowModal from \"../../../components/ShadowModal\";\r\nimport ShadowInput from \"../../../components/ShadowInput\";\r\nimport * as listActions from \"../../../store/actions/lists\";\r\nimport * as campaignActions from \"../../../store/actions/campaigns\";\r\nimport { vh } from \"../../../util\";\r\nimport ShadowSelect from \"../../../components/ShadowSelect\";\r\nimport Colors from \"../../../constants/Colors\";\r\n\r\nconst AddList = ({ setShowModal, showModal, _showAlert, edit }) => {\r\n  const dispatch = useDispatch();\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [refresh, setRefresh] = useState(false);\r\n  const { activeList: list } = useSelector((state) => state.lists);\r\n  const { userCampaigns: campaigns } = useSelector((state) => state.campaigns);\r\n  const listname = list && list.name;\r\n\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n    setValue,\r\n    getValues,\r\n  } = useForm({\r\n    mode: \"all\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        await dispatch(campaignActions.fetchCampaigns(1, 1000));\r\n      } catch (err) {\r\n        _showAlert(\"error\", err.message);\r\n      }\r\n    })();\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    reset();\r\n    if (edit) {\r\n      setValue(\"_id\", list ? list._id : null);\r\n      setValue(\"name\", list ? list.name : \"\");\r\n      setValue(\"campaign\", list ? list.campaign : \"\");\r\n      setValue(\"applyto\", list ? list.applyto : \"all\");\r\n      setValue(\"exclude\", list ? list.exclude : false);\r\n    } else {\r\n      setValue(\"_id\", null);\r\n      setValue(\"name\", \"\");\r\n      setValue(\"campaign\", \"\");\r\n      setValue(\"applyto\", \"all\");\r\n      setValue(\"excclude\", false);\r\n    }\r\n  }, [listname]);\r\n\r\n  const onSubmit = async (data) => {\r\n    if (!data.name) {\r\n      _showAlert(\"error\", \"List name is required.\");\r\n      return;\r\n    }\r\n    if (data.campaign === \"\") {\r\n      delete data.campaign;\r\n    }\r\n    setIsSaving(true);\r\n    try {\r\n      if (edit) {\r\n        data._id = list._id;\r\n      }\r\n      const action = listActions.addList(data, null);\r\n      await dispatch(action);\r\n      reset();\r\n      setIsSaving(false);\r\n      setShowModal(false);\r\n      _showAlert(\"success\", \"List created successfully.\");\r\n    } catch (err) {\r\n      console.log(err.message);\r\n      _showAlert(\"error\", \"An error occured, cannot create list.\");\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  // console.log(\"Campaigns\", campaigns);\r\n\r\n  return (\r\n    <ShadowModal\r\n      size='lg'\r\n      height={vh(300)}\r\n      bodyHeight={vh(250)}\r\n      style={{\r\n        minHeight: vh(300),\r\n      }}\r\n      // width={vw(400)}\r\n      isOpen={showModal}\r\n      close={() => {\r\n        reset();\r\n        setShowModal(false);\r\n      }}\r\n      cancel={() => {\r\n        reset();\r\n        setShowModal(false);\r\n      }}\r\n      save={handleSubmit(onSubmit)}\r\n      header={edit ? \"Edit List - \" + listname : \"Add List\"}\r\n      buttons={\r\n        <HStack space={2}>\r\n          <ShadowButton\r\n            space={2}\r\n            onPress={() => {\r\n              reset();\r\n              setShowModal(false);\r\n            }}\r\n            color='rgba(0,0,0, 0.5)'\r\n            variant='outline'\r\n            label='Cancel'\r\n            style={{ height: vh(36) }}\r\n          />\r\n          <ShadowButton\r\n            space={3}\r\n            isLoading={isSaving}\r\n            onPress={handleSubmit(onSubmit)}\r\n            color='white'\r\n            label='Save'\r\n            style={{ height: vh(36) }}\r\n          />\r\n        </HStack>\r\n      }\r\n    >\r\n      <VStack space={5} marginTop={vh(-20)}>\r\n        <ShadowInput\r\n          autoFocus={true}\r\n          style={{ width: \"100%\" }}\r\n          // onKeyPress={(e) => {\r\n          //   if (e.key === \"Tab\" || e.key === \"Enter\") {\r\n          //     e.preventDefault();\r\n          //     setIsSaving(true);\r\n          //     handleSubmit(onSubmit, () => {\r\n          //       setIsSaving(false);\r\n          //     })();\r\n          //   }\r\n          // }}\r\n          name='name'\r\n          label={\"List Name\"}\r\n          placeholder='List Name'\r\n          control={control}\r\n          rules={{\r\n            required: {\r\n              value: true,\r\n              message: \"Please enter list name\",\r\n            },\r\n          }}\r\n          invalid={errors.name ? true : false}\r\n          error={errors.name ? errors.name.message : \"\"}\r\n          inputStyle={{}}\r\n        />\r\n        <ShadowSelect\r\n          control={control}\r\n          items={[\r\n            { label: \"Attach Later\", value: \"\" },\r\n            ...campaigns.map((c) => ({ label: c.name, value: c._id })),\r\n          ]}\r\n          name='campaign'\r\n          label='Attach Campaign'\r\n          placeholder='Select Campaign'\r\n          invalid={errors.campaign ? true : false}\r\n          error={errors.campaign ? errors.campaign.message : \"\"}\r\n          rules={{\r\n            required: {\r\n              value: false,\r\n              message: \"Select campaign\",\r\n            },\r\n          }}\r\n        />\r\n        <ShadowSelect\r\n          control={control}\r\n          items={[\r\n            { label: \"All\", value: \"all\" },\r\n            { label: \"New\", value: \"new\" },\r\n            { label: \"Selected\", value: \"selected\" },\r\n          ]}\r\n          name='applyto'\r\n          label='Apply To'\r\n          placeholder='Select'\r\n          invalid={errors.applyto ? true : false}\r\n          error={errors.applyto ? errors.applyto.message : \"\"}\r\n          rules={{\r\n            required: {\r\n              value: false,\r\n              message: \"Select applyto\",\r\n            },\r\n          }}\r\n          onChange={(v) => {\r\n            if (v !== \"all\") {\r\n              setValue(\"exclude\", false);\r\n            }\r\n            setRefresh((r) => !r);\r\n          }}\r\n        />\r\n        {getValues(\"applyto\") === \"all\" && (\r\n          <Checkbox\r\n            size={\"sm\"}\r\n            onChange={(v) => {\r\n              setValue(\"exclude\", v);\r\n            }}\r\n          >\r\n            <Text style={{ fontFamily: \"Poppins\", fontSize: 14 }}>\r\n              Exclude properties with campaign completed\r\n            </Text>\r\n          </Checkbox>\r\n        )}\r\n      </VStack>\r\n    </ShadowModal>\r\n  );\r\n};\r\n\r\nexport default AddList;\r\n","import React, {\r\n  useEffect,\r\n  useState,\r\n  useCallback,\r\n  useContext,\r\n  useRef,\r\n} from \"react\";\r\nimport {\r\n  VStack,\r\n  HStack,\r\n  Text,\r\n  Pressable,\r\n  FlatList,\r\n  Center,\r\n  useToast,\r\n  Spinner,\r\n  Actionsheet,\r\n  useDisclose,\r\n  Menu,\r\n  useBreakpointValue,\r\n  useMediaQuery,\r\n  Hidden,\r\n  Badge,\r\n  Button,\r\n  Radio,\r\n  Checkbox,\r\n  Switch,\r\n  Input,\r\n  Tooltip,\r\n} from \"native-base\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport _ from \"lodash\";\r\nimport moment from \"moment-timezone\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n// import socketContext from \"../../../context/index\";\r\nimport NavBar from \"../home/NavBar\";\r\nimport { vw, vh } from \"../../../util\";\r\nimport * as listsActions from \"../../../store/actions/lists\";\r\n\r\nimport ShadowPagination from \"../../../components/ShadowPagination\";\r\nimport HorizontalItem from \"./HorizontalItem\";\r\nimport VerticalItem from \"./VerticalItem\";\r\nimport ShadowModal from \"../../../components/ShadowModal\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport * as events from \"../../../store/events\";\r\nimport AcreIcon from \"../../../components/svg/AcreIcon\";\r\nimport FilterIcon from \"../../../components/svg/FilterIcon\";\r\nimport NavListIcon from \"../../../components/svg/NavListIcon\";\r\nimport AddIcon from \"../../../components/svg/AddIcon\";\r\n// import MoreIcon from \"../../../components/svg/MoreIcon\";\r\nimport SearchIcon from \"../../../components/svg/SearchIcon\";\r\nimport CloseIcon from \"../../../components/svg/CloseIcon\";\r\nimport NotesIcon from \"../../../components/svg/NotesIcon\";\r\nimport AddContacts from \"./AddContacts\";\r\nimport SocketContext from \"../../../context/index\";\r\nimport ShadowButton from \"../../../components/ShadowButton\";\r\nimport DropDownIcon from \"../../../components/svg/DropDownIcon\";\r\nimport AddList from \"./AddList\";\r\n// import FaqIcon from \"../../../components/svg/FaqIcon\";\r\nimport ReportIssueIcon from \"../../../components/svg/ReportIssueIcon\";\r\n\r\nconst setOrientation = (orientation) => {\r\n  const a = localStorage.getItem(\"@orientation\");\r\n  if (a) {\r\n    const x = JSON.parse(a);\r\n    localStorage.setItem(\r\n      \"@orientation\",\r\n      JSON.stringify({\r\n        ...x,\r\n        lists: orientation,\r\n      })\r\n    );\r\n  } else {\r\n    localStorage.setItem(\r\n      \"@orientation\",\r\n      JSON.stringify({\r\n        properties: orientation,\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nconst getOrientation = (page) => {\r\n  const a = localStorage.getItem(\"@orientation\");\r\n  if (a) {\r\n    const x = JSON.parse(a);\r\n    return x[page] ? x[page] : \"vertical\";\r\n  } else {\r\n    return \"vertical\";\r\n  }\r\n};\r\n\r\nconst setCurrentList = (list) => {\r\n  const a = localStorage.getItem(\"@currentList\");\r\n  localStorage.setItem(\"@currentList\", JSON.stringify(list));\r\n};\r\n\r\nconst getCurrentList = (list) => {\r\n  const a = localStorage.getItem(\"@currentList\");\r\n  return JSON.parse(a);\r\n};\r\n\r\nconst ShadowDropDown = ({\r\n  data,\r\n  label,\r\n  precomponent = null,\r\n  setFilters,\r\n  defaultFilter,\r\n  filters,\r\n  k,\r\n  radio,\r\n  setPage,\r\n  list,\r\n}) => {\r\n  const mRef = useRef();\r\n  const dispatch = useDispatch();\r\n  const [opened, setOpened] = useState(false);\r\n  let right = 0;\r\n  if (k === \"bed\") {\r\n    right = 4;\r\n  } else if (k === \"bath\") {\r\n    right = 14;\r\n  } else if (k === \"sqft\") {\r\n    right = 28;\r\n  } else if (k === \"acre\") {\r\n    right = 42;\r\n  } else if (k === \"year\") {\r\n    right = 63;\r\n  } else if (k === \"ev\") {\r\n    right = 82;\r\n  } else if (k === \"tags\") {\r\n    right = 108;\r\n  } else if (k === \"status\") {\r\n    right = 122;\r\n  } else if (k === \"sort\") {\r\n    right = 164;\r\n  }\r\n\r\n  return (\r\n    <Menu\r\n      ref={mRef}\r\n      onOpen={() => {\r\n        setOpened(true);\r\n      }}\r\n      onClose={() => {\r\n        setOpened(false);\r\n      }}\r\n      shouldOverlapWithTrigger={false}\r\n      trigger={(triggerProps) => {\r\n        return (\r\n          <VStack>\r\n            {filters &&\r\n              filters[list] &&\r\n              filters[list][k] &&\r\n              k !== \"sort\" &&\r\n              filters[list][k].length > 0 && (\r\n                <Badge\r\n                  bg={Colors.primary}\r\n                  rounded='full'\r\n                  // mb={-1}\r\n                  // mr={-4}\r\n                  zIndex={997}\r\n                  variant='solid'\r\n                  alignSelf='flex-end'\r\n                  _text={{\r\n                    fontSize: 10,\r\n                  }}\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: vh(-10),\r\n                    right: vw(-4),\r\n                    // marginTop: vh(-45),\r\n                  }}\r\n                >\r\n                  {filters[list][k] && filters[list][k].length}\r\n                </Badge>\r\n              )}\r\n            {filters[list] &&\r\n              filters[list][k] &&\r\n              k === \"sort\" &&\r\n              filters[list][k] !== \"\" && (\r\n                <Badge\r\n                  bg={Colors.primary}\r\n                  rounded='full'\r\n                  // mb={-1}\r\n                  // mr={-4}\r\n                  zIndex={997}\r\n                  variant='solid'\r\n                  alignSelf='flex-end'\r\n                  _text={{\r\n                    fontSize: 10,\r\n                  }}\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    top: vh(-10),\r\n                    right: vw(-4),\r\n                    // marginTop: vh(-45),\r\n                  }}\r\n                >\r\n                  {1}\r\n                </Badge>\r\n              )}\r\n            <Button\r\n              accessibilityLabel='More options menu'\r\n              {...triggerProps}\r\n              variant='unstyled'\r\n              _text={{\r\n                fontSize: vw(13),\r\n                fontFamily: \"Poppins_medium\",\r\n                color: opened ? Colors.primary : \"rgba(102, 102, 102, 1)\",\r\n              }}\r\n              style={{\r\n                height: vh(36),\r\n                // width: vh(100),\r\n                backgroundColor: \"white\",\r\n                alignItems: \"center\",\r\n                zIndex: 995,\r\n                borderRadius: 10,\r\n                boxShadow: \"0px 2px 8px rgba(0, 0, 0, 0.1)\",\r\n                marginHorizontal: vw(5),\r\n                marginVertical: vh(5),\r\n              }}\r\n              rightIcon={<DropDownIcon />}\r\n            >\r\n              {label}\r\n            </Button>\r\n          </VStack>\r\n        );\r\n      }}\r\n      style={{\r\n        // position:\"absolute\",\r\n        minWidth: vw(100),\r\n        maxWidth: vh(200),\r\n        // width: vw(300),\r\n        maxHeight: vh(400),\r\n        right: vw(right),\r\n        top: vh(-24),\r\n      }}\r\n    >\r\n      {precomponent && precomponent}\r\n      {radio ? (\r\n        <Radio.Group\r\n          name='sort'\r\n          value={filters[list] && filters[list][\"sort\"]}\r\n          defaultValue={filters[list] && filters[list][\"sort\"]}\r\n          onChange={(value) => {\r\n            setFilters((f) => {\r\n              let v = f[list];\r\n              if (!v) {\r\n                v = defaultFilter;\r\n              }\r\n              v[\"sort\"] = value;\r\n              v[\"ts\"] = moment().valueOf();\r\n              dispatch({\r\n                type: events.FILTER_LAST_UPDATED,\r\n                data: moment().valueOf(),\r\n              });\r\n              setPage((p) => {\r\n                p[list] = 1;\r\n                return p;\r\n              });\r\n              localStorage.setItem(\"@listFilter:\" + list, JSON.stringify(v));\r\n              f[list] = v;\r\n              return f;\r\n            });\r\n            //setRefresh((r) => !r);\r\n          }}\r\n        >\r\n          {data &&\r\n            data.map((b) => {\r\n              let v = \"\";\r\n              if (b === \"#ID\") {\r\n                v = \"_id\";\r\n              } else if (b === \"Owner Name\") {\r\n                v = \"name\";\r\n              } else if (b === \"User\") {\r\n                v = \"user\";\r\n              }\r\n              return (\r\n                <Radio key={\"r-\" + v} size='sm' mx={1} my={1} value={v}>\r\n                  <Text\r\n                    style={{\r\n                      fontSize: vw(13),\r\n                      fontFamily: \"Poppins_medium\",\r\n                      color: \"rgba(102, 102, 102, 1)\",\r\n                      marginTop: vh(2),\r\n                    }}\r\n                  >\r\n                    {b}\r\n                  </Text>\r\n                </Radio>\r\n              );\r\n            })}\r\n        </Radio.Group>\r\n      ) : (\r\n        data &&\r\n        data.map((b) => {\r\n          const key = k === \"status\" || k === \"tags\" ? b._id : \"p-\" + b;\r\n          const value = k === \"status\" || k === \"tags\" ? b._id : b;\r\n          const label = k === \"status\" || k === \"tags\" ? b.name : b;\r\n\r\n          return (\r\n            <Pressable\r\n              key={key}\r\n              style={{ marginHorizontal: vh(10), marginVertical: 5 }}\r\n            >\r\n              <HStack space={4}>\r\n                <Checkbox\r\n                  colorScheme={\"purple\"}\r\n                  isChecked={\r\n                    filters &&\r\n                    filters[list] &&\r\n                    filters[list][k] &&\r\n                    filters[list][k].includes(value)\r\n                  }\r\n                  onChange={(val) => {\r\n                    if (val) {\r\n                      setFilters((f) => {\r\n                        let v = f[list];\r\n                        if (!v) {\r\n                          v = defaultFilter;\r\n                        }\r\n                        v[k].push(value);\r\n                        v[\"ts\"] = moment().valueOf();\r\n                        setPage((p) => {\r\n                          p[list] = 1;\r\n                          return p;\r\n                        });\r\n                        dispatch({\r\n                          type: events.FILTER_LAST_UPDATED,\r\n                          data: moment().valueOf(),\r\n                        });\r\n                        localStorage.setItem(\r\n                          \"@listFilter:\" + list,\r\n                          JSON.stringify(v)\r\n                        );\r\n                        f[list] = v;\r\n                        return f;\r\n                      });\r\n                    } else {\r\n                      setFilters((f) => {\r\n                        let v = f[list];\r\n                        if (!v) {\r\n                          v = defaultFilter;\r\n                        }\r\n                        v[k] = v[k].filter((f) => f !== value);\r\n                        v[\"ts\"] = moment().valueOf();\r\n                        setPage((p) => {\r\n                          p[list] = 1;\r\n                          return p;\r\n                        });\r\n                        dispatch({\r\n                          type: events.FILTER_LAST_UPDATED,\r\n                          data: moment().valueOf(),\r\n                        });\r\n                        localStorage.setItem(\r\n                          \"@listFilter:\" + list,\r\n                          JSON.stringify(v)\r\n                        );\r\n                        f[list] = v;\r\n                        return f;\r\n                      });\r\n                    }\r\n                    // setRefresh((r) => !r);\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: vw(13),\r\n                      fontFamily: \"Poppins_medium\",\r\n                      color: \"rgba(102, 102, 102, 1)\",\r\n                      marginTop: vh(2),\r\n                    }}\r\n                  >\r\n                    {label}\r\n                  </Text>\r\n                </Checkbox>\r\n              </HStack>\r\n            </Pressable>\r\n          );\r\n        })\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst PageHeader = ({\r\n  activeList,\r\n  lists,\r\n  listStyle,\r\n  setListStyle,\r\n  _showAlert,\r\n  list,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  // const socket = useContext(socketContext);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isOpenMove, setIsOpenMove] = useState(false);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [isHover, setIsHover] = useState(null);\r\n\r\n  const deleteHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      setIsDeleting(true);\r\n      const _id = list;\r\n      const action = listsActions.deleteList(_id, null);\r\n      await dispatch(action);\r\n      setIsDeleting(false);\r\n      _showAlert(\"success\", \"List deleted successfully.\");\r\n      setIsOpen(false);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n      setIsDeleting(false);\r\n      _showAlert(\"error\", \"An error occured, cannot delete list.\");\r\n    }\r\n  };\r\n\r\n  const moveHandler = async (f, t) => {\r\n    try {\r\n      const action = listsActions.moveList(\r\n        {\r\n          from: f,\r\n          to: t,\r\n        },\r\n        null\r\n      );\r\n      await dispatch(action);\r\n      setIsOpenMove(false);\r\n    } catch (err) {\r\n      // setIsSaving(false);\r\n      console.log(\"move list error\", err);\r\n      _showAlert(\"error\", \"An error occured, cannot move list.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack\r\n      style={{\r\n        zIndex: 999,\r\n        marginTop: vh(-10),\r\n      }}\r\n    >\r\n      {/* For Big Screens */}\r\n      <Hidden only={[\"sm\", \"base\", \"md\"]}>\r\n        <HStack\r\n          style={{\r\n            height: vh(84),\r\n            marginHorizontal: vw(20),\r\n            borderBottomColor: \"rgba(0,0,0,0.15)\",\r\n            borderBottomWidth: 1,\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Text\r\n            style={{\r\n              fontSize: vw(24),\r\n              paddingTop: vh(10),\r\n              color: \"#303030\",\r\n              fontFamily: \"Poppins_medium\",\r\n            }}\r\n          >\r\n            Lists\r\n          </Text>\r\n          {/* <Hidden only={[\"base\", \"sm\", \"md\"]}> */}\r\n          <HStack\r\n            style={{\r\n              flexWrap: \"wrap\",\r\n              width: vw(window.screen.width - 400),\r\n              justifyContent: \"center\",\r\n              zoom: \"85%\",\r\n              marginTop: vh(20),\r\n              paddingHorizontal: vh(10),\r\n            }}\r\n          >\r\n            {lists.map((p) => (\r\n              <HStack\r\n                key={\"pl-\" + p._id}\r\n                style={{\r\n                  justifyContent: \"space-between\",\r\n                  height: vh(40),\r\n                }}\r\n              >\r\n                <Tooltip\r\n                  style={{\r\n                    marginLeft: -100,\r\n                    marginTop: -30,\r\n                    backgroundColor: Colors.primary,\r\n                  }}\r\n                  placement={\"bottom\"}\r\n                  isDisabled={p.name === \"All\" || p.campaign}\r\n                  label={\"Campaign not attached\"}\r\n                  openDelay={100}\r\n                >\r\n                  <Pressable\r\n                    key={\"h-\" + p._id}\r\n                    onPress={(e) => {\r\n                      e.preventDefault();\r\n                      setCurrentList(p);\r\n                      dispatch({ type: events.SET_ACTIVE_LIST, data: p });\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      key={p._id}\r\n                      style={{\r\n                        fontSize: vw(15),\r\n                        // paddingTop: vh(40),\r\n                        paddingHorizontal: vw(10),\r\n                        color: \"#303030\",\r\n                        fontFamily: \"Poppins_medium\",\r\n                        marginHorizontal: vw(12),\r\n                        paddingBottom: vh(5),\r\n                        borderBottomWidth:\r\n                          activeList && list === p._id ? vh(4) : 0,\r\n                        borderBottomColor: \"rgba(125, 43, 233, 1)\",\r\n                      }}\r\n                    >\r\n                      {p.campaign ? (\r\n                        p.name\r\n                      ) : p.name !== \"All\" ? (\r\n                        <HStack title={\"No campaign attached\"} space={1}>\r\n                          {p.name} <ReportIssueIcon />\r\n                        </HStack>\r\n                      ) : (\r\n                        p.name\r\n                      )}\r\n                    </Text>\r\n                  </Pressable>\r\n                </Tooltip>\r\n              </HStack>\r\n            ))}\r\n          </HStack>\r\n          {/* </Hidden> */}\r\n\r\n          <HStack\r\n            style={{ marginTop: vh(-20) }}\r\n            justifyContent='flex-end'\r\n            space={2}\r\n          >\r\n            {lists && lists.length > 0 && (\r\n              <Hidden only={[\"base\", \"sm\", \"md\"]}>\r\n                <Pressable\r\n                  bg={{\r\n                    linearGradient: {\r\n                      colors: [\"lightBlue.300\", \"violet.800\"],\r\n                      start: [0, 0],\r\n                      end: [1, 0],\r\n                    },\r\n                  }}\r\n                  onPress={() => {\r\n                    setListStyle(\r\n                      listStyle === \"vertical\" ? \"horizontal\" : \"vertical\"\r\n                    );\r\n                    setOrientation(\r\n                      listStyle === \"vertical\" ? \"horizontal\" : \"vertical\"\r\n                    );\r\n                  }}\r\n                  rounded={\"full\"}\r\n                  style={{\r\n                    marginTop: vh(30),\r\n                    height: vh(36),\r\n                    width: vh(36),\r\n                    borderColor: \"rgba(0, 0, 0, 0.15)\",\r\n                    borderWidth: 1,\r\n                    // backgroundColor: \"transparent\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  {listStyle === \"vertical\" ? <AcreIcon /> : <NavListIcon />}\r\n                </Pressable>\r\n              </Hidden>\r\n            )}\r\n            <Pressable\r\n              bg={{\r\n                linearGradient: {\r\n                  colors: [\"lightBlue.300\", \"violet.800\"],\r\n                  start: [0, 0],\r\n                  end: [1, 0],\r\n                },\r\n              }}\r\n              onPress={(e) => {\r\n                e.preventDefault();\r\n                setShowModal(true);\r\n              }}\r\n              rounded={\"full\"}\r\n              style={{\r\n                marginTop: vh(30),\r\n                height: vh(36),\r\n                width: vh(36),\r\n                borderColor: \"rgba(0, 0, 0, 0.15)\",\r\n                borderWidth: 1,\r\n                // backgroundColor: \"transparent\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <AddIcon fill={\"rgba(0, 0, 0, 0.5)\"} />\r\n            </Pressable>\r\n\r\n            {/* <Menu\r\n              placement='left top'\r\n              borderRadius={vw(10)}\r\n              borderWidth={0}\r\n              marginTop={vh(40)}\r\n              marginRight={vw(-20)}\r\n              backgroundColor={\"white\"}\r\n              trigger={(triggerProps) => {\r\n                return (\r\n                  <Pressable\r\n                    accessibilityLabel='More options menu'\r\n                    {...triggerProps}\r\n                    style={{\r\n                      // position: \"absolute\",\r\n                      // right: 0,\r\n                      // top: vh(30),\r\n                      marginTop: vh(35),\r\n                    }}\r\n                  >\r\n                    <MoreIcon />\r\n                  </Pressable>\r\n                );\r\n              }}\r\n            >\r\n              <Menu.Item\r\n                onHoverIn={() => {\r\n                  setIsHover(\"add\");\r\n                }}\r\n                onHoverOut={() => {\r\n                  setIsHover(null);\r\n                }}\r\n                background={\"none\"}\r\n                // _pressed={{\r\n                //   borderWidth: 1,\r\n                //   borderColor: Colors.primary,\r\n                //   borderRadius: 50,\r\n                //   backgroundColor: \"white\",\r\n                // }}\r\n                borderWidth={1}\r\n                borderColor='transparent'\r\n                onPress={async (e) => {\r\n                  e.preventDefault();\r\n                  setShowModal(true);\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    textAlign: \"left\",\r\n                    fontFamily: \"Poppins\",\r\n                    color: isHover === \"add\" ? Colors.primary : \"#686868\",\r\n                    fontSize: vw(15),\r\n                  }}\r\n                >\r\n                  Add\r\n                </Text>\r\n              </Menu.Item>\r\n              {lists &&\r\n                lists.length > 1 &&\r\n                activeList &&\r\n                activeList.name !== \"All\" && (\r\n                  <Menu.Item\r\n                    onHoverIn={() => {\r\n                      setIsHover(\"edit\");\r\n                    }}\r\n                    onHoverOut={() => {\r\n                      setIsHover(null);\r\n                    }}\r\n                    background={\"none\"}\r\n                    // _pressed={{\r\n                    //   borderWidth: 1,\r\n                    //   borderColor: Colors.primary,\r\n                    //   borderRadius: 50,\r\n                    //   backgroundColor: \"white\",\r\n                    // }}\r\n                    borderWidth={1}\r\n                    borderColor='transparent'\r\n                    onPress={async (e) => {\r\n                      e.preventDefault();\r\n                      if (activeList && activeList.ord === 1) {\r\n                        moveHandler(activeList.ord, activeList.ord + 1);\r\n                      } else if (activeList && lists && lists.length > 1) {\r\n                        const last = lists[lists.length - 1];\r\n                        if (last.ord === activeList.ord) {\r\n                          moveHandler(activeList.ord, activeList.ord - 1);\r\n                        } else {\r\n                          setIsOpenMove(true);\r\n                        }\r\n                      }\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        textAlign: \"left\",\r\n                        fontFamily: \"Poppins\",\r\n                        color: isHover === \"move\" ? Colors.primary : \"#686868\",\r\n                        fontSize: vw(15),\r\n                      }}\r\n                    >\r\n                      Edit\r\n                    </Text>\r\n                  </Menu.Item>\r\n                )}\r\n              {lists &&\r\n                lists.length > 1 &&\r\n                activeList &&\r\n                activeList.name !== \"All\" && (\r\n                  <Menu.Item\r\n                    onHoverIn={() => {\r\n                      setIsHover(\"delete\");\r\n                    }}\r\n                    onHoverOut={() => {\r\n                      setIsHover(null);\r\n                    }}\r\n                    background={\"none\"}\r\n                    // _pressed={{\r\n                    //   borderWidth: 1,\r\n                    //   borderColor: Colors.primary,\r\n                    //   borderRadius: 50,\r\n                    //   backgroundColor: \"white\",\r\n                    // }}\r\n                    borderWidth={1}\r\n                    borderColor='transparent'\r\n                    onPress={() => {\r\n                      setIsOpen(true);\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        textAlign: \"left\",\r\n                        fontFamily: \"Poppins\",\r\n                        color:\r\n                          isHover === \"delete\" ? Colors.primary : \"#686868\",\r\n                        fontSize: vw(15),\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </Text>\r\n                  </Menu.Item>\r\n                )}\r\n            </Menu> */}\r\n          </HStack>\r\n        </HStack>\r\n      </Hidden>\r\n      {/* For Small Screens */}\r\n      <Hidden from='lg'>\r\n        <VStack\r\n          style={{\r\n            marginHorizontal: vh(20),\r\n            marginBottom: vh(10),\r\n            borderBottomColor: \"rgba(0,0,0,0.15)\",\r\n            borderBottomWidth: 1,\r\n          }}\r\n          space={2}\r\n        >\r\n          <HStack justifyContent={\"space-between\"}>\r\n            <Text\r\n              style={{\r\n                fontSize: vw(24),\r\n                paddingTop: vh(10),\r\n                color: \"#303030\",\r\n                fontFamily: \"Poppins_medium\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              Lists\r\n            </Text>\r\n            <Pressable\r\n              bg={{\r\n                linearGradient: {\r\n                  colors: [\"lightBlue.300\", \"violet.800\"],\r\n                  start: [0, 0],\r\n                  end: [1, 0],\r\n                },\r\n              }}\r\n              onPress={(e) => {\r\n                e.preventDefault();\r\n                setShowModal(true);\r\n              }}\r\n              rounded={\"full\"}\r\n              style={{\r\n                marginTop: vh(30),\r\n                height: vh(36),\r\n                width: vh(36),\r\n                borderColor: \"rgba(0, 0, 0, 0.15)\",\r\n                borderWidth: 1,\r\n                // backgroundColor: \"transparent\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <NotesIcon fill={\"rgba(102, 102, 102, 1)\"} />\r\n            </Pressable>\r\n\r\n            {/* <Menu\r\n              placement='left top'\r\n              borderRadius={vw(10)}\r\n              borderWidth={0}\r\n              backgroundColor={\"white\"}\r\n              trigger={(triggerProps) => {\r\n                return (\r\n                  <Pressable\r\n                    accessibilityLabel='More options menu'\r\n                    {...triggerProps}\r\n                    style={{\r\n                      // position: \"absolute\",\r\n                      // right: 0,\r\n                      // top: vh(30),\r\n                      marginTop: vh(20),\r\n                    }}\r\n                  >\r\n                    <MoreIcon />\r\n                  </Pressable>\r\n                );\r\n              }}\r\n            >\r\n              <Menu.Item\r\n                onHoverIn={() => {\r\n                  setIsHover(\"add\");\r\n                }}\r\n                onHoverOut={() => {\r\n                  setIsHover(null);\r\n                }}\r\n                background={\"none\"}\r\n                // _pressed={{\r\n                //   borderWidth: 1,\r\n                //   borderColor: Colors.primary,\r\n                //   borderRadius: 50,\r\n                //   backgroundColor: \"white\",\r\n                // }}\r\n                borderWidth={1}\r\n                borderColor='transparent'\r\n                onPress={async (e) => {\r\n                  e.preventDefault();\r\n                  setShowModal(true);\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    textAlign: \"left\",\r\n                    fontFamily: \"Poppins\",\r\n                    color: isHover === \"add\" ? Colors.primary : \"#686868\",\r\n                    fontSize: vw(15),\r\n                  }}\r\n                >\r\n                  Add\r\n                </Text>\r\n              </Menu.Item>\r\n              <Menu.Item\r\n                onHoverIn={() => {\r\n                  setIsHover(\"move\");\r\n                }}\r\n                onHoverOut={() => {\r\n                  setIsHover(null);\r\n                }}\r\n                background={\"none\"}\r\n                // _pressed={{\r\n                //   borderWidth: 1,\r\n                //   borderColor: Colors.primary,\r\n                //   borderRadius: 50,\r\n                //   backgroundColor: \"white\",\r\n                // }}\r\n                borderWidth={1}\r\n                borderColor='transparent'\r\n                onPress={async (e) => {\r\n                  e.preventDefault();\r\n                  if (activeList && activeList.ord === 1) {\r\n                    moveHandler(activeList.ord, activeList.ord + 1);\r\n                  } else if (activeList && lists && lists.length > 1) {\r\n                    const last = lists[lists.length - 1];\r\n                    if (last.ord === activeList.ord) {\r\n                      moveHandler(activeList.ord, activeList.ord - 1);\r\n                    } else {\r\n                      setIsOpenMove(true);\r\n                    }\r\n                  }\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    textAlign: \"left\",\r\n                    fontFamily: \"Poppins\",\r\n                    color: isHover === \"move\" ? Colors.primary : \"#686868\",\r\n                    fontSize: vw(15),\r\n                  }}\r\n                >\r\n                  Move\r\n                </Text>\r\n              </Menu.Item>\r\n              <Menu.Item\r\n                onHoverIn={() => {\r\n                  setIsHover(\"delete\");\r\n                }}\r\n                onHoverOut={() => {\r\n                  setIsHover(null);\r\n                }}\r\n                background={\"none\"}\r\n                // _pressed={{\r\n                //   borderWidth: 1,\r\n                //   borderColor: Colors.primary,\r\n                //   borderRadius: 50,\r\n                //   backgroundColor: \"white\",\r\n                // }}\r\n                borderWidth={1}\r\n                borderColor='transparent'\r\n                onPress={() => {\r\n                  setIsOpen(true);\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    textAlign: \"left\",\r\n                    fontFamily: \"Poppins\",\r\n                    color: isHover === \"delete\" ? Colors.primary : \"#686868\",\r\n                    fontSize: vw(15),\r\n                  }}\r\n                >\r\n                  Delete\r\n                </Text>\r\n              </Menu.Item>\r\n            </Menu> */}\r\n          </HStack>\r\n          <HStack\r\n            style={{\r\n              flexWrap: \"wrap\",\r\n              width: \"100%\",\r\n              justifyContent: \"flex-start\",\r\n              zoom: \"85%\",\r\n            }}\r\n          >\r\n            {lists.map((p) => (\r\n              <HStack\r\n                key={\"pl-\" + p._id}\r\n                style={{\r\n                  justifyContent: \"space-between\",\r\n                  height: vh(40),\r\n                }}\r\n              >\r\n                <Pressable\r\n                  key={\"h-\" + p._id}\r\n                  onPress={(e) => {\r\n                    e.preventDefault();\r\n                    dispatch({ type: events.SET_ACTIVE_LIST, data: p });\r\n                  }}\r\n                >\r\n                  <Text\r\n                    key={p._id}\r\n                    style={{\r\n                      fontSize: vw(15),\r\n                      // paddingTop: vh(40),\r\n                      paddingHorizontal: vw(10),\r\n                      color: \"#303030\",\r\n                      fontFamily: \"Poppins_medium\",\r\n                      marginHorizontal: vw(12),\r\n                      paddingBottom: vh(5),\r\n                      borderBottomWidth:\r\n                        activeList && list === p._id ? vh(4) : 0,\r\n                      borderBottomColor: \"rgba(125, 43, 233, 1)\",\r\n                    }}\r\n                  >\r\n                    {p.name + p.campaign}\r\n                  </Text>\r\n                </Pressable>\r\n              </HStack>\r\n            ))}\r\n          </HStack>\r\n        </VStack>\r\n      </Hidden>\r\n      <AddList\r\n        edit={false}\r\n        showModal={showModal}\r\n        setShowModal={setShowModal}\r\n        _showAlert={_showAlert}\r\n      />\r\n      <ShadowModal\r\n        size='md'\r\n        height={vh(60)}\r\n        isOpen={isOpen}\r\n        close={() => {\r\n          setIsOpen(false);\r\n        }}\r\n        header='Delete List'\r\n        buttons={\r\n          <HStack space={2}>\r\n            <ShadowButton\r\n              space={2}\r\n              onPress={() => {\r\n                setIsOpen(false);\r\n              }}\r\n              color='rgba(0,0,0, 0.5)'\r\n              variant='outline'\r\n              label='Cancel'\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n            <ShadowButton\r\n              space={2}\r\n              isLoading={isDeleting}\r\n              onPress={deleteHandler}\r\n              color='white'\r\n              label='Delete'\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n          </HStack>\r\n        }\r\n      >\r\n        <Text\r\n          style={{\r\n            fontFamily: \"Poppins\",\r\n            fontSize: vw(15),\r\n            color: \"rgba(0,0,0,0.8)\",\r\n          }}\r\n        >\r\n          Are you sure you want to delete this list?\r\n        </Text>\r\n      </ShadowModal>\r\n      <ShadowModal\r\n        size='md'\r\n        height={vh(60)}\r\n        isOpen={isOpenMove}\r\n        close={() => {\r\n          setIsOpenMove(false);\r\n        }}\r\n        header='Move List'\r\n        buttons={\r\n          <HStack space={2}>\r\n            <ShadowButton\r\n              space={2}\r\n              onPress={() => {\r\n                setIsOpenMove(false);\r\n              }}\r\n              variant='outline'\r\n              label='Cancel'\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n            <ShadowButton\r\n              space={2}\r\n              // isLoading={isMovingLeft}\r\n              onPress={() => {\r\n                moveHandler(activeList.ord, activeList.ord - 1);\r\n              }}\r\n              label='Left'\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n            <ShadowButton\r\n              space={2}\r\n              // isLoading={isMovingRight}\r\n              onPress={() => {\r\n                console.log(activeList.ord, activeList.ord + 1);\r\n                moveHandler(activeList.ord, activeList.ord + 1);\r\n              }}\r\n              label='Right'\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n          </HStack>\r\n        }\r\n      >\r\n        <Text\r\n          style={{\r\n            fontFamily: \"Poppins\",\r\n            fontSize: vw(15),\r\n            color: \"rgba(0,0,0,0.8)\",\r\n          }}\r\n        >\r\n          Move this list?\r\n        </Text>\r\n      </ShadowModal>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nconst PropertyFilters = ({ profile, status, tags, ft, setPage, list }) => {\r\n  const dRef = useRef();\r\n  const cRef = useRef();\r\n  const dispatch = useDispatch();\r\n\r\n  const [openFilter, setOpenFilter] = useState(null);\r\n  const [refresh, setRefresh] = useState(false);\r\n  const defaultFilter = {\r\n    bed: [],\r\n    bath: [],\r\n    sqft: [],\r\n    acre: [],\r\n    year: [],\r\n    ev: [],\r\n    date: { from: null, to: null },\r\n    tags: [],\r\n    status: [],\r\n    sort: \"\",\r\n    order: \"asc\",\r\n    ts: null,\r\n  };\r\n  const [filters, setFilters] = useState({});\r\n\r\n  var formatter = new Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\",\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 0,\r\n  });\r\n\r\n  // handle click outside\r\n  useEffect(() => {\r\n    /**\r\n     * Alert if clicked on outside of element\r\n     */\r\n    function handleClickOutside(event) {\r\n      if (dRef.current && !dRef.current.contains(event.target)) {\r\n        const e = document.elementsFromPoint(event.clientX, event.clientY);\r\n        const isCler = e.includes(cRef.current);\r\n        if (isCler) {\r\n          cRef.current.click();\r\n        }\r\n        setOpenFilter(null);\r\n      }\r\n    }\r\n\r\n    // Bind the event listener\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      // Unbind the event listener on clean up\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [dRef]);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"@listFilter:\" + list)) {\r\n      setFilters((f) => {\r\n        f[list] = JSON.parse(localStorage.getItem(\"@listFilter:\" + list));\r\n        return f;\r\n      });\r\n      setRefresh((r) => !r);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <HStack\r\n      space={4}\r\n      style={{\r\n        zoom: \"85%\",\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        width: \"100vw\",\r\n        justifyContent: \"flex-start\",\r\n      }}\r\n    >\r\n      {/* Bed */}\r\n      <ShadowDropDown\r\n        k='bed'\r\n        //setRefresh={setRefresh}\r\n        defaultFilter={defaultFilter}\r\n        setFilters={setFilters}\r\n        filters={filters}\r\n        label={\"Bed\"}\r\n        data={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((b) =>\r\n          b === 10 ? b + \"+\" : b\r\n        )}\r\n        openFilter={openFilter}\r\n        setOpenFilter={setOpenFilter}\r\n        setPage={setPage}\r\n        list={list}\r\n      />\r\n      {/* Bath */}\r\n      <ShadowDropDown\r\n        k='bath'\r\n        //setRefresh={setRefresh}\r\n        defaultFilter={defaultFilter}\r\n        setFilters={setFilters}\r\n        filters={filters}\r\n        label={\"Bath\"}\r\n        data={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((b) =>\r\n          b === 10 ? b + \"+\" : b\r\n        )}\r\n        openFilter={openFilter}\r\n        setOpenFilter={setOpenFilter}\r\n        setPage={setPage}\r\n        list={list}\r\n      />\r\n      {/* Sqft */}\r\n      <ShadowDropDown\r\n        k='sqft'\r\n        //setRefresh={setRefresh}\r\n        defaultFilter={defaultFilter}\r\n        setFilters={setFilters}\r\n        filters={filters}\r\n        label={\"Sq. Ft\"}\r\n        data={[\r\n          1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\r\n        ].map((b) => (b === 20 ? `20000+` : b * 1000))}\r\n        openFilter={openFilter}\r\n        setOpenFilter={setOpenFilter}\r\n        setPage={setPage}\r\n        list={list}\r\n      />\r\n\r\n      {/* Acre */}\r\n      <ShadowDropDown\r\n        k='acre'\r\n        //setRefresh={setRefresh}\r\n        defaultFilter={defaultFilter}\r\n        setFilters={setFilters}\r\n        filters={filters}\r\n        label={\"Acre\"}\r\n        data={[...Array(51).keys()].map((b) =>\r\n          b === 0\r\n            ? \"<0.4999\"\r\n            : b === 50\r\n            ? (b * 0.5).toFixed(4) + \"+\"\r\n            : (b * 0.5).toFixed(4)\r\n        )}\r\n        openFilter={openFilter}\r\n        setOpenFilter={setOpenFilter}\r\n        setPage={setPage}\r\n        list={list}\r\n      />\r\n\r\n      {/* Built year */}\r\n      <ShadowDropDown\r\n        k='year'\r\n        //setRefresh={setRefresh}\r\n        defaultFilter={defaultFilter}\r\n        setFilters={setFilters}\r\n        filters={filters}\r\n        label={\"Built year\"}\r\n        data={[\r\n          ...Array(moment().diff(moment(\"1900-01-01\"), \"years\") + 1).keys(),\r\n        ].map((b) => {\r\n          const y = moment().format(\"YYYY\") - b;\r\n          return y === 1900 ? \"<1900\" : y.toString();\r\n        })}\r\n        openFilter={openFilter}\r\n        setOpenFilter={setOpenFilter}\r\n        setPage={setPage}\r\n        list={list}\r\n      />\r\n      {/* Estimated Value */}\r\n      <ShadowDropDown\r\n        k='ev'\r\n        //setRefresh={setRefresh}\r\n        defaultFilter={defaultFilter}\r\n        setFilters={setFilters}\r\n        filters={filters}\r\n        label={\"Estimated Value\"}\r\n        data={[\r\n          0, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 2000, 3000,\r\n          4000, 5000, 6000, 7000, 8000, 9000, 10000,\r\n        ].map((b) => {\r\n          let label = formatter.format(b * 1000).toString();\r\n          if (b === 10000) {\r\n            label = label + \"+\";\r\n          } else if (b === 0) {\r\n            label = \"$0-99,999\";\r\n          }\r\n          return label;\r\n        })}\r\n        openFilter={openFilter}\r\n        setOpenFilter={setOpenFilter}\r\n        setPage={setPage}\r\n        list={list}\r\n      />\r\n      {/* Tags */}\r\n      <ShadowDropDown\r\n        k='tags'\r\n        //setRefresh={setRefresh}\r\n        defaultFilter={defaultFilter}\r\n        setFilters={setFilters}\r\n        filters={filters}\r\n        label={\"Tags\"}\r\n        data={tags}\r\n        openFilter={openFilter}\r\n        setOpenFilter={setOpenFilter}\r\n        setPage={setPage}\r\n        list={list}\r\n      />\r\n      {/* Status */}\r\n      <ShadowDropDown\r\n        k='status'\r\n        //setRefresh={setRefresh}\r\n        defaultFilter={defaultFilter}\r\n        setFilters={setFilters}\r\n        filters={filters}\r\n        openFilter={openFilter}\r\n        setOpenFilter={setOpenFilter}\r\n        label={\"Status\"}\r\n        data={status}\r\n        setPage={setPage}\r\n        list={list}\r\n      />\r\n      {/* Date */}\r\n      <VStack ref={dRef} style={{ marginVertical: vh(5) }}>\r\n        {filters &&\r\n          filters[list] &&\r\n          filters[list][\"date\"] &&\r\n          filters[list][\"date\"].from && (\r\n            <Badge // bg=\"red.400\"\r\n              bg={Colors.primary}\r\n              rounded='full'\r\n              // mb={-1}\r\n              mr={-4}\r\n              zIndex={997}\r\n              variant='solid'\r\n              alignSelf='flex-end'\r\n              _text={{\r\n                fontSize: 10,\r\n              }}\r\n              style={{ position: \"absolute\", marginTop: vh(-15) }}\r\n            >\r\n              {1}\r\n            </Badge>\r\n          )}\r\n        <>\r\n          <Button\r\n            variant='unstyled'\r\n            onPress={() => {\r\n              setOpenFilter(\"date\");\r\n            }}\r\n            _text={{\r\n              fontSize: vw(13),\r\n              fontFamily: \"Poppins_medium\",\r\n              color:\r\n                openFilter === \"date\"\r\n                  ? Colors.primary\r\n                  : \"rgba(102, 102, 102, 1)\",\r\n            }}\r\n            style={{\r\n              height: vh(36),\r\n              // width: vh(100),\r\n              backgroundColor: \"white\",\r\n              alignItems: \"center\",\r\n              zIndex: 995,\r\n              borderRadius: 10,\r\n              boxShadow: \"0px 2px 8px rgba(0, 0, 0, 0.1)\",\r\n            }}\r\n            rightIcon={<DropDownIcon />}\r\n          >\r\n            Added Date\r\n          </Button>\r\n          {openFilter === \"date\" && (\r\n            <VStack\r\n              style={{\r\n                position: \"absolute\",\r\n                marginTop: 40,\r\n                justifyContent: \"center\",\r\n                backgroundColor: \"white\",\r\n                width: vw(240),\r\n                padding: vw(10),\r\n                borderRadius: vw(10),\r\n                flex: 1,\r\n              }}\r\n              // height={vh(200)}\r\n            >\r\n              <HStack space={8} style={{ zIndex: 999999 }}>\r\n                <VStack space={1}>\r\n                  <Text\r\n                    style={{\r\n                      fontFamily: \"Poppins\",\r\n                      fontSize: vw(13),\r\n                      color: \"rgba(0,0,0,0.15\",\r\n                      marginLeft: vw(10),\r\n                    }}\r\n                  >\r\n                    From Date\r\n                  </Text>\r\n                  <DatePicker\r\n                    selected={\r\n                      filters[list] && filters[list][\"date\"].from\r\n                        ? new Date(filters[list][\"date\"].from)\r\n                        : new Date()\r\n                    }\r\n                    onChange={(date) => {\r\n                      setFilters((f) => {\r\n                        let v = f[list];\r\n                        if (!v) {\r\n                          v = defaultFilter;\r\n                        }\r\n                        v[\"date\"].from = date;\r\n                        v[\"date\"].to = v[\"date\"].to ? v[\"date\"].to : new Date();\r\n                        v[\"ts\"] = moment().valueOf();\r\n                        setPage((p) => {\r\n                          p[list] = 1;\r\n                          return p;\r\n                        });\r\n                        dispatch({\r\n                          type: events.FILTER_LAST_UPDATED,\r\n                          data: moment().valueOf(),\r\n                        });\r\n                        localStorage.setItem(\r\n                          \"@listFilter:\" + list,\r\n                          JSON.stringify(v)\r\n                        );\r\n                        f[list] = v;\r\n                        return f;\r\n                      });\r\n                      //setRefresh((r) => !r);\r\n                    }}\r\n                    selectsStart\r\n                    startDate={\r\n                      filters[list] && filters[list][\"date\"].from\r\n                        ? new Date(filters[list][\"date\"].from)\r\n                        : new Date()\r\n                    }\r\n                    endDate={\r\n                      filters[list] && filters[list][\"date\"].to\r\n                        ? new Date(filters[list][\"date\"].to)\r\n                        : new Date()\r\n                    }\r\n                    minDate={new Date(profile.created)}\r\n                    maxDate={new Date()}\r\n                  />\r\n                </VStack>\r\n                <VStack space={1}>\r\n                  <Text\r\n                    style={{\r\n                      fontFamily: \"Poppins\",\r\n                      fontSize: vw(13),\r\n                      color: \"rgba(0,0,0,0.15\",\r\n                      marginLeft: vw(10),\r\n                    }}\r\n                  >\r\n                    To Date\r\n                  </Text>\r\n                  <DatePicker\r\n                    selected={\r\n                      filters[list] && filters[list][\"date\"].to\r\n                        ? new Date(filters[list][\"date\"].to)\r\n                        : new Date()\r\n                    }\r\n                    onChange={(date) => {\r\n                      setFilters((f) => {\r\n                        let v = f[list];\r\n                        if (!v) {\r\n                          v = defaultFilter;\r\n                        }\r\n                        v[\"date\"].from = v[\"date\"].from\r\n                          ? v[\"date\"].from\r\n                          : new Date();\r\n                        v[\"date\"].to = date;\r\n                        v[\"ts\"] = moment().valueOf();\r\n                        setPage((p) => {\r\n                          p[list] = 1;\r\n                          return p;\r\n                        });\r\n                        dispatch({\r\n                          type: events.FILTER_LAST_UPDATED,\r\n                          data: moment().valueOf(),\r\n                        });\r\n                        localStorage.setItem(\r\n                          \"@listFilter:\" + list,\r\n                          JSON.stringify(v)\r\n                        );\r\n                        f[list] = v;\r\n                        return f;\r\n                      });\r\n                      //setRefresh((r) => !r);\r\n                    }}\r\n                    selectsEnd\r\n                    startDate={\r\n                      filters[list] && filters[list][\"date\"].from\r\n                        ? new Date(filters[list][\"date\"].from)\r\n                        : new Date()\r\n                    }\r\n                    endDate={\r\n                      filters[list] && filters[list][\"date\"].to\r\n                        ? new Date(filters[list][\"date\"].to)\r\n                        : new Date()\r\n                    }\r\n                    minDate={\r\n                      filters[list] && filters[list][\"date\"].from\r\n                        ? new Date(filters[list][\"date\"].from)\r\n                        : new Date()\r\n                    }\r\n                    maxDate={new Date()}\r\n                  />\r\n                </VStack>\r\n              </HStack>\r\n              <Center style={{ marginTop: vh(10) }}>\r\n                <ShadowButton\r\n                  onPress={() => {\r\n                    setFilters((f) => {\r\n                      let v = f[list];\r\n                      if (!v) {\r\n                        v = defaultFilter;\r\n                      }\r\n                      v[\"date\"].from = null;\r\n                      v[\"date\"].to = null;\r\n                      v[\"ts\"] = moment().valueOf();\r\n                      dispatch({\r\n                        type: events.FILTER_LAST_UPDATED,\r\n                        data: moment().valueOf(),\r\n                      });\r\n                      localStorage.setItem(\r\n                        \"@listFilter:\" + list,\r\n                        JSON.stringify(v)\r\n                      );\r\n                      f[list] = v;\r\n                      return f;\r\n                    });\r\n\r\n                    //setRefresh((r) => !r);\r\n                    setOpenFilter(null);\r\n                  }}\r\n                  variant='outline'\r\n                  label='Clear Date Filter'\r\n                  color={Colors.primary}\r\n                  style={{\r\n                    height: vh(32),\r\n                  }}\r\n                />\r\n              </Center>\r\n            </VStack>\r\n          )}\r\n        </>\r\n      </VStack>\r\n      {/* Sort */}\r\n      <ShadowDropDown\r\n        k='sort'\r\n        radio\r\n        //setRefresh={setRefresh}\r\n        defaultFilter={defaultFilter}\r\n        setFilters={setFilters}\r\n        filters={filters}\r\n        label={\"Sort by\"}\r\n        data={[\"#ID\", \"Owner Name\", \"User\"]}\r\n        precomponent={\r\n          <HStack margin={2} space={4}>\r\n            <Text>\r\n              {filters[\"order\"] === \"desc\" ? \"Descending\" : \"Ascending\"}\r\n            </Text>\r\n            <Switch\r\n              onTrackColor={Colors.primary}\r\n              offTrackColor={\"rgba(0,0,0,0.15)\"}\r\n              isChecked={filters[\"order\"] === \"desc\"}\r\n              onValueChange={(v) => {\r\n                if (v) {\r\n                  setFilters((f) => {\r\n                    let v = f[list];\r\n                    if (!v) {\r\n                      v = defaultFilter;\r\n                    }\r\n                    v[\"order\"] = \"desc\";\r\n                    v[\"ts\"] = moment().valueOf();\r\n                    dispatch({\r\n                      type: events.FILTER_LAST_UPDATED,\r\n                      data: moment().valueOf(),\r\n                    });\r\n                    localStorage.setItem(\r\n                      \"@listFilter:\" + list,\r\n                      JSON.stringify(v)\r\n                    );\r\n                    f[list] = v;\r\n                    return f;\r\n                  });\r\n                  //setRefresh((r) => !r);\r\n                } else {\r\n                  setFilters((f) => {\r\n                    let v = f[list];\r\n                    if (!v) {\r\n                      v = defaultFilter;\r\n                    }\r\n                    v[\"order\"] = \"asc\";\r\n                    v[\"ts\"] = moment().valueOf();\r\n                    dispatch({\r\n                      type: events.FILTER_LAST_UPDATED,\r\n                      data: moment().valueOf(),\r\n                    });\r\n                    localStorage.setItem(\r\n                      \"@listFilter:\" + list,\r\n                      JSON.stringify(v)\r\n                    );\r\n                    f[list] = v;\r\n                    return f;\r\n                  });\r\n                  //setRefresh((r) => !r);\r\n                }\r\n              }}\r\n              // value={filters[\"order\"] === \"desc\"}\r\n              size={\"sm\"}\r\n            />\r\n          </HStack>\r\n        }\r\n        openFilter={openFilter}\r\n        setOpenFilter={setOpenFilter}\r\n        setPage={setPage}\r\n      />\r\n      {ft > 0 && (\r\n        <Pressable\r\n          rounded={\"full\"}\r\n          style={{\r\n            marginLeft: vw(10),\r\n            marginTop: vh(8),\r\n          }}\r\n          onPress={() => {\r\n            localStorage.removeItem(\"@listFilter:\" + list);\r\n            setFilters((f) => {\r\n              f[list] = defaultFilter;\r\n              return f;\r\n            });\r\n            dispatch({\r\n              type: events.FILTER_LAST_UPDATED,\r\n              data: moment().valueOf(),\r\n            });\r\n            setPage((p) => {\r\n              p[list] = 1;\r\n              return p;\r\n            });\r\n            setOpenFilter(null);\r\n            setRefresh((r) => !r);\r\n          }}\r\n          variant={\"outline\"}\r\n        >\r\n          <Text\r\n            ref={cRef}\r\n            id='clear-filter'\r\n            style={{\r\n              fontFamily: \"Poppins_medium\",\r\n              fontSize: vw(15),\r\n              lineHeight: vh(32),\r\n            }}\r\n          >\r\n            Clear\r\n          </Text>\r\n        </Pressable>\r\n      )}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nconst setShowFiltersPersist = (list, show) => {\r\n  localStorage.setItem(\"@showFilters:\" + list, show);\r\n};\r\n\r\nconst getShowFiltersPersist = (list) => {\r\n  return localStorage.getItem(\"@showFilters:\" + list);\r\n};\r\n\r\nconst ListHeader = ({\r\n  setIsLoading,\r\n  setSearch,\r\n  setPage,\r\n  setSearchNow,\r\n  setIsSearched,\r\n  search,\r\n  setListStyle,\r\n  listStyle,\r\n  total,\r\n  profile,\r\n  setClearFilter,\r\n  tags,\r\n  status,\r\n  activelist,\r\n  name,\r\n  _showAlert,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const list = activelist && activelist._id;\r\n  const [showFilters, setShowFilters] = useState({});\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [refresh, setRefresh] = useState(false);\r\n  const sRef = useRef();\r\n  const cRef = useRef();\r\n  const ft = listsActions.filtersTotal(list);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n\r\n  const deleteHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      setIsDeleting(true);\r\n      const _id = list;\r\n      const action = listsActions.deleteList(_id, null);\r\n      await dispatch(action);\r\n      setIsDeleting(false);\r\n      _showAlert(\"success\", \"List deleted successfully.\");\r\n      setIsOpen(false);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n      setIsDeleting(false);\r\n      _showAlert(\"error\", \"An error occured, cannot delete list.\");\r\n    }\r\n  };\r\n\r\n  const _onSubmitEditing = (e) => {\r\n    if (e.nativeEvent.text === \"\") {\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n    setSearch(e.nativeEvent.text);\r\n    setPage((p) => {\r\n      p[list] = 1;\r\n      return p;\r\n    });\r\n    setSearchNow(true);\r\n    setIsSearched(true);\r\n  };\r\n\r\n  return (\r\n    <VStack\r\n      style={{\r\n        // height: vh(100),\r\n        marginTop: vh(-10),\r\n        marginHorizontal: vw(20),\r\n        borderBottomColor: \"rgba(0,0,0,0.15)\",\r\n        borderBottomWidth: 1,\r\n        justifyContent: \"space-between\",\r\n        zIndex: 99999,\r\n        paddingBottom: vh(10),\r\n        backgroundColor: \"rgb(247, 248, 250)\",\r\n      }}\r\n    >\r\n      <Hidden only={[\"sm\", \"base\"]}>\r\n        <HStack justifyContent={\"space-between\"}>\r\n          <HStack space={2}>\r\n            <Center style={{ marginTop: vh(30), height: vh(36) }}>\r\n              <Input\r\n                ref={sRef}\r\n                autoComplete='Off'\r\n                rounded={\"full\"}\r\n                variant='outline'\r\n                size={\"xs\"}\r\n                placeholder='Search by #id/name/address'\r\n                onSubmitEditing={_onSubmitEditing}\r\n                onChangeText={(v) => {\r\n                  cRef.current.style.visibility =\r\n                    v !== \"\" ? \"visible\" : \"hidden\";\r\n                  if (v === \"\") {\r\n                    localStorage.removeItem(\"@propertyFilter\");\r\n                    setSearchNow(true);\r\n                    setSearch(\"\");\r\n                    setPage((p) => {\r\n                      p[list] = 1;\r\n                      return p;\r\n                    });\r\n                    setIsLoading(true);\r\n                    sRef.current.value = \"\";\r\n                    cRef.current.style.visibility = \"hidden\";\r\n                  }\r\n                }}\r\n                style={{\r\n                  height: vh(36),\r\n                  width: vw(250),\r\n                  fontSize: vw(13),\r\n                  fontFamily: \"Poppins\",\r\n                }}\r\n                leftElement={\r\n                  <Center style={{ marginLeft: vw(10) }}>\r\n                    <SearchIcon width={18} height={18} fill={Colors.primary} />\r\n                  </Center>\r\n                }\r\n                rightElement={\r\n                  <Pressable\r\n                    ref={cRef}\r\n                    onPress={() => {\r\n                      if (search !== \"\") {\r\n                        localStorage.removeItem(\"@propertyFilter\");\r\n                        setSearchNow(true);\r\n                        setSearch(\"\");\r\n                        setPage((p) => {\r\n                          p[list] = 1;\r\n                          return p;\r\n                        });\r\n                        setIsLoading(true);\r\n                      }\r\n                      sRef.current.value = \"\";\r\n                      cRef.current.style.visibility = \"hidden\";\r\n                    }}\r\n                    style={{\r\n                      marginRight: vw(10),\r\n                      visibility: \"hidden\",\r\n                    }}\r\n                  >\r\n                    <CloseIcon />\r\n                  </Pressable>\r\n                  // ) : (\r\n                  //   <Pressable style={{ width: vw(24) }}></Pressable>\r\n                  // )\r\n                }\r\n              />\r\n            </Center>\r\n\r\n            {total > 0 && (\r\n              <HStack space={2}>\r\n                <Pressable\r\n                  bg={{\r\n                    linearGradient: {\r\n                      colors: [\"lightBlue.300\", \"violet.800\"],\r\n                      start: [0, 0],\r\n                      end: [1, 0],\r\n                    },\r\n                  }}\r\n                  onPress={() => {\r\n                    setListStyle(\r\n                      listStyle === \"vertical\" ? \"horizontal\" : \"vertical\"\r\n                    );\r\n                    setOrientation(\r\n                      listStyle === \"vertical\" ? \"horizontal\" : \"vertical\"\r\n                    );\r\n                  }}\r\n                  rounded={\"full\"}\r\n                  style={{\r\n                    marginTop: vh(30),\r\n                    height: vh(36),\r\n                    width: vh(36),\r\n                    borderColor: \"rgba(0, 0, 0, 0.15)\",\r\n                    borderWidth: 1,\r\n                    // backgroundColor: \"transparent\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  {listStyle === \"vertical\" ? <AcreIcon /> : <NavListIcon />}\r\n                </Pressable>\r\n              </HStack>\r\n            )}\r\n\r\n            <Button\r\n              onPress={() => {\r\n                setShowFiltersPersist(!showFilters);\r\n                setShowFilters((f) => {\r\n                  f[list] = !f[list];\r\n                  return f;\r\n                });\r\n                setRefresh(!refresh);\r\n              }}\r\n              leftIcon={\r\n                <FilterIcon\r\n                  fill={\r\n                    showFilters[list]\r\n                      ? Colors.primary\r\n                      : \"rgba(102, 102, 102, 1)\"\r\n                  }\r\n                />\r\n              }\r\n              style={{\r\n                marginTop: vh(30),\r\n                height: vh(36),\r\n                borderColor: \"rgba(0, 0, 0, 0.15)\",\r\n                borderWidth: 1,\r\n                backgroundColor: \"transparent\",\r\n                alignItems: \"center\",\r\n              }}\r\n              rounded={\"full\"}\r\n            >\r\n              {ft > 0 && (\r\n                <Badge\r\n                  rounded={\"full\"}\r\n                  bg={Colors.primary}\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    right: vw(-12),\r\n                    top: vh(-17),\r\n                  }}\r\n                  _text={{\r\n                    fontSize: vw(10),\r\n                    fontFamily: \"Poppins\",\r\n                    color: \"white\",\r\n                  }}\r\n                >\r\n                  {ft}\r\n                </Badge>\r\n              )}\r\n              <Text\r\n                style={{\r\n                  color: showFilters[list]\r\n                    ? Colors.primary\r\n                    : \"rgba(102, 102, 102, 1)\",\r\n                  fontFamily: \"Poppins_medium\",\r\n                  fontSize: vw(15),\r\n                  paddingTop: vh(3),\r\n                }}\r\n              >\r\n                Filters\r\n              </Text>\r\n            </Button>\r\n          </HStack>\r\n          {name !== \"All\" && (\r\n            <HStack space={2}>\r\n              {/* edit button */}\r\n              <Pressable\r\n                bg={{\r\n                  linearGradient: {\r\n                    colors: [\"lightBlue.300\", \"violet.800\"],\r\n                    start: [0, 0],\r\n                    end: [1, 0],\r\n                  },\r\n                }}\r\n                onPress={(e) => {\r\n                  e.preventDefault();\r\n                  setShowModal(true);\r\n                }}\r\n                rounded={\"full\"}\r\n                style={{\r\n                  marginTop: vh(30),\r\n                  height: vh(36),\r\n                  width: vh(36),\r\n                  borderColor: \"rgba(0, 0, 0, 0.15)\",\r\n                  borderWidth: 1,\r\n                  // backgroundColor: \"transparent\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <NotesIcon fill={\"rgba(102, 102, 102, 1)\"} />\r\n              </Pressable>\r\n              {/* delete button */}\r\n              <Pressable\r\n                bg={{\r\n                  linearGradient: {\r\n                    colors: [\"lightBlue.300\", \"violet.800\"],\r\n                    start: [0, 0],\r\n                    end: [1, 0],\r\n                  },\r\n                }}\r\n                onPress={(e) => {\r\n                  e.preventDefault();\r\n                  setIsOpen(true);\r\n                }}\r\n                rounded={\"full\"}\r\n                style={{\r\n                  marginTop: vh(30),\r\n                  height: vh(36),\r\n                  width: vh(36),\r\n                  borderColor: \"rgba(0, 0, 0, 0.15)\",\r\n                  borderWidth: 1,\r\n                  // backgroundColor: \"transparent\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <CloseIcon fill={\"rgba(102, 102, 102, 1)\"} />\r\n              </Pressable>\r\n            </HStack>\r\n          )}\r\n        </HStack>\r\n      </Hidden>\r\n      <Hidden from='md'>\r\n        <HStack justifyContent={\"space-between\"}>\r\n          <Center style={{ marginTop: vh(10), height: vh(36) }}>\r\n            <Input\r\n              autoComplete='Off'\r\n              rounded={\"full\"}\r\n              variant='outline'\r\n              size={\"xs\"}\r\n              placeholder='Search by #id/name/address'\r\n              onSubmitEditing={_onSubmitEditing}\r\n              style={{\r\n                height: vh(36),\r\n                width: vw(250),\r\n                fontSize: vw(13),\r\n                fontFamily: \"Poppins\",\r\n              }}\r\n              leftIcon={<SearchIcon width={18} height={18} />}\r\n            />\r\n          </Center>\r\n          <Button\r\n            onPress={() => {\r\n              setShowFiltersPersist(!showFilters);\r\n              setShowFilters(!showFilters);\r\n            }}\r\n            leftIcon={\r\n              <FilterIcon\r\n                fill={showFilters ? Colors.primary : \"rgba(102, 102, 102, 1)\"}\r\n              />\r\n            }\r\n            style={{\r\n              marginTop: vh(10),\r\n              height: vh(36),\r\n              borderColor: \"rgba(0, 0, 0, 0.15)\",\r\n              borderWidth: 1,\r\n              backgroundColor: \"transparent\",\r\n              alignItems: \"center\",\r\n            }}\r\n            rounded={\"full\"}\r\n          >\r\n            {ft > 0 && (\r\n              <Badge\r\n                rounded={\"full\"}\r\n                bg={Colors.primary}\r\n                style={{\r\n                  position: \"absolute\",\r\n                  right: vw(-12),\r\n                  top: vh(-17),\r\n                }}\r\n                _text={{\r\n                  fontSize: vw(10),\r\n                  fontFamily: \"Poppins\",\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                {ft}\r\n              </Badge>\r\n            )}\r\n          </Button>\r\n        </HStack>\r\n      </Hidden>\r\n      <HStack style={{ marginTop: vh(5) }}>\r\n        {/* Filters */}\r\n        {showFilters[list] && (\r\n          <PropertyFilters\r\n            setClearFilter={setClearFilter}\r\n            profile={profile}\r\n            status={status}\r\n            tags={tags}\r\n            ft={ft}\r\n            setPage={setPage}\r\n            list={list}\r\n          />\r\n        )}\r\n      </HStack>\r\n      <AddList\r\n        edit={true}\r\n        showModal={showModal}\r\n        setShowModal={setShowModal}\r\n        _showAlert={_showAlert}\r\n        activeList={activelist}\r\n      />\r\n      <ShadowModal\r\n        size='md'\r\n        height={vh(60)}\r\n        isOpen={isOpen}\r\n        close={() => {\r\n          setIsOpen(false);\r\n        }}\r\n        header='Delete List'\r\n        buttons={\r\n          <HStack space={2}>\r\n            <ShadowButton\r\n              space={2}\r\n              onPress={() => {\r\n                setIsOpen(false);\r\n              }}\r\n              color='rgba(0,0,0, 0.5)'\r\n              variant='outline'\r\n              label='Cancel'\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n            <ShadowButton\r\n              space={2}\r\n              isLoading={isDeleting}\r\n              onPress={deleteHandler}\r\n              color='white'\r\n              label='Delete'\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n          </HStack>\r\n        }\r\n      >\r\n        <Text\r\n          style={{\r\n            fontFamily: \"Poppins\",\r\n            fontSize: vw(15),\r\n            color: \"rgba(0,0,0,0.8)\",\r\n          }}\r\n        >\r\n          Are you sure you want to delete list {name}?\r\n        </Text>\r\n      </ShadowModal>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nconst Index = ({ user, setLogout }) => {\r\n  const [landscape] = useMediaQuery([\r\n    {\r\n      orientation: \"landscape\",\r\n    },\r\n    {\r\n      orientation: \"portrait\",\r\n    },\r\n  ]);\r\n\r\n  const sz = useBreakpointValue({\r\n    base: \"base\",\r\n    sm: \"sm\",\r\n    lg: \"lg\",\r\n    md: \"md\",\r\n    xl: \"xl\",\r\n  });\r\n\r\n  let cols = useBreakpointValue({\r\n    base: 1,\r\n    sm: 1,\r\n    lg: 4,\r\n    md: 3,\r\n    xl: 5,\r\n  });\r\n\r\n  if (cols === 1 && landscape) {\r\n    cols = 2;\r\n  }\r\n\r\n  const toast = useToast();\r\n  const socket = useContext(SocketContext);\r\n  const dispatch = useDispatch();\r\n  const { onOpen, onClose, isOpen } = useDisclose();\r\n  const {\r\n    lists,\r\n    activeList,\r\n    properties: lp,\r\n    total: lt,\r\n  } = useSelector((state) => state.lists);\r\n  const [limit, setLimit] = useState({});\r\n  const [listStyle, setListStyle] = useState(getOrientation(\"lists\"));\r\n  const op = _.sortBy(lists, \"ord\");\r\n  const [page, setPage] = useState({});\r\n  const [search, setSearch] = useState({});\r\n  const [reload, setReload] = useState(false);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const cardwidth = listStyle === \"vertical\" ? 343 : 720;\r\n  cols = Math.floor(window.screen.width / cardwidth);\r\n  if (cols === 0) {\r\n    cols = 1;\r\n  }\r\n\r\n  const list = activeList && activeList._id;\r\n  const name = activeList && activeList.name;\r\n  const properties = lp[list] || [];\r\n  const total = (lt && lt[list]) || 0;\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        await dispatch(listsActions.fetchLists());\r\n        setIsLoading(false);\r\n      } catch (err) {\r\n        _showAlert(\"error\", err.message);\r\n        setIsLoading(false);\r\n      }\r\n    })();\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (list) {\r\n        await dispatch(\r\n          listsActions.fetchListProperties({\r\n            page: page[list] || 1,\r\n            limit: limit[list] || 20,\r\n            _id: list,\r\n            name,\r\n            search: search[list],\r\n          })\r\n        );\r\n        setLimit((l) => {\r\n          if (!l[list]) {\r\n            l[list] = 20;\r\n          }\r\n          return l;\r\n        });\r\n      }\r\n      setIsLoading(false);\r\n    })();\r\n  }, [dispatch, search[list], list, page[list], limit[list]]);\r\n\r\n  const _emptyComponent = useCallback(() => {\r\n    return (\r\n      <Center height={\"lg\"} justifyContent='center' alignItems='center'>\r\n        <Text textAlign={\"center\"}>\r\n          {\"No items found.\"} {activeList && activeList.name}{\" \"}\r\n        </Text>\r\n      </Center>\r\n    );\r\n  }, [activeList]);\r\n\r\n  const _showAlert = useCallback(\r\n    (status, msg) => {\r\n      toast.show({\r\n        placement: \"top\",\r\n        render: () => {\r\n          let bg = \"red.300\";\r\n          if (status === \"error\") {\r\n            bg = \"red.300\";\r\n          } else if (status === \"success\") {\r\n            bg = \"green.300\";\r\n          } else if (status === \"info\") {\r\n            bg = \"blueGray.300\";\r\n          } else if (status === \"warning\") {\r\n            bg = \"orange.300\";\r\n          }\r\n          return (\r\n            <Text\r\n              style={{\r\n                fontSize: vw(12),\r\n                fontFamily: \"Poppins_medium\",\r\n                color: \"#33214B\",\r\n              }}\r\n              p={2}\r\n              bg={bg}\r\n              rounded={\"full\"}\r\n            >\r\n              {msg}\r\n            </Text>\r\n          );\r\n        },\r\n      });\r\n    },\r\n    [toast]\r\n  );\r\n\r\n  const _renderItem = useCallback(\r\n    ({ item, index }) => {\r\n      const isEnd = index === properties.length - 1;\r\n      return listStyle === \"horizontal\" ? (\r\n        <HorizontalItem\r\n          lists={lists}\r\n          activeList={activeList}\r\n          item={item}\r\n          isEnd={isEnd}\r\n          _showAlert={_showAlert}\r\n        />\r\n      ) : (\r\n        <VerticalItem\r\n          activeList={activeList}\r\n          item={item}\r\n          lists={lists}\r\n          _showAlert={_showAlert}\r\n          cols={cols}\r\n        />\r\n      );\r\n    },\r\n    [listStyle, activeList, _showAlert, cols, lists, properties.length]\r\n  );\r\n\r\n  const _getItemLayout = useCallback(\r\n    (data, index) => ({\r\n      length: 180,\r\n      offset: 180 * index,\r\n      index,\r\n    }),\r\n    []\r\n  );\r\n\r\n  const RoundButton = (props) => {\r\n    const [isPressed, setIsPressed] = useState(false);\r\n    return (\r\n      <Center\r\n        style={{ bottom: 60 }}\r\n        alignItems='center'\r\n        position={\"fixed\"}\r\n        right={5}\r\n        p={2}\r\n      >\r\n        <Pressable\r\n          zIndex={9999}\r\n          style={{ padding: isPressed ? 10 : 11, marginTop: 1 }}\r\n          borderRadius={100}\r\n          bg={isPressed ? \"white\" : Colors.primary}\r\n          borderColor={isPressed ? Colors.primary : Colors.primary}\r\n          borderWidth={isPressed ? 1 : 0}\r\n          onPressIn={() => {\r\n            setIsPressed(true);\r\n          }}\r\n          onPressOut={() => {\r\n            setIsPressed(false);\r\n          }}\r\n          onPress={() => {\r\n            onOpen();\r\n          }}\r\n        >\r\n          <AddIcon fill={!isPressed ? \"white\" : Colors.primary} />\r\n        </Pressable>\r\n      </Center>\r\n    );\r\n  };\r\n\r\n  const _keyExtractor = useCallback((item) => item._id, []);\r\n\r\n  const ph = 100 - parseFloat(vh(70)) + \"vh\";\r\n  const lh = 100 - parseFloat(vh(70)) - 65.7 + \"vh\";\r\n\r\n  // console.log(\"Properties\", properties);\r\n\r\n  // console.log(\"LIST\", activeList)\r\n\r\n  return (\r\n    <VStack minHeight={\"100vh\"} bg={\"#F7F8FA\"}>\r\n      <NavBar user={user} setLogout={setLogout} />\r\n      <VStack height={ph}>\r\n        <PageHeader\r\n          list={list}\r\n          setListStyle={setListStyle}\r\n          listStyle={listStyle}\r\n          activeList={activeList}\r\n          lists={op}\r\n          _showAlert={_showAlert}\r\n        />\r\n\r\n        {isLoading ? (\r\n          <Center\r\n            flex={1}\r\n            height={lh}\r\n            justifyContent='center'\r\n            alignItems='center'\r\n          >\r\n            <Spinner size='small' color={\"#7D2BE9\"} />\r\n          </Center>\r\n        ) : (\r\n          <>\r\n            {cols === 1 ? (\r\n              <FlatList\r\n                key={\"list-small\"}\r\n                refreshing={refreshing}\r\n                removeClippedSubviews={true}\r\n                _contentContainerStyle={\r\n                  {\r\n                    // marginTop: !showFilters[list] ? 0 : 0,\r\n                  }\r\n                }\r\n                getItemLayout={_getItemLayout}\r\n                disableVirtualization={true}\r\n                ListHeaderComponent={\r\n                  <ListHeader\r\n                    setSearch={setSearch}\r\n                    setIsLoading={setIsLoading}\r\n                    page={page[list]}\r\n                    setPage={setPage}\r\n                    activelist={activeList}\r\n                    name={name}\r\n                    _showAlert={_showAlert}\r\n                  />\r\n                }\r\n                ListEmptyComponent={_emptyComponent}\r\n                data={properties}\r\n                extraData={\"vertical\"}\r\n                keyExtractor={_keyExtractor}\r\n                renderItem={_renderItem}\r\n                updateCellsBatchingPeriod={1}\r\n                initialNumToRender={50}\r\n                maxToRenderPerBatch={50}\r\n              />\r\n            ) : (\r\n              <FlatList\r\n                key={\"list-\" + sz + \"-\" + listStyle}\r\n                refreshing={refreshing}\r\n                removeClippedSubviews={true}\r\n                _contentContainerStyle={{\r\n                  // marginTop: !showFilters[] ? 0 : 0,\r\n                  marginLeft: vw(1),\r\n                }}\r\n                columnWrapperStyle={{\r\n                  justifyContent: \"flex-start\",\r\n                }}\r\n                getItemLayout={_getItemLayout}\r\n                disableVirtualization={true}\r\n                ListHeaderComponent={\r\n                  <ListHeader\r\n                    setSearch={setSearch}\r\n                    setIsLoading={setIsLoading}\r\n                    page={page[list]}\r\n                    setPage={setPage}\r\n                    activelist={activeList}\r\n                    name={name}\r\n                    _showAlert={_showAlert}\r\n                  />\r\n                }\r\n                ListEmptyComponent={_emptyComponent}\r\n                data={properties}\r\n                extraData={listStyle}\r\n                keyExtractor={_keyExtractor}\r\n                renderItem={_renderItem}\r\n                updateCellsBatchingPeriod={1}\r\n                initialNumToRender={50}\r\n                maxToRenderPerBatch={50}\r\n                numColumns={cols}\r\n              />\r\n            )}\r\n            {/* {total > 0 && (\r\n              <ShadowPagination\r\n                limit={limit}\r\n                total={total}\r\n                page={page}\r\n                setPage={setPage}\r\n                // setIsLoading={setIsLoading}\r\n                setLimit={setLimit}\r\n              />\r\n            )} */}\r\n          </>\r\n        )}\r\n\r\n        {total > 0 && (\r\n          <ShadowPagination\r\n            limit={limit[list]}\r\n            total={total}\r\n            page={page[list]}\r\n            setLimit={(lt) => {\r\n              setLimit((l) => {\r\n                l[list] = lt;\r\n                return l;\r\n              });\r\n              setReload(!reload);\r\n            }}\r\n            setPage={(pg) => {\r\n              setPage((p) => {\r\n                p[list] = pg;\r\n                return p;\r\n              });\r\n              setReload(!reload);\r\n            }}\r\n            setIsLoading={setIsLoading}\r\n          />\r\n        )}\r\n\r\n        <Actionsheet\r\n          isOpen={isOpen}\r\n          onClose={() => {\r\n            onClose();\r\n            setReload(!reload);\r\n          }}\r\n        >\r\n          <Actionsheet.Content\r\n            alignSelf={\"center\"}\r\n            width={[\"90vw\", 600]}\r\n            bg={\"white\"}\r\n          >\r\n            <Center>\r\n              <Text fontSize={18}>Add Properties</Text>\r\n              <Text fontSize={12}>{activeList && activeList.name}</Text>\r\n            </Center>\r\n            <AddContacts\r\n              lists={\r\n                lists &&\r\n                lists.length > 0 &&\r\n                lists.filter((l) => l.name !== \"All\").map((l) => l._id)\r\n              }\r\n              list={activeList && list}\r\n              dispatch={dispatch}\r\n              socket={socket}\r\n              _showAlert\r\n            />\r\n          </Actionsheet.Content>\r\n        </Actionsheet>\r\n      </VStack>\r\n      {activeList && activeList.name !== \"All\" && lists && lists.length > 0 && (\r\n        <RoundButton />\r\n      )}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","import React, { forwardRef } from 'react';\nimport { View as RNView } from 'react-native';\nimport { usePropsResolution } from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport type { IViewProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyledView: any = makeStyledComponent(RNView);\n\nexport const View = forwardRef((props: IViewProps, ref: any) => {\n  const { ...resolvedProps } = usePropsResolution('View', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <StyledView {...resolvedProps} ref={ref} />;\n});\n","import React from 'react';\n\nexport function useDisclose(initState?: boolean) {\n  const [isOpen, setIsOpen] = React.useState(initState || false);\n  const onOpen = () => {\n    setIsOpen(true);\n  };\n  const onClose = () => {\n    setIsOpen(false);\n  };\n  const onToggle = () => {\n    setIsOpen(!isOpen);\n  };\n  return {\n    isOpen,\n    onOpen,\n    onClose,\n    onToggle,\n  };\n}\n"],"names":["fill","stroke","xmlns","viewBox","width","height","Path","d","G","SocketContext","React","Tooltip","label","children","onClose","onOpen","defaultIsOpen","placement","openDelay","closeDelay","closeOnClick","offset","isDisabled","hasArrow","arrowSize","isOpenProp","isOpen","props","undefined","resolvedProps","usePropsResolution","useControllableState","value","defaultValue","onChange","setIsOpen","arrowBg","backgroundColor","bgColor","bg","targetRef","enterTimeout","exitTimeout","tooltipID","uniqueId","ResponsiveQueryContext","disableCSSMediaQueries","useId","openWithDelay","current","setTimeout","closeWithDelay","clearTimeout","newChildren","Box","composeEventHandlers","onPress","onFocus","onBlur","onMouseEnter","onMouseLeave","mergeRefs","ref","useKeyboardDismissable","enabled","callback","useHasResponsiveProps","OverlayContainer","PresenceTransition","initial","opacity","animate","transition","duration","exit","visible","style","StyleSheet","Popper","triggerRef","borderColor","accessibilityRole","Platform","nativeID","vw","Util","vh","item","cols","currency","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","pic","createdUser","fullname","firstname","lastname","nameSplit","split","nameFb","ui","id","userUri","CDN","_id","propertyUri","sqft","acre","toString","name","trim","Link","window","screen","marginHorizontal","marginVertical","href","HStack","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","borderTopStartRadius","borderBottomStartRadius","overflow","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","VStack","flex","paddingHorizontal","paddingTop","justifyContent","alignItems","Text","fontFamily","fontSize","color","alignContent","PriceIcon","ev","format","padding","margin","propertyaddress","CalendarWhiteIcon","yearbuilt","borderTopWidth","borderTopColor","borderBottomWidth","borderBottomColor","marginTop","marginRight","SqftIcon","AcreIcon","BedIcon","bed","BathIcon","bath","status","tid","Center","rounded","paddingVertical","Avatar","source","uri","lineHeight","marginLeft","TimeIcon","moment","created","activeList","_showAlert","dispatch","useDispatch","useState","isAttaching","setIsAttaching","listCampaign","listcampaign","attachCampaign","data","action","propertiesActions","campaign","message","resizeMode","borderTopEndRadius","applyto","Button","isLoading","shadow","e","preventDefault","size","position","top","left","Colors","_text","textAlign","right","marginBottom","mid","MarketIcon","parseFloat","toFixed","Object","keys","length","space","NavCampaignIcon","ReportIssueIcon","NavListIcon","listname","getUser","localStorage","getItem","JSON","parse","AddContacts","list","lists","sRef","useRef","cRef","page","setPage","total","setTotal","limit","setLimit","setIsLoading","isSaving","setIsSaving","reload","setReload","pIsSav","search","setSearch","properties","setProperties","_getData","useCallback","filter","inList","ninList","token","fetch","API_URL","method","headers","Authorization","body","stringify","skip","parseInt","fields","owneraddress","notes","sort","response","ok","json","errData","console","log","error","Error","resData","count","useEffect","unmounted","NoItemsFound","minHeight","RenderItem","listRef","setInList","saveProperty","p","del","property","type","events","err","Pressable","flexDirection","View","Spinner","Checkbox","accessibilityLabel","isChecked","colorScheme","paddingBottom","Input","w","autoComplete","variant","placeholder","onSubmitEditing","nativeEvent","text","onChangeText","v","visibility","leftElement","SearchIcon","rightElement","CloseIcon","FlatList","contentContainerStyle","ListEmptyComponent","keyExtractor","renderItem","initialNumToRender","maxToRenderPerBatch","ShadowPagination","bottom","zoom","n","setShowModal","showModal","edit","setRefresh","useSelector","state","campaigns","userCampaigns","useForm","mode","control","handleSubmit","errors","formState","reset","setValue","getValues","campaignActions","exclude","onSubmit","listActions","ShadowModal","bodyHeight","close","cancel","save","header","buttons","ShadowButton","ShadowInput","autoFocus","rules","required","invalid","inputStyle","ShadowSelect","items","map","c","r","setOrientation","orientation","a","x","setItem","ShadowDropDown","precomponent","setFilters","defaultFilter","filters","k","radio","mRef","opened","setOpened","Menu","shouldOverlapWithTrigger","trigger","triggerProps","Badge","zIndex","alignSelf","boxShadow","rightIcon","DropDownIcon","minWidth","maxWidth","maxHeight","Radio","f","valueOf","b","mx","my","key","includes","val","push","PageHeader","listStyle","setListStyle","isOpenMove","setIsOpenMove","isDeleting","setIsDeleting","deleteHandler","listsActions","moveHandler","t","from","to","Hidden","only","flexWrap","setCurrentList","title","linearGradient","colors","start","end","borderWidth","AddIcon","NotesIcon","ord","PropertyFilters","profile","tags","ft","dRef","openFilter","setOpenFilter","year","date","order","ts","formatter","handleClickOutside","event","contains","target","document","elementsFromPoint","clientX","clientY","click","addEventListener","removeEventListener","display","Array","diff","y","mr","selected","Date","selectsStart","startDate","endDate","minDate","maxDate","selectsEnd","Switch","onTrackColor","offTrackColor","onValueChange","removeItem","setShowFiltersPersist","show","ListHeader","setSearchNow","setIsSearched","setClearFilter","activelist","showFilters","setShowFilters","refresh","_onSubmitEditing","leftIcon","FilterIcon","user","setLogout","useMediaQuery","landscape","sz","useBreakpointValue","base","sm","lg","md","xl","toast","useToast","socket","useContext","useDisclose","lp","lt","getOrientation","op","_","refreshing","cardwidth","Math","floor","l","_emptyComponent","msg","render","_renderItem","isEnd","index","_getItemLayout","RoundButton","isPressed","setIsPressed","onPressIn","onPressOut","_keyExtractor","ph","lh","NavBar","removeClippedSubviews","_contentContainerStyle","getItemLayout","disableVirtualization","ListHeaderComponent","extraData","updateCellsBatchingPeriod","columnWrapperStyle","numColumns","pg","Actionsheet","StyledView","makeStyledComponent","RNView","forwardRef","initState","onToggle"],"sourceRoot":""}