{"version":3,"file":"static/js/2977.4cc94a22.chunk.js","mappings":"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","sources":["../node_modules/native-base/lib/module/components/basic/ScrollView/ScrollView.tsx","../node_modules/native-base/lib/module/components/composites/Modal/Context.ts","../node_modules/native-base/lib/module/components/composites/Modal/Modal.tsx","../node_modules/native-base/lib/module/components/composites/Modal/ModalContent.tsx","../node_modules/native-base/lib/module/components/composites/Modal/ModalBody.tsx","../node_modules/native-base/lib/module/components/composites/Modal/ModalCloseButton.tsx","../node_modules/native-base/lib/module/components/composites/Modal/ModalFooter.tsx","../node_modules/native-base/lib/module/components/composites/Modal/ModalHeader.tsx","../node_modules/native-base/lib/module/components/composites/Modal/index.tsx","../node_modules/native-base/lib/module/components/composites/Transitions/Fade.tsx","../node_modules/native-base/lib/module/components/composites/Transitions/Slide.tsx","../node_modules/native-base/lib/module/components/primitives/Icon/Icons/Close.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { ScrollView as RNScrollView } from 'react-native';\nimport {\n  usePropsResolution,\n  useStyledSystemPropsResolver,\n} from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport type { IScrollViewProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyledScrollView: any = makeStyledComponent(RNScrollView);\n\nexport const ScrollView = forwardRef((props: IScrollViewProps, ref: any) => {\n  const {\n    _contentContainerStyle,\n    contentContainerStyle,\n    ...resolvedProps\n  } = usePropsResolution('ScrollView', props, {});\n  const resolved_ContentContainerStyle = useStyledSystemPropsResolver(\n    _contentContainerStyle || {}\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <StyledScrollView\n      {...resolvedProps}\n      contentContainerStyle={\n        contentContainerStyle || resolved_ContentContainerStyle\n      }\n      ref={ref}\n    />\n  );\n});\n","import React from 'react';\n\nexport const ModalContext = React.createContext({\n  handleClose: (() => {}) as any,\n  contentSize: {} as any,\n  initialFocusRef: { current: null } as React.RefObject<any> | undefined,\n  finalFocusRef: { current: null } as React.RefObject<any> | undefined,\n  visible: false as boolean,\n});\n","import React, { forwardRef, memo } from 'react';\nimport { StyleSheet } from 'react-native';\nimport Backdrop from '../Backdrop';\nimport { Slide } from '../Transitions';\nimport { FocusScope } from '@react-native-aria/focus';\nimport { useControllableState, usePropsResolution } from '../../../hooks';\nimport { ModalContext } from './Context';\nimport Box from '../../primitives/Box';\nimport type { IModalProps } from './types';\nimport { Fade } from '../../composites/Transitions';\nimport { useKeyboardBottomInset } from '../../../utils';\nimport { Overlay } from '../../primitives/Overlay';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Modal = (\n  {\n    children,\n    isOpen,\n    onClose,\n    defaultIsOpen,\n    initialFocusRef,\n    finalFocusRef,\n    avoidKeyboard,\n    closeOnOverlayClick = true,\n    isKeyboardDismissable = true,\n    overlayVisible = true,\n    backdropVisible = true,\n    animationPreset,\n    ...rest\n  }: IModalProps,\n  ref: any\n) => {\n  const bottomInset = useKeyboardBottomInset();\n  const {\n    contentSize,\n    _backdrop,\n    _backdropFade,\n    _fade,\n    _slide,\n    _overlay,\n    useRNModal,\n    ...resolvedProps\n  } = usePropsResolution('Modal', rest);\n\n  const [visible, setVisible] = useControllableState({\n    value: isOpen,\n    defaultValue: defaultIsOpen,\n    onChange: (val) => {\n      if (!val) onClose && onClose();\n    },\n  });\n\n  const handleClose = React.useCallback(() => setVisible(false), [setVisible]);\n\n  const child = (\n    <Box\n      bottom={avoidKeyboard ? bottomInset + 'px' : undefined}\n      {...resolvedProps}\n      ref={ref}\n      pointerEvents=\"box-none\"\n    >\n      {children}\n    </Box>\n  );\n\n  const contextValue = React.useMemo(() => {\n    return {\n      handleClose,\n      contentSize,\n      initialFocusRef,\n      finalFocusRef,\n      visible,\n    };\n  }, [handleClose, contentSize, initialFocusRef, finalFocusRef, visible]);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(rest)) {\n    return null;\n  }\n  // console.log('visible here', visible);\n  return (\n    <Overlay\n      isOpen={visible}\n      onRequestClose={handleClose}\n      isKeyboardDismissable={isKeyboardDismissable}\n      animationPreset={animationPreset}\n      useRNModalOnAndroid\n      useRNModal={useRNModal}\n      {..._overlay}\n    >\n      <ModalContext.Provider value={contextValue}>\n        <Fade in={visible} style={StyleSheet.absoluteFill} {..._backdropFade}>\n          {overlayVisible && backdropVisible && (\n            <Backdrop\n              onPress={() => {\n                closeOnOverlayClick && handleClose();\n              }}\n              {..._backdrop}\n            />\n          )}\n        </Fade>\n        {animationPreset === 'slide' ? (\n          <Slide in={visible} {..._slide}>\n            <FocusScope\n              contain={visible}\n              autoFocus={visible && !initialFocusRef}\n              restoreFocus={visible && !finalFocusRef}\n            >\n              {child}\n            </FocusScope>\n          </Slide>\n        ) : (\n          <Fade in={visible} style={StyleSheet.absoluteFill} {..._fade}>\n            <FocusScope\n              contain={visible}\n              autoFocus={visible && !initialFocusRef}\n              restoreFocus={visible && !finalFocusRef}\n            >\n              {child}\n            </FocusScope>\n          </Fade>\n        )}\n      </ModalContext.Provider>\n    </Overlay>\n  );\n};\n\nexport default memo(forwardRef(Modal));\n","import React, { memo, forwardRef } from 'react';\nimport Box, { IBoxProps } from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks';\nimport { ModalContext } from './Context';\nimport { Platform } from 'react-native';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst ModalContent = (props: IBoxProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('ModalContent', props);\n  const {\n    contentSize,\n    initialFocusRef,\n    finalFocusRef,\n    handleClose,\n    visible,\n  } = React.useContext(ModalContext);\n  React.useEffect(() => {\n    const finalRefVal = finalFocusRef ? finalFocusRef.current : null;\n    if (visible) {\n      if (initialFocusRef && initialFocusRef.current) {\n        //@ts-ignore\n        initialFocusRef.current.focus();\n      }\n    } else {\n      if (finalRefVal) {\n        //@ts-ignore\n        finalRefVal.focus();\n      }\n    }\n  }, [initialFocusRef, finalFocusRef, visible]);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box\n      {...contentSize}\n      {...resolvedProps}\n      ref={ref}\n      onAccessibilityEscape={handleClose}\n      //@ts-ignore - web only\n      aria-modal=\"true\"\n      //@ts-ignore - web only\n      accessibilityRole={Platform.OS === 'web' ? 'dialog' : undefined}\n      accessibilityViewIsModal\n      _web={{ focusable: false }}\n    />\n  );\n};\n\nexport default memo(forwardRef(ModalContent));\n","import React, { memo, forwardRef } from 'react';\nimport Box, { IBoxProps } from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { ScrollView, IScrollViewProps } from '../../basic/ScrollView';\n\nconst ModalBody = (\n  { children, ...props }: IBoxProps & { _scrollview?: IScrollViewProps },\n  ref?: any\n) => {\n  const { _scrollview, ...resolvedProps } = usePropsResolution(\n    'ModalBody',\n    props\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <ScrollView {..._scrollview}>\n      <Box {...resolvedProps} ref={ref}>\n        {children}\n      </Box>\n    </ScrollView>\n  );\n};\n\nexport default memo(forwardRef(ModalBody));\n","import React, { memo, forwardRef } from 'react';\nimport { ModalContext } from './Context';\nimport { usePropsResolution } from '../../../hooks';\nimport { Pressable } from '../../primitives/Pressable';\nimport { CloseIcon } from '../../primitives/Icon/Icons';\nimport type { IButtonProps } from '../../primitives/Button';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport {\n  useHover,\n  useFocus,\n  useIsPressed,\n} from '../../primitives/Pressable/Pressable';\nimport { composeEventHandlers } from '../../../utils';\nimport { useFocusRing } from '@react-native-aria/focus';\n\nconst ModalCloseButton = (props: IButtonProps, ref?: any) => {\n  const { hoverProps, isHovered } = useHover();\n  const { pressableProps, isPressed } = useIsPressed();\n  const { focusProps, isFocused } = useFocus();\n  const { isFocusVisible, focusProps: focusRingProps }: any = useFocusRing();\n\n  const {\n    _icon,\n    onPressIn,\n    onPressOut,\n    onHoverIn,\n    onHoverOut,\n    onFocus,\n    onBlur,\n    ...resolvedProps\n  } = usePropsResolution('ModalCloseButton', props, {\n    isHovered,\n    isPressed,\n    isFocused,\n    isFocusVisible,\n  });\n  const { handleClose } = React.useContext(ModalContext);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Pressable\n      accessibilityRole=\"button\"\n      ref={ref}\n      onPressIn={composeEventHandlers(onPressIn, pressableProps.onPressIn)}\n      onPressOut={composeEventHandlers(onPressOut, pressableProps.onPressOut)}\n      // @ts-ignore - web only\n      onHoverIn={composeEventHandlers(onHoverIn, hoverProps.onHoverIn)}\n      // @ts-ignore - web only\n      onHoverOut={composeEventHandlers(onHoverOut, hoverProps.onHoverOut)}\n      // @ts-ignore - web only\n      onFocus={composeEventHandlers(\n        composeEventHandlers(onFocus, focusProps.onFocus),\n        focusRingProps.onFocus\n      )}\n      // @ts-ignore - web only\n      onBlur={composeEventHandlers(\n        composeEventHandlers(onBlur, focusProps.onBlur),\n        focusRingProps.onBlur\n      )}\n      onPress={handleClose}\n      {...resolvedProps}\n    >\n      <CloseIcon {..._icon} />\n    </Pressable>\n  );\n};\n\nexport default memo(forwardRef(ModalCloseButton));\n","import React, { memo, forwardRef } from 'react';\nimport Box, { IBoxProps } from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst ModalFooter = (props: IBoxProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('ModalFooter', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Box {...resolvedProps} ref={ref} />;\n};\n\nexport default memo(forwardRef(ModalFooter));\n","import React, { memo, forwardRef } from 'react';\nimport Box, { IBoxProps } from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst ModalHeader = (props: IBoxProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('ModalHeader', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Box {...resolvedProps} ref={ref} />;\n};\n\nexport default memo(forwardRef(ModalHeader));\n","import Modal from './Modal';\nimport ModalContent from './ModalContent';\nimport ModalBody from './ModalBody';\nimport ModalCloseButton from './ModalCloseButton';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport type { IModalComponentType } from './types';\n\nconst ModalTemp: any = Modal;\n\nModalTemp.Content = ModalContent;\nModalTemp.CloseButton = ModalCloseButton;\nModalTemp.Header = ModalHeader;\nModalTemp.Footer = ModalFooter;\nModalTemp.Body = ModalBody;\n\nconst ModalMain = ModalTemp as IModalComponentType;\n\nexport { ModalMain as Modal };\nexport type { IModalProps } from './types';\n","import React from 'react';\nimport PresenceTransition from '../Transitions/PresenceTransition';\nimport type { IFadeProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { usePropsResolution } from '../../../hooks/';\n\nconst Fade = ({ children, ...props }: IFadeProps, ref?: any) => {\n  const {\n    in: animationState,\n    entryDuration,\n    exitDuration,\n    ...resolvedProps\n  } = usePropsResolution('Fade', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  if (entryDuration) {\n    resolvedProps.animate.transition.duration = entryDuration;\n  }\n  if (exitDuration) {\n    resolvedProps.exit.transition.duration = exitDuration;\n  }\n\n  return (\n    <PresenceTransition visible={animationState} ref={ref} {...resolvedProps}>\n      {children}\n    </PresenceTransition>\n  );\n};\n\nexport default React.memo(React.forwardRef(Fade));\n","import React, { forwardRef, memo } from 'react';\nimport Box from '../../primitives/Box';\nimport type { ISlideProps } from './types';\nimport PresenceTransition from './PresenceTransition';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { Overlay } from '../../primitives/Overlay';\nimport { usePropsResolution } from '../../../hooks/';\n\nconst holderStyle: any = {\n  top: {\n    top: 0,\n    right: 0,\n    left: 0,\n  },\n  right: {\n    right: 0,\n    top: 0,\n    bottom: 0,\n  },\n  bottom: {\n    bottom: 0,\n    right: 0,\n    left: 0,\n  },\n  left: {\n    left: 0,\n    bottom: 0,\n    top: 0,\n  },\n};\n\nexport const Slide = memo(\n  forwardRef(({ children, ...props }: ISlideProps, ref: any) => {\n    const {\n      in: visible,\n      placement,\n      overlay,\n      duration,\n      _overlay,\n      ...resolvedProps\n    } = usePropsResolution('Slide', props);\n    const [containerOpacity, setContainerOpacity] = React.useState(0);\n    const [size, setSize] = React.useState(0);\n    const provideSize = (layoutSize: any) => {\n      if (placement === 'right' || placement === 'left')\n        setSize(layoutSize.width);\n      else setSize(layoutSize.height);\n      setContainerOpacity(1);\n    };\n\n    const transition = { duration };\n\n    const animationStyle: any = {\n      top: {\n        initial: {\n          translateY: -size,\n        },\n        animate: {\n          translateY: 0,\n          transition,\n        },\n      },\n      bottom: {\n        initial: {\n          translateY: size,\n        },\n        animate: {\n          translateY: 0,\n          transition,\n        },\n        exit: {\n          translateY: size,\n          transition,\n        },\n      },\n      left: {\n        initial: {\n          translateX: -size,\n        },\n        animate: {\n          translateX: 0,\n          transition,\n        },\n      },\n      right: {\n        initial: {\n          translateX: size,\n        },\n        animate: {\n          translateX: 0,\n          transition,\n        },\n      },\n    };\n\n    //TODO: refactor for responsive prop\n    if (useHasResponsiveProps(props)) {\n      return null;\n    }\n\n    const slideComponent = (\n      <PresenceTransition\n        visible={visible}\n        {...animationStyle[placement]}\n        style={[\n          { position: 'absolute' },\n          holderStyle[placement],\n          { height: '100%' },\n        ]}\n      >\n        <Box\n          {...resolvedProps}\n          opacity={containerOpacity}\n          ref={ref}\n          onLayout={(e) => provideSize(e.nativeEvent.layout)}\n        >\n          {children}\n        </Box>\n      </PresenceTransition>\n    );\n\n    if (overlay) {\n      return (\n        <>\n          <Overlay {..._overlay}>{slideComponent}</Overlay>\n        </>\n      );\n    } else {\n      return slideComponent;\n    }\n  })\n);\n\nexport default Slide;\n","import React from 'react';\nimport { createIcon } from '../createIcon';\nimport { Path } from '../nbSvg';\n\nexport const CloseIcon = createIcon({\n  viewBox: '0 0 24 24',\n  d:\n    'M12 9.77778L4.22222 2L2 4.22222L9.77778 12L2 19.7778L4.22222 22L12 14.2222L19.7778 22L22 19.7778L14.2222 12L22 4.22222L19.7778 2L12 9.77778Z',\n});\n\nexport const SmallCloseIcon = createIcon({\n  viewBox: '0 0 16 16',\n  path: (\n    <Path\n      d=\"M9.41 8l2.29-2.29c.19-.18.3-.43.3-.71a1.003 1.003 0 0 0-1.71-.71L8 6.59l-2.29-2.3a1.003 1.003 0 0 0-1.42 1.42L6.59 8 4.3 10.29c-.19.18-.3.43-.3.71a1.003 1.003 0 0 0 1.71.71L8 9.41l2.29 2.29c.18.19.43.3.71.3a1.003 1.003 0 0 0 .71-1.71L9.41 8z\"\n      fillRule=\"evenodd\"\n      fill=\"currentColor\"\n    />\n  ),\n});\n"],"names":["StyledScrollView","makeStyledComponent","RNScrollView","ScrollView","forwardRef","props","ref","usePropsResolution","_contentContainerStyle","contentContainerStyle","resolvedProps","resolved_ContentContainerStyle","useStyledSystemPropsResolver","useHasResponsiveProps","React","ModalContext","handleClose","contentSize","initialFocusRef","current","finalFocusRef","visible","Modal","children","isOpen","onClose","defaultIsOpen","avoidKeyboard","closeOnOverlayClick","isKeyboardDismissable","overlayVisible","backdropVisible","animationPreset","rest","bottomInset","useKeyboardBottomInset","_backdrop","_backdropFade","_fade","_slide","_overlay","useRNModal","useControllableState","value","defaultValue","onChange","val","setVisible","child","Box","bottom","undefined","pointerEvents","contextValue","Overlay","onRequestClose","useRNModalOnAndroid","Fade","in","style","StyleSheet","Backdrop","onPress","Slide","FocusScope","contain","autoFocus","restoreFocus","memo","ModalContent","finalRefVal","focus","onAccessibilityEscape","accessibilityRole","Platform","accessibilityViewIsModal","_web","focusable","ModalBody","_scrollview","ModalCloseButton","useHover","hoverProps","isHovered","useIsPressed","pressableProps","isPressed","useFocus","focusProps","isFocused","useFocusRing","isFocusVisible","focusRingProps","_icon","onPressIn","onPressOut","onHoverIn","onHoverOut","onFocus","onBlur","Pressable","composeEventHandlers","CloseIcon","ModalFooter","ModalHeader","ModalTemp","Content","CloseButton","Header","Footer","Body","ModalMain","animationState","entryDuration","exitDuration","animate","transition","duration","exit","PresenceTransition","holderStyle","top","right","left","placement","overlay","containerOpacity","setContainerOpacity","size","setSize","animationStyle","initial","translateY","translateX","slideComponent","position","height","opacity","onLayout","e","layoutSize","nativeEvent","layout","width","createIcon","viewBox","d","path","Path","fillRule","fill"],"sourceRoot":""}