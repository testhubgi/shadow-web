{"version":3,"file":"static/js/8946.f081e561.chunk.js","mappings":"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","sources":["pages/private/account/Chat.js","pages/private/account/PageHeader.js","../node_modules/native-base/lib/module/components/basic/FlatList/FlatList.tsx","../node_modules/native-base/lib/module/utils/accessibilityUtils.ts","../node_modules/native-base/lib/module/components/composites/FormControl/useFormControl.tsx","../node_modules/native-base/lib/module/utils/resolveStackStyleInput.ts","../node_modules/native-base/lib/module/components/primitives/Input/Input.tsx","../node_modules/native-base/lib/module/components/primitives/Input/index.tsx"],"sourcesContent":["import React, { useState, useCallback, useEffect, useRef } from \"react\";\r\nimport {\r\n  Center,\r\n  HStack,\r\n  Input,\r\n  VStack,\r\n  Pressable,\r\n  Text,\r\n  FlatList,\r\n} from \"native-base\";\r\nimport moment from \"moment-timezone\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport io from \"socket.io-client\";\r\nimport _ from \"lodash\";\r\n\r\nimport PageHeader from \"./PageHeader\";\r\nimport { vh, vw } from \"../../../util\";\r\nimport { CDN } from \"../../../constants/Config\";\r\ndelete global.created;\r\nconst LIMIT = 10;\r\n\r\nconst Chat = ({ profile }) => {\r\n  const fRef = useRef();\r\n  const iRef = useRef();\r\n  const [support, setSck] = useState(null);\r\n  const [msg, setMsg] = useState(\"\");\r\n  const [sent, setSent] = useState(0);\r\n  const [messages, setMessages] = useState([]);\r\n  const [isLoadingEarlier, setIsLoadingEarlier] = useState(false);\r\n  const [user] = useState({\r\n    _id: profile._id,\r\n    name: profile.firstname + \" \" + profile.lastname,\r\n    email: profile.email,\r\n    room: profile.email,\r\n    customer: true,\r\n    avatar:\r\n      profile && profile.pic\r\n        ? `${CDN}/users/${profile._id}/${\r\n            profile && profile.pic ? profile.pic.id : \"0\"\r\n          }`\r\n        : null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const connectSocket = async () => {\r\n      // const s1 = `${CHAT_SERVER}/live-cars`;\r\n      const s1 = `https://chat.shadow.properties`;\r\n      // const s1 = `ws://192.168.1.9:9001`;\r\n      const socket = io(s1, {\r\n        reconnection: true,\r\n        transports: [\"websocket\"],\r\n        allowUpgrades: false,\r\n        pingTimeout: 30000,\r\n      });\r\n\r\n      socket\r\n        .on(\"connect\", () => {\r\n          setMessages([]);\r\n          socket.emit(\"get:messages\", {\r\n            filter: { customer: profile._id },\r\n            skip: 0,\r\n            limit: LIMIT,\r\n          });\r\n          console.log(\"connected to support server\");\r\n          console.log(\"support server socket id:\", socket.id);\r\n        })\r\n        .on(\"reconnect\", async (attempts) => {\r\n          console.log(\"reconnected to support server\");\r\n        })\r\n        .on(\"disconnect\", async () => {\r\n          console.log(\"disconnected support server\");\r\n        })\r\n        .on(\"error\", (error) => {\r\n          console.log(\"support server error\", error);\r\n        });\r\n\r\n      setSck(socket);\r\n    };\r\n\r\n    connectSocket();\r\n\r\n    return () => {\r\n      if (support) {\r\n        support.disconnect();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (support) {\r\n      support\r\n        .on(\"pm\", (msg) => {\r\n          if (msg.nextagent) {\r\n            return;\r\n          }\r\n          setMessages((m) => [msg, ...m]);\r\n          setSent(!sent);\r\n        })\r\n        .on(\"messages\", (msg) => {\r\n          setIsLoadingEarlier(false);\r\n          if (msg && msg.length) {\r\n            setMessages((m) => [...m, ...msg]);\r\n          }\r\n          setSent(!sent);\r\n        })\r\n        .on(\"connect:next:agent\", (data) => {\r\n          support.emit(\"chat\", {\r\n            _id: uuidv4(),\r\n            createdAt: moment().utc().toISOString(),\r\n            text: data.text,\r\n            nextagent: data.switch ? false : true,\r\n            switch: data.switch ? data.switch : false,\r\n            user: {\r\n              _id: profile._id,\r\n              name: profile.firstname + \" \" + profile.lastname,\r\n              email: profile.email,\r\n              room: profile.email,\r\n              customer: true,\r\n            },\r\n          });\r\n        });\r\n    }\r\n    return () => {\r\n      if (support) {\r\n        support.off(\"chat\");\r\n        support.off(\"messages\");\r\n        setMessages([]);\r\n      }\r\n    };\r\n  }, [support]);\r\n\r\n  useEffect(() => {\r\n    if (msg === \"\" && iRef.current) {\r\n      iRef.current.focus();\r\n      iRef.current.value = \"\";\r\n      fRef.current.scrollToOffset({ animated: true, offset: 0 });\r\n    }\r\n  }, [msg]);\r\n\r\n  const send = (msg) => {\r\n    const m = {\r\n      _id: uuidv4(),\r\n      createdAt: moment().utc().toISOString(),\r\n      text: msg,\r\n      user: {\r\n        _id: profile._id,\r\n        name: profile.firstname + \" \" + profile.lastname,\r\n        email: profile.email,\r\n        room: profile.email,\r\n        customer: true,\r\n      },\r\n    };\r\n    support.emit(\"pm\", m);\r\n    // const em = messages;\r\n\r\n    setMsg(\"\");\r\n    // setMessages([m, ...messages]);\r\n  };\r\n\r\n  const _keyExtractor = useCallback((item) => item, []);\r\n  // const _getItemLayout = useCallback(\r\n  //   (data, index) => ({\r\n  //     length: 180,\r\n  //     offset: 180 * index,\r\n  //     index,\r\n  //   }),\r\n  //   []\r\n  // );\r\n\r\n  // const chats = messages.map((m) => {\r\n  //   if (global.d !== moment(m.createdAt).format(\"DDMMYYYY\")) {\r\n  //     global.d = moment(m.createdAt).format(\"DDMMYYYY\");\r\n  //     m.header = moment(m.createdAt).format(\"MMM DD, YYYY\");\r\n  //   }\r\n  //   return m;\r\n  // });\r\n\r\n  const chats = _.groupBy(messages, (m) =>\r\n    moment(m.createdAt).format(\"MMM DD, YYYY\")\r\n  );\r\n\r\n  return (\r\n    <VStack style={{ height: \"100vh\" }} flex={1}>\r\n      <PageHeader title={\"Chat Support\"} />\r\n      <VStack\r\n        style={{\r\n          boxShadow: \"0px 3px 10px #0000001A\",\r\n          borderRadius: 10,\r\n          backgroundColor: \"white\",\r\n          width: \"100%\" || vw(700),\r\n          paddingTop: vh(80),\r\n          // flex: 1,\r\n          height: \"69.9vh\",\r\n          marginBottom: vh(10),\r\n        }}\r\n      >\r\n        <FlatList\r\n          ListFooterComponent={\r\n            messages.length === 0 ? null : (\r\n              <Center marginTop={vh(-30)}>\r\n                <Pressable\r\n                  onPress={() => {\r\n                    support.emit(\"get:messages\", {\r\n                      filter: { customer: profile._id },\r\n                      skip: messages.length,\r\n                      limit: LIMIT,\r\n                    });\r\n                    setIsLoadingEarlier(true);\r\n                  }}\r\n                  style={{\r\n                    flex: 1,\r\n                    borderRadius: 50,\r\n                    width: vw(180),\r\n                    justifyContent: \"center\",\r\n                    paddingHorizontal: vw(10),\r\n                    paddingVertical: vh(5),\r\n                    backgroundColor: \"rgba(125, 43, 233, 0.2)\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"center\",\r\n                      fontFamily: \"Poppins_medium\",\r\n                      fontSize: vw(13),\r\n                      color: \"rgba(51, 33, 75, 1)\",\r\n                    }}\r\n                  >\r\n                    Load earlier messages\r\n                  </Text>\r\n                </Pressable>\r\n              </Center>\r\n            )\r\n          }\r\n          inverted\r\n          ref={fRef} // assign the flatlist's ref to your component's FlatListRef...\r\n          // onContentSizeChange={() =>\r\n          // fRef.current.scrollToOffset({ animated: true, offset: 0 })\r\n          // } // scroll it\r\n          contentContainerStyle={{ marginBottom: 40 }}\r\n          // getItemLayout={_getItemLayout}\r\n          style={{ bottom: vh(60), height: 300 }}\r\n          data={Object.keys(chats)}\r\n          keyExtractor={_keyExtractor}\r\n          renderItem={({ item, index }) => {\r\n            return (\r\n              <VStack>\r\n                <Center py={3}>\r\n                  <Text\r\n                    style={{\r\n                      fontSize: vw(13),\r\n                      fontFamily: \"Poppins\",\r\n                      color: \"rgba(0,0,0,0.5)\",\r\n                    }}\r\n                  >\r\n                    {item === moment().format(\"MMM DD, YYYY\") ? \"Today\" : item}\r\n                  </Text>\r\n                </Center>\r\n                {chats[item].reverse().map((message) => {\r\n                  const chatuser =\r\n                    message.user && message.user._id === profile._id;\r\n                  return (\r\n                    <HStack\r\n                      key={message._id}\r\n                      style={{\r\n                        justifyContent: chatuser ? \"flex-end\" : \"flex-start\",\r\n                      }}\r\n                    >\r\n                      <VStack\r\n                        style={{\r\n                          marginHorizontal: vw(15),\r\n                          marginVertical: vh(5),\r\n                          padding: vw(5),\r\n                          borderRadius: 8,\r\n                          borderTopLeftRadius: !chatuser ? 0 : 8,\r\n                          borderTopRightRadius: !chatuser ? 8 : 0,\r\n                          backgroundColor: !chatuser\r\n                            ? \"rgba(0,0,0, 0.05)\"\r\n                            : \"rgba(125, 43, 233, 0.8)\",\r\n\r\n                          // minWidth: vw(100),\r\n                          maxWidth: vw(400),\r\n                        }}\r\n                      >\r\n                        <Text\r\n                          style={{\r\n                            color: chatuser ? \"white\" : \"rgba(0,0,0,0.8)\",\r\n                            fontFamily: \"Poppins_medium\",\r\n                            fontSize: vw(13),\r\n                          }}\r\n                        >\r\n                          {message.text}\r\n                        </Text>\r\n                        <Text\r\n                          style={{\r\n                            fontFamily: \"Poppins\",\r\n                            fontSize: vw(11),\r\n                            color: chatuser ? \"white\" : \"rgba(0,0,0,0.8)\",\r\n                            textAlign: \"right\",\r\n                            marginTop: vh(-2),\r\n                          }}\r\n                        >\r\n                          {moment(message.createdAt).format(\"HH:mm a\")}\r\n                        </Text>\r\n                      </VStack>\r\n                    </HStack>\r\n                  );\r\n                })}\r\n              </VStack>\r\n            );\r\n          }}\r\n        />\r\n        <HStack\r\n          flex={1}\r\n          style={{\r\n            position: \"absolute\",\r\n            bottom: 2,\r\n            height: vh(50),\r\n            justifyContent: \"space-between\",\r\n            width: \"100%\",\r\n            borderTopColor: \"rgba(0,0,0,0.15)\",\r\n            borderTopWidth: vw(1.5),\r\n          }}\r\n        >\r\n          <Input\r\n            autoComplete='Off'\r\n            autoFocus\r\n            ref={iRef}\r\n            variant={\"unstyled\"}\r\n            width='full'\r\n            placeholder='Type something'\r\n            placeholderTextColor={\"rgba(145, 145, 145, 1)\"}\r\n            style={{\r\n              height: vh(40),\r\n              fontFamily: \"Poppins_medium\",\r\n              fontSize: vw(13),\r\n              color: \"rgba(0,0,0,0.8)\",\r\n            }}\r\n            onSubmitEditing={(v) => {\r\n              send(v.target.value);\r\n            }}\r\n            onChange={(e) => {\r\n              setMsg(e.target.value);\r\n            }}\r\n            InputRightElement={\r\n              <Pressable\r\n                onPress={() => {\r\n                  send(iRef.current.value);\r\n                }}\r\n                style={{ marginHorizontal: vw(15) }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    color: msg === \"\" ? \"rgba(145, 145, 145, 1)\" : \"#303030\",\r\n                    fontFamily: \"Poppins_medium\",\r\n                    fontSize: vw(15),\r\n                  }}\r\n                >\r\n                  Send\r\n                </Text>\r\n              </Pressable>\r\n            }\r\n          />\r\n        </HStack>\r\n      </VStack>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import React from \"react\";\r\nimport { HStack, VStack, Text } from \"native-base\";\r\nimport { vh, vw } from \"../../../util\";\r\n\r\nconst PageHeader = ({ title, subtitle, rightElement, noborder = false }) => {\r\n  let bottomBorder = {\r\n    borderBottomColor: \"rgba(0,0,0, 0.15)\",\r\n    borderBottomWidth: vw(1.5),\r\n    marginBottom: vh(20),\r\n  };\r\n  if (noborder) {\r\n    bottomBorder = {};\r\n  }\r\n  return (\r\n    <HStack\r\n      style={{ paddingBottom: vh(16), ...bottomBorder }}\r\n      justifyContent={\"space-between\"}\r\n    >\r\n      <VStack>\r\n        <Text\r\n          style={{\r\n            fontSize: vw(24),\r\n            color: \"#303030\",\r\n            fontFamily: \"Poppins_medium\",\r\n          }}\r\n        >\r\n          {title}\r\n        </Text>\r\n        <Text\r\n          style={{\r\n            fontSize: vw(13),\r\n            color: \"#666666\",\r\n            fontFamily: \"Poppins\",\r\n          }}\r\n        >\r\n          {subtitle}\r\n        </Text>\r\n      </VStack>\r\n      {rightElement}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import React, { forwardRef } from 'react';\nimport { FlatList as RNFlatList } from 'react-native';\nimport {\n  usePropsResolution,\n  useStyledSystemPropsResolver,\n} from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport type { IFlatListProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyledFlatList: any = makeStyledComponent(RNFlatList);\n\nconst FlatListComponent = <ItemT extends any>(\n  props: IFlatListProps<ItemT>,\n  ref: any\n) => {\n  const {\n    _contentContainerStyle,\n    contentContainerStyle,\n    ...resolvedProps\n  } = usePropsResolution('FlatList', props);\n  const resolved_ContentContainerStyle = useStyledSystemPropsResolver(\n    _contentContainerStyle || {}\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <StyledFlatList\n      {...resolvedProps}\n      contentContainerStyle={\n        contentContainerStyle || resolved_ContentContainerStyle\n      }\n      ref={ref}\n    />\n  );\n};\n\nexport const FlatList = forwardRef(FlatListComponent) as <ItemT>(\n  props: IFlatListProps<ItemT>,\n  ref: any\n) => any;\n","export const ariaAttr = (condition: boolean | undefined) =>\n  condition ? true : undefined;\n","import React from 'react';\nimport { useId } from '@react-native-aria/utils';\nimport omit from 'lodash.omit';\nimport type { IFormControlProps } from './types';\nimport { ariaAttr } from '../../../utils';\nimport { ResponsiveQueryContext } from '../../../utils/useResponsiveQuery/ResponsiveQueryProvider';\nimport { uniqueId } from 'lodash';\n\nexport type IFormControlContext = Omit<\n  ReturnType<typeof useFormControlProvider>,\n  'htmlProps'\n>;\n\nexport const FormControlContext = React.createContext({});\n\nexport function useFormControlProvider(props: IFormControlProps) {\n  const {\n    nativeID: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n\n  let id = uniqueId();\n  const responsiveQueryContext = React.useContext(ResponsiveQueryContext);\n  const disableCSSMediaQueries = responsiveQueryContext.disableCSSMediaQueries;\n\n  if (!disableCSSMediaQueries) {\n    // This if statement technically breaks the rules of hooks, but is safe\n    // because the condition never changes after mounting.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    id = useId();\n  }\n\n  // const id = '';\n  // Generate all the required ids\n  const nativeID = idProp || `field-${id}`;\n\n  const labelId = `${nativeID}-label`;\n  const feedbackId = `${nativeID}-feedback`;\n  const helpTextId = `${nativeID}-helptext`;\n\n  /**\n   * Track whether the `FormErrorMessage` has been rendered.\n   * We use this to append its id the the `aria-describedby` of the `input`.\n   */\n  const [hasFeedbackText, setHasFeedbackText] = React.useState(false);\n\n  /**\n   * Track whether the `FormHelperText` has been rendered.\n   * We use this to append its id the the `aria-describedby` of the `input`.\n   */\n  const [hasHelpText, setHasHelpText] = React.useState(false);\n\n  const context = {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    nativeID,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n  };\n\n  return context;\n}\n\n/**\n * React hook that provides the props that should be spread on to\n * input fields (`input`, `select`, `textarea`, etc.).\n *\n * It provides a convenient way to control a form fields, validation\n * and helper text.\n */\nexport function useFormControl(props: IFormControlProps) {\n  const field = useFormControlContext();\n  const describedBy: any[] = [];\n\n  // Error message must be described first in all scenarios.\n  if (field?.hasFeedbackText) describedBy.push(field?.feedbackId);\n  if (field?.hasHelpText) describedBy.push(field?.helpTextId);\n  const ariaDescribedBy = describedBy.join(' ');\n\n  const cleanProps = omit(props, [\n    'isInvalid',\n    'isDisabled',\n    'isReadOnly',\n    'isRequired',\n  ]);\n\n  return {\n    ...cleanProps,\n    nativeID: props.nativeID ?? field?.nativeID + '-input',\n    disabled: props.isDisabled || field?.isDisabled,\n    readOnly: props.isReadOnly || field?.isReadOnly,\n    required: props.isRequired || field?.isRequired,\n    accessibilityInvalid: ariaAttr(props.isInvalid || field?.isInvalid),\n    accessibilityRequired: ariaAttr(props.isRequired || field?.isRequired),\n    accessibilityReadOnly: ariaAttr(props.isReadOnly || field?.isReadOnly),\n    accessibilityDescribedBy: ariaDescribedBy || undefined,\n  };\n}\n\nexport const useFormControlContext = () => {\n  return (React.useContext(\n    FormControlContext\n  ) as unknown) as IFormControlContext;\n};\n","export const resolveStackStyleInput = (variant: any, color: any) => {\n  if (variant === 'underlined') {\n    return {\n      outlineWidth: '0',\n      boxShadow: `0 1px 0 0 ${color}`,\n    };\n  } else if (variant === 'unstyled') {\n    return {\n      outlineWidth: 0,\n    };\n  } else {\n    return {\n      outlineWidth: '0',\n      boxShadow: `0 0 0 1px ${color}`,\n    };\n  }\n};\n","import React, { memo, forwardRef } from 'react';\nimport type { IInputProps } from './types';\nimport { TextInput } from 'react-native';\nimport { useToken } from '../../../hooks';\nimport { useFormControl } from '../../composites/FormControl';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { useHover } from '@react-native-aria/interactions';\nimport { extractInObject, stylingProps } from '../../../theme/tools/utils';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { mergeRefs, resolveStackStyleInput } from '../../../utils';\nimport { Stack } from '../Stack';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { useResolvedFontFamily } from '../../../hooks/useResolvedFontFamily';\n\nconst StyledInput = makeStyledComponent(TextInput);\n\nconst Input = (\n  {\n    isHovered: isHoveredProp,\n    isFocused: isFocusedProp,\n    onKeyPress,\n    InputLeftElement,\n    InputRightElement,\n    leftElement,\n    rightElement,\n    ...props\n  }: IInputProps,\n  ref: any\n) => {\n  const inputProps = useFormControl({\n    isDisabled: props.isDisabled,\n    isInvalid: props.isInvalid,\n    isReadOnly: props.isReadOnly,\n    isRequired: props.isRequired,\n    nativeID: props.nativeID,\n  });\n  const [isFocused, setIsFocused] = React.useState(false);\n  const handleFocus = (focusState: boolean, callback: any) => {\n    setIsFocused(focusState);\n    callback();\n  };\n\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n\n  const inputThemeProps = {\n    isDisabled: inputProps.disabled,\n    isInvalid: inputProps.accessibilityInvalid,\n    isReadOnly: inputProps.accessibilityReadOnly,\n    isRequired: inputProps.required,\n  };\n\n  const {\n    ariaLabel,\n    accessibilityLabel,\n    type,\n    isFullWidth,\n    isDisabled,\n    isReadOnly,\n    fontFamily,\n    fontWeight,\n    fontStyle,\n    placeholderTextColor,\n    selectionColor,\n    underlineColorAndroid,\n    onFocus,\n    onBlur,\n    wrapperRef,\n    _stack,\n    _input,\n\n    ...resolvedProps\n  } = usePropsResolution(\n    'Input',\n    {\n      ...inputThemeProps,\n      ...props,\n    },\n    {\n      isDisabled: inputThemeProps.isDisabled,\n      isHovered: isHoveredProp || isHovered,\n      isFocused: isFocusedProp || isFocused,\n      isInvalid: inputThemeProps.isInvalid,\n      isReadOnly: inputThemeProps.isReadOnly,\n    }\n  );\n\n  const [layoutProps, nonLayoutProps] = extractInObject(resolvedProps, [\n    ...stylingProps.margin,\n    ...stylingProps.border,\n    ...stylingProps.layout,\n    ...stylingProps.flexbox,\n    ...stylingProps.position,\n    ...stylingProps.background,\n    'shadow',\n    'opacity',\n  ]);\n\n  const resolvedFontFamily = useResolvedFontFamily({\n    fontFamily,\n    fontWeight: fontWeight ?? 400,\n    fontStyle: fontStyle ?? 'normal',\n  });\n  const resolvedPlaceholderTextColor = useToken('colors', placeholderTextColor);\n  const resolvedSelectionColor = useToken('colors', selectionColor);\n  const resolvedUnderlineColorAndroid = useToken(\n    'colors',\n    underlineColorAndroid\n  );\n\n  /**Converting into Hash Color Code */\n  //@ts-ignore\n  resolvedProps.focusOutlineColor = useToken(\n    'colors',\n    resolvedProps.focusOutlineColor\n  );\n  //@ts-ignore\n  resolvedProps.invalidOutlineColor = useToken(\n    'colors',\n    resolvedProps.invalidOutlineColor\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  if (resolvedProps.focusOutlineColor && isFocused) {\n    layoutProps.borderColor = resolvedProps.focusOutlineColor;\n    _stack.style = resolveStackStyleInput(\n      props.variant,\n      resolvedProps.focusOutlineColor\n    );\n  }\n\n  if (resolvedProps.invalidOutlineColor && props.isInvalid) {\n    layoutProps.borderColor = resolvedProps.invalidOutlineColor;\n    _stack.style = resolveStackStyleInput(\n      props.variant,\n      resolvedProps.invalidOutlineColor\n    );\n  }\n\n  return (\n    <Stack\n      {..._stack}\n      {...layoutProps}\n      ref={mergeRefs([_ref, wrapperRef])}\n      isFocused={isFocused}\n    >\n      {InputLeftElement || leftElement ? InputLeftElement || leftElement : null}\n      <StyledInput\n        {...inputProps}\n        secureTextEntry={type === 'password'}\n        accessible\n        accessibilityLabel={ariaLabel || accessibilityLabel}\n        editable={isDisabled || isReadOnly ? false : true}\n        w={isFullWidth ? '100%' : undefined}\n        {...nonLayoutProps}\n        {...resolvedFontFamily}\n        placeholderTextColor={resolvedPlaceholderTextColor}\n        selectionColor={resolvedSelectionColor}\n        underlineColorAndroid={resolvedUnderlineColorAndroid}\n        onKeyPress={(e: any) => {\n          e.persist();\n          onKeyPress && onKeyPress(e);\n        }}\n        onFocus={(e: any) => {\n          handleFocus(true, onFocus ? () => onFocus(e) : () => {});\n        }}\n        onBlur={(e: any) => {\n          handleFocus(false, onBlur ? () => onBlur(e) : () => {});\n        }}\n        {..._input}\n        ref={mergeRefs([ref, _ref, wrapperRef])}\n      />\n      {InputRightElement || rightElement\n        ? InputRightElement || rightElement\n        : null}\n    </Stack>\n  );\n};\n\nexport default memo(forwardRef(Input));\n","export { InputGroup } from './InputGroup';\nexport { InputRightAddon, InputLeftAddon } from './InputAddons';\nexport type { IInputGroupProps, IInputProps } from './types';\n\nimport InputMain from './Input';\nimport type { IInputComponentType } from './types';\n\nconst InputTemp: any = InputMain;\n\n// To add typings\nconst Input = InputTemp as IInputComponentType;\n\nexport { Input };\n"],"names":["global","created","profile","fRef","useRef","iRef","useState","support","setSck","msg","setMsg","sent","setSent","messages","setMessages","setIsLoadingEarlier","_id","name","firstname","lastname","email","room","customer","avatar","pic","CDN","id","useEffect","connectSocket","socket","io","reconnection","transports","allowUpgrades","pingTimeout","on","emit","filter","skip","limit","console","log","attempts","error","disconnect","nextagent","m","length","data","uuidv4","createdAt","moment","utc","toISOString","text","switch","user","off","current","focus","value","scrollToOffset","animated","offset","send","_keyExtractor","useCallback","item","chats","_","format","style","height","flex","title","boxShadow","borderRadius","backgroundColor","width","paddingTop","vh","marginBottom","ListFooterComponent","marginTop","onPress","vw","justifyContent","paddingHorizontal","paddingVertical","textAlign","fontFamily","fontSize","color","inverted","ref","contentContainerStyle","bottom","Object","keys","keyExtractor","renderItem","index","py","reverse","map","message","chatuser","marginHorizontal","marginVertical","padding","borderTopLeftRadius","borderTopRightRadius","maxWidth","position","borderTopColor","borderTopWidth","autoComplete","autoFocus","variant","placeholder","placeholderTextColor","onSubmitEditing","v","target","onChange","e","InputRightElement","subtitle","rightElement","noborder","bottomBorder","borderBottomColor","borderBottomWidth","paddingBottom","StyledFlatList","makeStyledComponent","RNFlatList","FlatListComponent","props","usePropsResolution","_contentContainerStyle","resolvedProps","resolved_ContentContainerStyle","useStyledSystemPropsResolver","useHasResponsiveProps","React","FlatList","forwardRef","ariaAttr","condition","undefined","FormControlContext","useFormControlProvider","idProp","nativeID","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","uniqueId","ResponsiveQueryContext","disableCSSMediaQueries","useId","labelId","feedbackId","helpTextId","hasFeedbackText","setHasFeedbackText","hasHelpText","setHasHelpText","useFormControl","field","useFormControlContext","describedBy","push","ariaDescribedBy","join","cleanProps","omit","disabled","readOnly","required","accessibilityInvalid","accessibilityRequired","accessibilityReadOnly","accessibilityDescribedBy","resolveStackStyleInput","outlineWidth","StyledInput","TextInput","Input","isHoveredProp","isHovered","isFocusedProp","isFocused","onKeyPress","InputLeftElement","leftElement","inputProps","setIsFocused","handleFocus","focusState","callback","_ref","useHover","inputThemeProps","ariaLabel","accessibilityLabel","type","isFullWidth","fontWeight","fontStyle","selectionColor","underlineColorAndroid","onFocus","onBlur","wrapperRef","_stack","_input","extractInObject","stylingProps","layoutProps","nonLayoutProps","resolvedFontFamily","useResolvedFontFamily","resolvedPlaceholderTextColor","useToken","resolvedSelectionColor","resolvedUnderlineColorAndroid","focusOutlineColor","invalidOutlineColor","borderColor","Stack","mergeRefs","secureTextEntry","accessible","editable","w","persist","memo"],"sourceRoot":""}