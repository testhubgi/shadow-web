{"version":3,"file":"static/js/3171.7130a501.chunk.js","mappings":"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","sources":["components/ShadowPagination.js","components/svg/AcreIcon.js","components/svg/BathIcon.js","components/svg/BedIcon.js","components/svg/MoreIcon.js","components/svg/SqftIcon.js","context/index.js","pages/private/pipelines/AddPipeline.js","pages/private/pipelines/ContactMenu.js","pages/private/pipelines/ContactNotes.js","pages/private/pipelines/HorizontalItem.js","pages/private/pipelines/VerticalItem.js","pages/private/pipelines/AddContacts.js","pages/private/pipelines/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { HStack, Select, Center, Pressable, Text } from \"native-base\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { vh, vw } from \"../util\";\r\nimport PrevIcon from \"./svg/PrevIcon\";\r\nimport NextIcon from \"./svg/NextIcon\";\r\nimport Colors from \"../constants/Colors\";\r\nimport DropDownIcon from \"./svg/DropDownIcon\";\r\n\r\nconst ShadowPagination = ({\r\n  total = 1,\r\n  limit = 10,\r\n  setLimit,\r\n  setPage,\r\n  page,\r\n  setIsLoading,\r\n  style,\r\n  view = true,\r\n  \r\n}) => {\r\n  const pageCount = Math.ceil(total / limit);\r\n\r\n  const onPageChange = (p) => {\r\n    setPage(p.selected + 1);\r\n  };\r\n\r\n  const MyPaginate = styled(ReactPaginate).attrs({\r\n    activeClassName: \"active\", // default to \"disabled\"\r\n  })`\r\n    margin-bottom: 1rem;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-end;\r\n    list-style-type: none;\r\n    padding: 0 1rem;\r\n    li a {\r\n      border-radius: 4px;\r\n      padding: 0.1rem 1rem;\r\n      cursor: pointer;\r\n      color: rgba(102, 102, 102, 1);\r\n      font-family: \"Poppins_medium\";\r\n      font-size: ${vw(15)};\r\n    }\r\n    li.previous a,\r\n    li.next a,\r\n    li.break a {\r\n      border-color: transparent;\r\n      color: rgba(102, 102, 102, 1);\r\n      font-family: \"Poppins_medium\";\r\n      font-size: ${vw(15)};\r\n    }\r\n    li.active a {\r\n      background-color: #7d2be9;\r\n      border-color: transparent;\r\n      color: white;\r\n      min-width: 24px;\r\n      font-family: \"Poppins_medium\";\r\n      font-size: ${vw(15)};\r\n    }\r\n    li.disabled a {\r\n      color: rgba(102, 102, 102, 0.5);\r\n    }\r\n    li.disable,\r\n    li.disabled a {\r\n      cursor: default;\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <HStack\r\n      style={{\r\n        boxShadow: \"0px 0px 15px rgba(0, 0, 0, 0.1)\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        height: vh(60),\r\n        backgroundColor: \"white\", //\"rgba(247, 248, 250, 1)\",\r\n        ...style,\r\n      }}\r\n    >\r\n      {view ? (\r\n        <HStack style={{ alignItems: \"center\", paddingHorizontal: vh(20) }}>\r\n          <Text\r\n            style={{\r\n              fontFamily: \"Poppins_medium\",\r\n              fontSize: vw(15),\r\n              color: \"rgba(102, 102, 102, 1)\",\r\n              marginRight: vw(10),\r\n            }}\r\n          >\r\n            View\r\n          </Text>\r\n          <Select\r\n            outlineColor={\"rgba(0,0,0.0.15)\"}\r\n            outlineStyle={{\r\n              borderWidth: vh(2),\r\n            }}\r\n            variant='outline'\r\n            selectedValue={parseInt(limit)}\r\n            style={{\r\n              width: vw(50),\r\n            }}\r\n            onValueChange={(v) => {\r\n              setPage(1);\r\n              setLimit(v);\r\n            }}\r\n            dropdownIcon={<DropDownIcon />}\r\n          >\r\n            <Select.Item label={\"1\"} value={1} />\r\n            <Select.Item label={\"5\"} value={5} />\r\n            <Select.Item label={\"10\"} value={10} />\r\n            <Select.Item label={\"20\"} value={20} />\r\n            <Select.Item label={\"30\"} value={30} />\r\n            <Select.Item label={\"40\"} value={40} />\r\n            <Select.Item label={\"50\"} value={50} />\r\n            <Select.Item label={\"100\"} value={100} />\r\n          </Select>\r\n          <Text\r\n            style={{\r\n              fontFamily: \"Poppins_medium\",\r\n              fontSize: vw(15),\r\n              color: \"rgba(102, 102, 102, 1)\",\r\n              marginLeft: vw(10),\r\n            }}\r\n          >\r\n            per page\r\n          </Text>\r\n        </HStack>\r\n      ) : (\r\n        <HStack></HStack>\r\n      )}\r\n      <MyPaginate\r\n        breakLabel='...'\r\n        nextLabel='Next >'\r\n        onPageChange={onPageChange}\r\n        pageRangeDisplayed={3}\r\n        marginPagesDisplayed={2}\r\n        pageCount={pageCount}\r\n        previousLabel='< Previous'\r\n        renderOnZeroPageCount={null}\r\n        forcePage={page - 1}\r\n      />\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShadowPagination);\r\n","import * as React from \"react\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\nimport { vw, vh } from \"../../util\";\r\n\r\nconst AcreIcon = ({ fill }) => (\r\n  <Svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    viewBox='0 0 24 24'\r\n    width={vw(24)}\r\n    height={vh(24)}\r\n  >\r\n    <Path data-name='Rectangle 243' fill='none' d='M0 0h24v24H0z' />\r\n    <Path\r\n      d='M8.193 5.436h-.024c-.347 0-.645 0-.891.02a2 2 0 0 0-.766.195 1.969 1.969 0 0 0-.861.861 2 2 0 0 0-.195.766c-.02.246-.02.544-.02.891v.444c0 .346 0 .644.02.89a2 2 0 0 0 .195.766 1.967 1.967 0 0 0 .861.86 2 2 0 0 0 .766.195c.246.02.544.02.891.02h.444c.346 0 .644 0 .89-.02a2 2 0 0 0 .766-.195 1.965 1.965 0 0 0 .86-.86 2 2 0 0 0 .195-.766c.02-.246.02-.544.02-.89v-.444c0-.347 0-.645-.02-.891a2 2 0 0 0-.195-.766 1.967 1.967 0 0 0-.86-.861 2 2 0 0 0-.766-.195c-.246-.02-.544-.02-.89-.02h-.42ZM7.107 6.82a.761.761 0 0 1 .277-.051c.186-.015.43-.016.809-.016h.394c.378 0 .622 0 .808.016a.755.755 0 0 1 .277.056.659.659 0 0 1 .287.287.742.742 0 0 1 .056.277c.015.186.016.43.016.809v.394c0 .378 0 .622-.016.808a.737.737 0 0 1-.056.269.655.655 0 0 1-.29.29.737.737 0 0 1-.277.056c-.186.015-.43.016-.808.016h-.391c-.379 0-.623 0-.809-.016a.742.742 0 0 1-.277-.056.659.659 0 0 1-.287-.29.755.755 0 0 1-.051-.274c-.015-.186-.016-.43-.016-.808v-.394c0-.379 0-.623.016-.809a.761.761 0 0 1 .056-.277.663.663 0 0 1 .282-.287Zm8.306-1.384h-.025c-.346 0-.644 0-.89.02a2 2 0 0 0-.766.195 1.967 1.967 0 0 0-.86.861 2 2 0 0 0-.195.766c-.02.246-.02.544-.02.891v.444c0 .346 0 .644.02.89a2 2 0 0 0 .192.766 1.965 1.965 0 0 0 .86.86 2 2 0 0 0 .766.195c.246.02.544.02.89.02h.445c.346 0 .644 0 .89-.02a2 2 0 0 0 .766-.195 1.967 1.967 0 0 0 .861-.86 2 2 0 0 0 .195-.766c.02-.246.02-.544.02-.89v-.444c0-.346 0-.644-.02-.89a2 2 0 0 0-.195-.766 1.969 1.969 0 0 0-.861-.861 2 2 0 0 0-.766-.195c-.246-.02-.544-.02-.89-.02h-.42ZM14.327 6.82a.755.755 0 0 1 .278-.051c.186-.015.43-.016.808-.016h.394c.379 0 .623 0 .809.016a.761.761 0 0 1 .277.056.659.659 0 0 1 .287.287.761.761 0 0 1 .056.277c.015.186.016.43.016.809v.394c0 .378 0 .622-.016.808a.755.755 0 0 1-.056.277.655.655 0 0 1-.287.287.742.742 0 0 1-.277.056c-.186.015-.43.016-.809.016h-.394c-.378 0-.622 0-.808-.016a.737.737 0 0 1-.277-.056.655.655 0 0 1-.287-.287.737.737 0 0 1-.056-.277c-.016-.191-.016-.431-.016-.813v-.394c0-.379 0-.623.016-.809a.742.742 0 0 1 .056-.277.659.659 0 0 1 .286-.287Zm-6.158 5.836h.444c.346 0 .644 0 .89.02a2 2 0 0 1 .766.193 1.965 1.965 0 0 1 .86.86 2 2 0 0 1 .195.766c.02.246.02.544.02.89v.444c0 .346 0 .644-.02.89a2 2 0 0 1-.195.766 1.967 1.967 0 0 1-.86.861 2 2 0 0 1-.766.195c-.246.02-.544.02-.89.02h-.444c-.346 0-.644 0-.89-.02a2 2 0 0 1-.766-.195 1.969 1.969 0 0 1-.861-.861 2 2 0 0 1-.195-.766c-.02-.246-.02-.544-.02-.89v-.444c0-.346 0-.644.02-.89a2 2 0 0 1 .195-.766 1.967 1.967 0 0 1 .861-.86 2 2 0 0 1 .766-.195c.244-.018.542-.018.89-.018Zm-.784 1.329a.742.742 0 0 0-.277.056.659.659 0 0 0-.287.287.755.755 0 0 0-.052.277c-.015.186-.016.43-.016.808v.394c0 .379 0 .623.016.809a.761.761 0 0 0 .056.277.659.659 0 0 0 .287.287.761.761 0 0 0 .277.056c.186.015.43.016.809.016h.394c.378 0 .622 0 .808-.016a.755.755 0 0 0 .277-.056.655.655 0 0 0 .287-.287.742.742 0 0 0 .056-.277c.015-.186.016-.43.016-.809v-.394c0-.378 0-.622-.016-.808a.737.737 0 0 0-.056-.277.655.655 0 0 0-.287-.287.737.737 0 0 0-.277-.056c-.191-.016-.431-.016-.813-.016h-.394c-.379 0-.624 0-.809.016Zm8.029-1.329h-.025c-.346 0-.644 0-.89.02a2 2 0 0 0-.766.195 1.965 1.965 0 0 0-.86.86 2 2 0 0 0-.195.766c-.02.246-.02.544-.02.89v.444c0 .347 0 .645.02.891a2 2 0 0 0 .195.766 1.967 1.967 0 0 0 .86.861 2 2 0 0 0 .766.195c.246.02.544.02.89.02h.445c.346 0 .644 0 .89-.02a2 2 0 0 0 .766-.195 1.969 1.969 0 0 0 .861-.861 2 2 0 0 0 .195-.766c.02-.246.02-.544.02-.89v-.444c0-.346 0-.644-.02-.89a2 2 0 0 0-.195-.766 1.967 1.967 0 0 0-.861-.86 2 2 0 0 0-.766-.195c-.246-.02-.544-.02-.891-.02h-.419Zm-1.085 1.385a.737.737 0 0 1 .277-.056c.186-.015.43-.016.808-.016h.394c.379 0 .623 0 .809.016a.742.742 0 0 1 .277.056.655.655 0 0 1 .287.287.755.755 0 0 1 .056.277c.015.186.016.43.016.808v.394c0 .379 0 .623-.016.809a.761.761 0 0 1-.056.277.655.655 0 0 1-.287.287.761.761 0 0 1-.277.056c-.186.015-.43.016-.809.016h-.394c-.378 0-.622 0-.808-.016a.755.755 0 0 1-.277-.056.655.655 0 0 1-.287-.287.742.742 0 0 1-.056-.277c-.015-.186-.016-.43-.016-.809v-.394c0-.378 0-.622.016-.808a.737.737 0 0 1 .056-.277.655.655 0 0 1 .285-.287Z'\r\n      fill={fill || \"#919191\"}\r\n      fillRule='evenodd'\r\n    />\r\n  </Svg>\r\n);\r\n\r\nexport default AcreIcon;\r\n","import * as React from \"react\";\r\nimport Svg, { Path, G } from \"react-native-svg\";\r\n\r\nconst BathIcon = (props) => (\r\n  <Svg xmlns='http://www.w3.org/2000/svg' width={24} height={24} {...props}>\r\n    <Path data-name='Rectangle 243' fill='none' d='M0 0h24v24H0z' />\r\n    <G fill={props.fill || \"#919191\"}>\r\n      <Path\r\n        data-name='Path 10110'\r\n        d='m12.69 12.866-.79.79.788 1.576.776-.819-.774-1.548Z'\r\n      />\r\n      <Path\r\n        data-name='Path 10111'\r\n        d='m13.193 16.24.738 1.477.776-.819-.738-1.477-.776.819Z'\r\n      />\r\n      <Path\r\n        data-name='Path 10112'\r\n        d='m19.251 9.845-.766.808 1.471.7.766-.809-1.471-.7Z'\r\n      />\r\n      <Path\r\n        data-name='Path 10113'\r\n        d='m16.061 9.493 1.419.679.766-.809-1.39-.666-.794.794Z'\r\n      />\r\n      <Path\r\n        data-name='Path 10114'\r\n        d='m14.908 14.429.944 1.26.739-.781-.944-1.26-.739.781Z'\r\n      />\r\n      <Path\r\n        data-name='Path 10115'\r\n        d='m15.002 12.789-.958-1.278-.757.757.976 1.3.739-.781Z'\r\n      />\r\n      <Path\r\n        data-name='Path 10116'\r\n        d='m14.675 10.879 1.215.972.732-.772-1.195-.954-.751.754Z'\r\n      />\r\n      <Path\r\n        data-name='Path 10117'\r\n        d='m16.72 12.517 1.216.973.732-.772-1.216-.972-.732.772Z'\r\n      />\r\n      <Path\r\n        data-name='Path 10118'\r\n        d='m16.263 6.469-.869.869-.819-.817a3.7 3.7 0 0 0-5.228 0l-.033.034a2.582 2.582 0 0 0-4.069 2.109v7.982h1.06V8.664a1.523 1.523 0 0 1 2.386-1.253 3.7 3.7 0 0 0 .657 4.336l.819.819-.792.792.662.662 6.888-6.889Zm-5.421 5.273-.744-.744a2.637 2.637 0 1 1 3.728-3.73l.744.745Z'\r\n      />\r\n    </G>\r\n  </Svg>\r\n);\r\n\r\nexport default BathIcon;\r\n","import * as React from \"react\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\n\r\nconst BedIcon = (props) => (\r\n  <Svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    viewBox='0 0 24 24'\r\n    width={24}\r\n    height={24}\r\n    {...props}\r\n  >\r\n    <Path data-name='Rectangle 243' fill='none' d='M0 0h24v24H0z' />\r\n    <Path\r\n      d='M17.245 10.537V6.166h-1.333v1.333h-8V6.166H6.579v4.371a2.655 2.655 0 0 0-1.334 2.3v2.667a.667.667 0 0 0 .667.662h.667v2.667h1.333v-2.667h8v2.667h1.333v-2.667h.667a.667.667 0 0 0 .667-.667v-2.666a2.658 2.658 0 0 0-1.333-2.3Zm-1.333-1.704v1.333h-3.333V8.833Zm-8 0h3.333v1.333H7.912Zm9.333 6H6.579v-2A1.335 1.335 0 0 1 7.912 11.5h8a1.335 1.335 0 0 1 1.333 1.333Z'\r\n      fill={props.fill || \"#919191\"}\r\n    />\r\n  </Svg>\r\n);\r\n\r\nexport default BedIcon;\r\n","import * as React from \"react\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\n\r\nconst MoreIcon = ({ fill }) => (\r\n  <Svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    viewBox='0 0 24 24'\r\n    width={24}\r\n    height={24}\r\n  >\r\n    <Path data-name='Rectangle 275' fill='none' d='M0 0h24v24H0z' />\r\n    <Path\r\n      data-name='Path 10128'\r\n      d='M12 3.844a1.964 1.964 0 0 0-1.441.6 1.964 1.964 0 0 0-.6 1.441 1.964 1.964 0 0 0 .6 1.441A1.964 1.964 0 0 0 12 7.922a1.964 1.964 0 0 0 1.441-.6 1.964 1.964 0 0 0 .6-1.441 1.964 1.964 0 0 0-.6-1.441A1.964 1.964 0 0 0 12 3.844Zm0 6.117a1.964 1.964 0 0 0-1.441.6A1.964 1.964 0 0 0 9.961 12a1.964 1.964 0 0 0 .6 1.441 1.964 1.964 0 0 0 1.439.598 1.964 1.964 0 0 0 1.441-.6A1.964 1.964 0 0 0 14.039 12a1.964 1.964 0 0 0-.6-1.441A1.964 1.964 0 0 0 12 9.961Zm0 6.117a1.964 1.964 0 0 0-1.441.6 1.964 1.964 0 0 0-.6 1.441 1.964 1.964 0 0 0 .6 1.441 1.964 1.964 0 0 0 1.441.596 1.964 1.964 0 0 0 1.441-.6 1.964 1.964 0 0 0 .6-1.441 1.964 1.964 0 0 0-.6-1.441A1.964 1.964 0 0 0 12 16.078Z'\r\n      fill={fill || \"#a7a7a7\"}\r\n    />\r\n  </Svg>\r\n);\r\n\r\nexport default MoreIcon;\r\n","import * as React from \"react\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\n\r\nconst SqftIcon = (props) => (\r\n  <Svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    viewBox='0 0 24 24'\r\n    width={24}\r\n    height={24}\r\n    {...props}\r\n  >\r\n    <Path data-name='Rectangle 243' fill='none' d='M0 0h24v24H0z' />\r\n    <Path\r\n      data-name='Path 10126'\r\n      d='M6.169 6.569h2.912v2.912H6.169Zm0 8.75h2.912v2.912H6.169Zm8.75-8.75h2.912v2.912h-2.912Zm0 8.75h2.912v2.912h-2.912Zm-5.25-7.588h4.662V8.9H9.669Zm-2.338 2.338H8.5v4.662H7.331Zm8.169 0h1.169v4.662H15.5ZM9.669 15.9h4.662v1.169H9.669Z'\r\n      fill={props.fill || \"#919191\"}\r\n    />\r\n  </Svg>\r\n);\r\n\r\nexport default SqftIcon;\r\n","import React from 'react';\r\n\r\nconst SocketContext = React.createContext();\r\n\r\nexport default SocketContext;\r\n","import React, { useState } from \"react\";\r\nimport { Box, HStack, useBreakpointValue, VStack } from \"native-base\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport ShadowButton from \"../../../components/ShadowButton\";\r\nimport ShadowModal from \"../../../components/ShadowModal\";\r\nimport ShadowInput from \"../../../components/ShadowInput\";\r\nimport * as pipelineActions from \"../../../store/actions/pipelines\";\r\nimport { vh, vw } from \"../../../util\";\r\n\r\nconst AddPipeline = ({ setShowModal, showModal, _showAlert }) => {\r\n  const dispatch = useDispatch();\r\n  const [isSaving, setIsSaving] = useState(false);\r\n\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm({\r\n    mode: \"all\",\r\n  });\r\n\r\n  const onSubmit = async (data) => {\r\n    // const name = nameRef.current.value;\r\n\r\n    if (!data.name) {\r\n      _showAlert(\"error\", \"Pipeline name is required.\");\r\n      return;\r\n    }\r\n    setIsSaving(true);\r\n    try {\r\n      const action = pipelineActions.addPipeline(data, null);\r\n      await dispatch(action);\r\n      reset();\r\n      setIsSaving(false);\r\n      setShowModal(false);\r\n      _showAlert(\"success\", \"Pipeline created successfully.\");\r\n    } catch (err) {\r\n      console.log(err.message);\r\n      _showAlert(\"error\", \"An error occured, cannot create pipeline.\");\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ShadowModal\r\n      size='md'\r\n      height={vh(250)}\r\n      bodyHeight={vh(80)}\r\n      // width={vw(400)}\r\n      isOpen={showModal}\r\n      close={() => {\r\n        reset();\r\n        setShowModal(false);\r\n      }}\r\n      cancel={() => {\r\n        reset();\r\n        setShowModal(false);\r\n      }}\r\n      save={handleSubmit(onSubmit)}\r\n      header='Add Pipeline'\r\n      buttons={\r\n        <HStack space={2}>\r\n          <ShadowButton\r\n            space={2}\r\n            onPress={() => {\r\n              reset();\r\n              setShowModal(false);\r\n            }}\r\n            color='rgba(0,0,0, 0.5)'\r\n            variant='outline'\r\n            label='Cancel'\r\n            style={{ height: vh(36) }}\r\n          />\r\n          <ShadowButton\r\n          space={3}\r\n            isLoading={isSaving}\r\n            onPress={handleSubmit(onSubmit)}\r\n            color='white'\r\n            label='Save'\r\n            style={{ height: vh(36) }}\r\n          />\r\n        </HStack>\r\n      }\r\n    >\r\n      <VStack marginTop={vh(-20)}>\r\n        <ShadowInput\r\n          autoFocus={true}\r\n          style={{ width: \"100%\" }}\r\n          onKeyPress={(e) => {\r\n            if (e.key === \"Tab\" || e.key === \"Enter\") {\r\n              e.preventDefault();\r\n              setIsSaving(true);\r\n              handleSubmit(onSubmit, () => {\r\n                setIsSaving(false);\r\n              })();\r\n            }\r\n          }}\r\n          name='name'\r\n          label={\"Pipeline Name\"}\r\n          placeholder='Pipeline Name'\r\n          control={control}\r\n          rules={{\r\n            required: {\r\n              value: true,\r\n              message: \"Please enter pipeline name\",\r\n            },\r\n          }}\r\n          invalid={errors.name ? true : false}\r\n          error={errors.name ? errors.name.message : \"\"}\r\n          inputStyle={{}}\r\n        />\r\n      </VStack>\r\n    </ShadowModal>\r\n  );\r\n};\r\n\r\nexport default AddPipeline;\r\n","import React, { useState } from \"react\";\r\nimport { Menu, Text, Pressable } from \"native-base\";\r\n\r\nimport Colors from \"../../../constants/Colors\";\r\nimport { vw, vh } from \"../../../util\";\r\nimport MoreIcon from \"../../../components/svg/MoreIcon\";\r\n\r\nconst ContactMenu = ({ setIsAlertOpen, setShowMoveDialog }) => {\r\n  const [isHover, setIsHover] = useState(null);\r\n  return (\r\n    <Menu\r\n      backgroundColor={\"white\"}\r\n      placement='left top'\r\n      borderRadius={vw(10)}\r\n      borderWidth={0}\r\n      marginTop={vh(20)}\r\n      trigger={(triggerProps) => {\r\n        return (\r\n          <Pressable accessibilityLabel='More options menu' {...triggerProps}>\r\n            <MoreIcon />\r\n          </Pressable>\r\n        );\r\n      }}\r\n    >\r\n      <Menu.Item\r\n        background={\"none\"}\r\n        onHoverIn={() => {\r\n          setIsHover(\"move\");\r\n        }}\r\n        onHoverOut={() => {\r\n          setIsHover(null);\r\n        }}\r\n        // _pressed={{\r\n        //   borderWidth: 1,\r\n        //   borderColor: Colors.primary,\r\n        //   borderRadius: 50,\r\n        //   backgroundColor: \"white\",\r\n        // }}\r\n        borderWidth={1}\r\n        borderColor='transparent'\r\n        onPress={async (e) => {\r\n          e.preventDefault();\r\n          setShowMoveDialog(true);\r\n        }}\r\n      >\r\n        <Text\r\n          style={{\r\n            textAlign: \"left\",\r\n            fontFamily: \"Poppins\",\r\n            color: isHover === \"move\" ? Colors.primary : \"#686868\",\r\n            fontSize: vw(15),\r\n          }}\r\n        >\r\n          Move\r\n        </Text>\r\n      </Menu.Item>\r\n      <Menu.Item\r\n        background={\"none\"}\r\n        onHoverIn={() => {\r\n          setIsHover(\"delete\");\r\n        }}\r\n        onHoverOut={() => {\r\n          setIsHover(null);\r\n        }}\r\n        // _pressed={{\r\n        //   borderWidth: 1,\r\n        //   borderColor: Colors.primary,\r\n        //   borderRadius: 50,\r\n        //   backgroundColor: \"white\",\r\n        // }}\r\n        borderWidth={1}\r\n        borderColor='transparent'\r\n        onPress={(e) => {\r\n          e.preventDefault();\r\n          setIsAlertOpen(true);\r\n        }}\r\n      >\r\n        <Text\r\n          style={{\r\n            textAlign: \"left\",\r\n            fontFamily: \"Poppins\",\r\n            color: isHover === \"delete\" ? Colors.primary : \"#686868\",\r\n            fontSize: vw(15),\r\n          }}\r\n        >\r\n          Delete\r\n        </Text>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default ContactMenu;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Popover,\r\n  VStack,\r\n  Input,\r\n  Spinner,\r\n  Pressable,\r\n  ScrollView,\r\n  HStack,\r\n  Text,\r\n} from \"native-base\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport moment from \"moment-timezone\";\r\n\r\nimport { vw, vh } from \"../../../util\";\r\nimport NotesIcon from \"../../../components/svg/NotesIcon\";\r\nimport * as propertiesActions from \"../../../store/actions/properties\";\r\nimport Colors from \"../../../constants/Colors\";\r\n\r\nconst ContactNotes = ({ _id, notes, _showAlert }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const NoteForm = () => {\r\n    const [isFocused, setIsFocused] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [note, setNote] = useState();\r\n    const saveNote = async () => {\r\n      if (note === \"\") {\r\n        return;\r\n      }\r\n      setIsLoading(true);\r\n      const action = propertiesActions.savePropertyNote({\r\n        _id,\r\n        note,\r\n      });\r\n      try {\r\n        await dispatch(action);\r\n        setNote(\"\");\r\n        setIsLoading(false);\r\n      } catch (err) {\r\n        console.log(err);\r\n        _showAlert(\"error\", \"Error\", \"An error occurred cannot add note.\");\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    return (\r\n      <VStack w='100%'>\r\n        <Input\r\n          autoComplete='Off'\r\n          autoFocus={true}\r\n          variant={\"underlined\"}\r\n          value={note}\r\n          placeholder={\"Type your note and hit return\"}\r\n          placeholderTextColor={\"#9ca3af\"}\r\n          onSubmitEditing={(e) => {\r\n            saveNote();\r\n          }}\r\n          onBlur={() => setIsFocused(false)}\r\n          onFocus={() => setIsFocused(true)}\r\n          onChangeText={(txt) => {\r\n            setNote(txt);\r\n          }}\r\n          style={{\r\n            fontSize: vw(16),\r\n            fontFamily: \"Poppins\",\r\n            paddingVertical: vh(5),\r\n            marginLeft: 0,\r\n            textAlign: \"left\",\r\n            // borderWidth: 0,\r\n            // borderBottomWidth: 1,\r\n            // borderBottomColor: isFocused ? Colors.primary : \"#e5e7eb\",\r\n            width: \"100%\",\r\n          }}\r\n          selectionColor={Colors.primary}\r\n        />\r\n        {isLoading && (\r\n          <Spinner\r\n            top={vh(10)}\r\n            right={vw(10)}\r\n            position={\"absolute\"}\r\n            color={Colors.primary}\r\n            size={\"sm\"}\r\n          />\r\n        )}\r\n      </VStack>\r\n    );\r\n  };\r\n\r\n  const NoteItem = ({ item }) => {\r\n    return (\r\n      <VStack style={{ paddingVertical: 5 }}>\r\n        <Text\r\n          style={{\r\n            color: \"rgba(0,0,0,1)\",\r\n            fontSize: 14,\r\n            fontFamily: \"Poppins\",\r\n          }}\r\n        >\r\n          {item.note}\r\n        </Text>\r\n        <Text\r\n          style={{\r\n            color: \"rgba(0,0,0,0.5)\",\r\n            fontSize: 11,\r\n            fontFamily: \"Poppins\",\r\n          }}\r\n        >\r\n          {item.createdname +\r\n            \" - \" +\r\n            moment(item.created).format(\"MM/DD/YYYY - hh:mm A\")}\r\n        </Text>\r\n      </VStack>\r\n    );\r\n  };\r\n\r\n  const NoteList = ({ notes }) => {\r\n    return (\r\n      <ScrollView marginBottom={5} maxHeight={200}>\r\n        {notes &&\r\n          notes.length > 0 &&\r\n          notes.map((item, idx) => <NoteItem key={\"n-\" + idx} item={item} />)}\r\n      </ScrollView>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Popover\r\n      backgroundColor={\"white\"}\r\n      placement='left center'\r\n      trigger={(triggerProps) => {\r\n        return (\r\n          <Pressable {...triggerProps} width={\"100%\"}>\r\n            <HStack\r\n              justifyContent={\"flex-start\"}\r\n              width={\"100%\"}\r\n              space={0.5}\r\n              alignItems='left'\r\n              marginLeft={\"25%\"}\r\n              paddingTop={vh(20)}\r\n            >\r\n              <NotesIcon />\r\n              <Text\r\n                style={{\r\n                  fontFamily: \"Poppins_medium\",\r\n                  color: \"rgba(125, 43, 233, 1)\",\r\n                  fontSize: vw(14),\r\n                  marginTop: vh(1),\r\n                  textAlign: \"left\",\r\n                }}\r\n              >\r\n                {`Notes ${\r\n                  notes && notes.length > 0 ? \" (\" + notes.length + \")\" : \"\"\r\n                }`}\r\n              </Text>\r\n            </HStack>\r\n          </Pressable>\r\n        );\r\n      }}\r\n    >\r\n      <Popover.Content\r\n        style={{ backgroundColor: \"white\" }}\r\n        accessibilityLabel='Notes'\r\n      >\r\n        <Popover.Arrow />\r\n        <Popover.CloseButton />\r\n        <Popover.Header\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            borderBottomColor: \"white\",\r\n            borderBottomWidth: 0,\r\n          }}\r\n        >\r\n          Notes\r\n        </Popover.Header>\r\n        <Popover.Body\r\n          style={{ backgroundColor: \"white\", width: vh(300) }}\r\n          width={\"md\"}\r\n          flex={1}\r\n        >\r\n          <VStack space={2} style={{ height: vh(200), width: vh(280) }}>\r\n            <NoteForm />\r\n            <NoteList notes={notes} />\r\n          </VStack>\r\n        </Popover.Body>\r\n      </Popover.Content>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default ContactNotes;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  HStack,\r\n  VStack,\r\n  Text,\r\n  Select,\r\n  CheckIcon,\r\n  AlertDialog,\r\n  Modal,\r\n  Button,\r\n  Center,\r\n  Box,\r\n} from \"native-base\";\r\nimport moment from \"moment-timezone\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { vw, vh } from \"../../../util\";\r\nimport * as pipelineActions from \"../../../store/actions/pipelines\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport DropDownIcon from \"../../../components/svg/DropDownIcon\";\r\nimport ShadowButton from \"../../../components/ShadowButton\";\r\nimport ContactMenu from \"./ContactMenu\";\r\nimport ContactNotes from \"./ContactNotes\";\r\n\r\nconst HorizontalItem = ({\r\n  isEnd,\r\n  item,\r\n  pipelines,\r\n  activePipeline,\r\n  socket,\r\n  _showAlert,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const createdUser = item.createdUser && item.createdUser;\r\n  // user name\r\n  const fullname =\r\n    createdUser && createdUser.firstname + \" \" + createdUser.lastname;\r\n\r\n  //property owner name\r\n  const name = item.name && item.name !== \"\" ? item.name.trim() : \"-\";\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [propertyPipeline, setPropertyPipeline] = useState();\r\n  const [showMoveDialog, setShowMoveDialog] = useState(false);\r\n\r\n  const moveProperty = async (pipeline) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const action = pipelineActions.moveProperty(\r\n        {\r\n          from: activePipeline._id,\r\n          to: pipeline,\r\n          property: item._id,\r\n        },\r\n        null\r\n      );\r\n      const to = pipelines.find((p) => p._id === pipeline);\r\n\r\n      await dispatch(action);\r\n      setShowMoveDialog(false);\r\n      setIsLoading(false);\r\n      // console.log(\"Moved From\", global.ap.name, \"=>\", to.name);\r\n      _showAlert(\r\n        \"success\",\r\n        \"Contact moved from \" + activePipeline.name + \" to \" + to.name\r\n      );\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      console.log(\"Created Error\", err);\r\n      _showAlert(\"error\", \"Something went wrong.\");\r\n    }\r\n  };\r\n\r\n  const onAlertClose = () => setIsAlertOpen(false);\r\n\r\n  return (\r\n    <HStack\r\n      flex={1}\r\n      width={\"100%\"}\r\n      style={{\r\n        backgroundColor: \"rgba(251, 252, 254, 1)\",\r\n        paddingHorizontal: vw(20),\r\n        justifyContent: \"flex-start\",\r\n        borderBottomWidth: isEnd ? 0 : 1,\r\n        borderBottomColor: \"rgba(0, 0, 0, 0.15)\",\r\n      }}\r\n    >\r\n      <Text\r\n        style={{\r\n          fontSize: vw(15),\r\n          fontFamily: \"Poppins\",\r\n          paddingVertical: vh(20),\r\n          height: vh(60),\r\n          lineHeight: vh(20),\r\n          alignItems: \"center\",\r\n          color: Colors.primary,\r\n        }}\r\n        // flex={2}\r\n        flexWrap={\"wrap\"}\r\n        textAlign={\"left\"}\r\n        width={\"20%\"}\r\n      >\r\n        {name + \" (#\" + item.tid + \")\"}\r\n      </Text>\r\n      <Text\r\n        style={{\r\n          fontSize: vw(15),\r\n          fontFamily: \"Poppins\",\r\n          paddingVertical: vh(20),\r\n          lineHeight: vh(20),\r\n          height: vh(60),\r\n          alignItems: \"center\",\r\n        }}\r\n        // flex={2.5}\r\n        textAlign={\"left\"}\r\n        width={\"30%\"}\r\n      >\r\n        {item.propertyaddress}\r\n      </Text>\r\n      <Text\r\n        style={{\r\n          fontSize: vw(15),\r\n          fontFamily: \"Poppins\",\r\n          paddingVertical: vh(20),\r\n          lineHeight: vh(20),\r\n          height: vh(60),\r\n          alignItems: \"center\",\r\n        }}\r\n        // flex={2}\r\n        width={\"20%\"}\r\n        textAlign={\"center\"}\r\n      >\r\n        {fullname}\r\n      </Text>\r\n      <Text\r\n        style={{\r\n          fontSize: vw(15),\r\n          fontFamily: \"Poppins\",\r\n          paddingVertical: vh(20),\r\n          lineHeight: vh(20),\r\n          height: vh(60),\r\n          alignItems: \"center\",\r\n        }}\r\n        // flex={1.5}\r\n        width={\"20%\"}\r\n        textAlign={\"center\"}\r\n      >\r\n        {moment(item.created).format(\"MM/DD/YYYY - hh:mm A\")}\r\n      </Text>\r\n      <Box width={\"10%\"}>\r\n        <ContactNotes\r\n          _id={item._id}\r\n          notes={item.notes}\r\n          _showAlert={_showAlert}\r\n        />\r\n      </Box>\r\n\r\n      <Center width={\"10%\"}>\r\n        <ContactMenu\r\n          setIsAlertOpen={setIsAlertOpen}\r\n          setShowMoveDialog={setShowMoveDialog}\r\n        />\r\n      </Center>\r\n      {showMoveDialog && (\r\n        <Modal isOpen={showMoveDialog} onClose={() => setShowMoveDialog(false)}>\r\n          <Modal.Content\r\n            backgroundColor={\"white\"}\r\n            maxWidth='400px'\r\n            borderRadius={20}\r\n          >\r\n            <Modal.Header\r\n              borderBottomWidth={0}\r\n              backgroundColor='white'\r\n              _text={{ textAlign: \"center\", fontSize: 16 }}\r\n            >\r\n              Move Contact\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <VStack\r\n                style={{\r\n                  marginVertical: 9,\r\n                  marginHorizontal: 10,\r\n                  backgroundColor: \"white\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <VStack style={{ flexDirection: \"column\" }}>\r\n                  <Select\r\n                    borderWidth={1}\r\n                    borderColor={Colors.primary}\r\n                    p={2}\r\n                    fontSize={16}\r\n                    accessibilityLabel='Select pipeline'\r\n                    placeholder='Select pipeline'\r\n                    placeholderTextColor={\"coolGray.400\"}\r\n                    _actionSheetContent={{\r\n                      backgroundColor: \"white\",\r\n                    }}\r\n                    dropdownIcon={<DropDownIcon />}\r\n                    _selectedItem={{\r\n                      endIcon: (\r\n                        <CheckIcon\r\n                          marginLeft={80}\r\n                          color={Colors.primary}\r\n                          size='5'\r\n                        />\r\n                      ),\r\n                    }}\r\n                    selectedValue={propertyPipeline}\r\n                    onValueChange={(value) => {\r\n                      setPropertyPipeline(value);\r\n                    }}\r\n                  >\r\n                    {pipelines &&\r\n                      pipelines.length > 0 &&\r\n                      pipelines\r\n                        .filter((item) => item._id !== activePipeline._id)\r\n                        .map((item) => (\r\n                          <Select.Item\r\n                            key={\"s-\" + item._id}\r\n                            _pressed={{\r\n                              borderWidth: 1,\r\n                              borderColor: Colors.primary,\r\n                              backgroundColor: \"transparent\",\r\n                            }}\r\n                            borderWidth={1}\r\n                            borderColor='transparent'\r\n                            borderRadius={50}\r\n                            fontSize={16}\r\n                            label={item.name}\r\n                            value={item._id}\r\n                          />\r\n                        ))}\r\n                  </Select>\r\n                </VStack>\r\n              </VStack>\r\n            </Modal.Body>\r\n            <Modal.Footer backgroundColor={\"white\"}>\r\n              <Button.Group space={2}>\r\n                <ShadowButton\r\n                  space={2}\r\n                  variant='outline'\r\n                  color={Colors.primary}\r\n                  onPress={() => setShowMoveDialog(false)}\r\n                  label='Cancel'\r\n                />\r\n                <ShadowButton\r\n                  space={3}\r\n                  isLoading={isLoading}\r\n                  onPress={() => {\r\n                    moveProperty(propertyPipeline);\r\n                  }}\r\n                  label='Move'\r\n                />\r\n              </Button.Group>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n      )}\r\n      {isAlertOpen && (\r\n        <AlertDialog\r\n          // leastDestructiveRef={cancelRef}\r\n          isOpen={isAlertOpen}\r\n          onClose={onAlertClose}\r\n        >\r\n          <AlertDialog.Content borderRadius={20}>\r\n            <AlertDialog.Header\r\n              borderBottomWidth={0}\r\n              backgroundColor='white'\r\n              _text={{ textAlign: \"center\", fontSize: 16 }}\r\n            >\r\n              {\"Delete Contact\"}\r\n            </AlertDialog.Header>\r\n            <AlertDialog.Body\r\n              backgroundColor={\"white\"}\r\n              _text={{ fontSize: 16, color: \"#000000\" }}\r\n            >\r\n              {\"Are you sure you want to remove this contact from \" +\r\n                activePipeline.name +\r\n                \"?\"}\r\n            </AlertDialog.Body>\r\n            <AlertDialog.Footer backgroundColor={\"white\"}>\r\n              <HStack space={2}>\r\n                <ShadowButton\r\n                  space={2}\r\n                  onPress={onAlertClose}\r\n                  label='Cancel'\r\n                  variant='outline'\r\n                  color={Colors.primary}\r\n                />\r\n                <ShadowButton\r\n                  space={2}\r\n                  isLoading={isLoading}\r\n                  onPress={async () => {\r\n                    try {\r\n                      setIsLoading(true);\r\n                      const data = {\r\n                        property: item._id,\r\n                        _id: activePipeline._id,\r\n                      };\r\n                      const action = pipelineActions.deleteProperty(\r\n                        data,\r\n                        socket\r\n                      );\r\n                      await dispatch(action);\r\n                      setIsLoading(false);\r\n                      _showAlert(\r\n                        \"success\",\r\n                        \"Contact deleted from pipeline \" +\r\n                          activePipeline.name +\r\n                          \" successfully.\"\r\n                      );\r\n                      onAlertClose();\r\n                    } catch (err) {\r\n                      console.log(err.message);\r\n                      setIsLoading(false);\r\n                      _showAlert(\r\n                        \"error\",\r\n\r\n                        \"An error occured, cannot delete contact.\"\r\n                      );\r\n                    }\r\n                  }}\r\n                  label='Delete'\r\n                />\r\n              </HStack>\r\n            </AlertDialog.Footer>\r\n          </AlertDialog.Content>\r\n        </AlertDialog>\r\n      )}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default HorizontalItem;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  HStack,\r\n  VStack,\r\n  Text,\r\n  Center,\r\n  Select,\r\n  CheckIcon,\r\n  AlertDialog,\r\n  Modal,\r\n  Button,\r\n} from \"native-base\";\r\nimport moment from \"moment-timezone\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { vh, vw } from \"../../../util\";\r\nimport * as pipelineActions from \"../../../store/actions/pipelines\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport DropDownIcon from \"../../../components/svg/DropDownIcon\";\r\nimport ShadowButton from \"../../../components/ShadowButton\";\r\nimport SqftIcon from \"../../../components/svg/SqftIcon\";\r\nimport AcreIcon from \"../../../components/svg/AcreIcon\";\r\nimport BathIcon from \"../../../components/svg/BathIcon\";\r\nimport BedIcon from \"../../../components/svg/BedIcon\";\r\nimport ContactMenu from \"./ContactMenu\";\r\nimport ContactNotes from \"./ContactNotes\";\r\n\r\nconst VerticalItem = ({\r\n  item,\r\n  pipelines,\r\n  activePipeline,\r\n  socket,\r\n  _showAlert,\r\n  cols,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n \r\n  const createdUser = item.createdUser && item.createdUser;\r\n  // user name\r\n  const fullname =\r\n    createdUser && createdUser.firstname + \" \" + createdUser.lastname;\r\n  //avatar fall back\r\n  \r\n  let sqft = \"-\";\r\n  let acre = \"-\";\r\n  if (item.sqft) {\r\n    sqft = item.sqft !== null ? item.sqft.toString() : \"-\";\r\n  }\r\n\r\n  if (item.acre) {\r\n    acre = item.acre !== null ? item.acre.toString() : \"-\";\r\n  }\r\n  //property owner name\r\n  const name = item.name && item.name !== \"\" ? item.name.trim() : \"-\";\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [propertyPipeline, setPropertyPipeline] = useState();\r\n  const [showMoveDialog, setShowMoveDialog] = useState(false);\r\n\r\n  const moveProperty = async (pipeline) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const action = pipelineActions.moveProperty(\r\n        {\r\n          from: activePipeline._id,\r\n          to: pipeline,\r\n          property: item._id,\r\n        },\r\n        null\r\n      );\r\n      const to = pipelines.find((p) => p._id === pipeline);\r\n\r\n      await dispatch(action);\r\n      setShowMoveDialog(false);\r\n      setIsLoading(false);\r\n      // console.log(\"Moved From\", global.ap.name, \"=>\", to.name);\r\n      _showAlert(\r\n        \"success\",\r\n        \"Contact moved from \" + activePipeline.name + \" to \" + to.name\r\n      );\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      console.log(\"Created Error\", err);\r\n      _showAlert(\"error\", \"Something went wrong.\");\r\n    }\r\n  };\r\n\r\n  const onAlertClose = () => setIsAlertOpen(false);\r\n\r\n  return (\r\n    <VStack\r\n      style={{\r\n        width: vw((window.screen.width - cols * 40) / cols),\r\n        // flex: 1,\r\n        borderRadius: vw(10),\r\n        backgroundColor: \"white\",\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n          width: 0,\r\n          height: vh(3),\r\n        },\r\n        shadowOpacity: 0.15,\r\n        shadowRadius: vh(10),\r\n        elevation: vh(5),\r\n        marginHorizontal: vh(20),\r\n        marginVertical: vh(20),\r\n        padding: vw(20),\r\n      }}\r\n    >\r\n      <HStack flex={1} justifyContent={\"space-between\"}>\r\n        <Text\r\n          style={{\r\n            fontFamily: \"Poppins_medium\",\r\n            color: \"rgba(125, 43, 233, 1)\",\r\n            fontSize: vw(15),\r\n          }}\r\n        >\r\n          {name + \" (#\" + item.tid + \")\"}\r\n        </Text>\r\n        <ContactMenu\r\n          setIsAlertOpen={setIsAlertOpen}\r\n          setShowMoveDialog={setShowMoveDialog}\r\n        />\r\n      </HStack>\r\n      <Text\r\n        style={{\r\n          flex: 1,\r\n          marginTop: vh(8),\r\n          fontFamily: \"Poppins_medium\",\r\n          color: \"rgba(104, 104, 104, 1)\",\r\n          fontSize: vw(14),\r\n          // paddingBottom: vh(12),\r\n          // borderBottomWidth: vw(1),\r\n          // borderBottomColor: \"rgba(210, 210, 210, 1)\",\r\n        }}\r\n      >\r\n        {item.propertyaddress}\r\n      </Text>\r\n      <HStack\r\n        style={{\r\n          justifyContent: \"space-between\",\r\n          borderTopWidth: vh(2),\r\n          borderTopColor: \"rgba(0, 0, 0, 0.15)\",\r\n          borderBottomWidth: vh(2),\r\n          borderBottomColor: \"rgba(0, 0, 0, 0.15)\",\r\n          alignItems: \"center\",\r\n          height: vh(39),\r\n          marginTop: vh(20),\r\n        }}\r\n      >\r\n        {/*Sqft*/}\r\n        <HStack style={{ marginRight: vw(14), alignItems: \"center\" }}>\r\n          <SqftIcon width={vw(24)} height={vh(24)} />\r\n          <Text\r\n            style={{\r\n              color: \"#919191\",\r\n              fontFamily: \"Poppins_medium\",\r\n              fontSize: vw(13),\r\n              marginTop: vh(1),\r\n            }}\r\n          >\r\n            {sqft}\r\n          </Text>\r\n        </HStack>\r\n        {/*Acre*/}\r\n        <HStack style={{ marginHorizontal: vw(14), alignItems: \"center\" }}>\r\n          <AcreIcon width={vw(24)} height={vh(24)} />\r\n          <Text\r\n            style={{\r\n              color: \"#919191\",\r\n              fontFamily: \"Poppins_medium\",\r\n              fontSize: vw(13),\r\n              marginTop: vh(1),\r\n            }}\r\n          >\r\n            {acre}\r\n          </Text>\r\n        </HStack>\r\n        {/*Bed*/}\r\n        <HStack style={{ marginHorizontal: vw(14), alignItems: \"center\" }}>\r\n          <BedIcon width={vw(24)} height={vh(24)} />\r\n          <Text\r\n            style={{\r\n              color: \"#919191\",\r\n              fontFamily: \"Poppins_medium\",\r\n              fontSize: vw(13),\r\n              marginTop: vh(1),\r\n            }}\r\n          >\r\n            {item.bed}\r\n          </Text>\r\n        </HStack>\r\n        {/*Bath*/}\r\n        <HStack style={{ marginHorizontal: vw(7), alignItems: \"center\" }}>\r\n          <BathIcon width={vw(24)} height={vh(24)} />\r\n          <Text\r\n            style={{\r\n              color: \"#919191\",\r\n              fontFamily: \"Poppins_medium\",\r\n              fontSize: vw(13),\r\n              marginTop: vh(1),\r\n            }}\r\n          >\r\n            {item.bath}\r\n          </Text>\r\n        </HStack>\r\n      </HStack>\r\n\r\n      <HStack marginTop={vh(16)} justifyContent={\"space-between\"}>\r\n        <Text\r\n          style={{\r\n            fontFamily: \"Poppins_medium\",\r\n            color: \"rgba(167, 167, 167, 1)\",\r\n            fontSize: vw(14),\r\n          }}\r\n        >\r\n          {fullname}\r\n        </Text>\r\n        <HStack marginRight={vw(20)} justifyContent={\"space-between\"}>\r\n          <Text\r\n            style={{\r\n              fontFamily: \"Poppins_medium\",\r\n              color: \"rgba(167, 167, 167, 1)\",\r\n              fontSize: vw(14),\r\n              marginRight: vw(10),\r\n            }}\r\n          >\r\n            {moment(item.created).format(\"MM/DD/YYYY - hh:mm A\")}\r\n          </Text>\r\n          <Center marginTop={vh(-20)}>\r\n            <ContactNotes\r\n              _id={item._id}\r\n              notes={item.notes}\r\n              _showAlert={_showAlert}\r\n            />\r\n          </Center>\r\n        </HStack>\r\n      </HStack>\r\n\r\n      {showMoveDialog && (\r\n        <Modal isOpen={showMoveDialog} onClose={() => setShowMoveDialog(false)}>\r\n          <Modal.Content\r\n            backgroundColor={\"white\"}\r\n            maxWidth='400px'\r\n            borderRadius={20}\r\n          >\r\n            <Modal.Header\r\n              borderBottomWidth={0}\r\n              backgroundColor='white'\r\n              _text={{ textAlign: \"center\", fontSize: 16 }}\r\n            >\r\n              Move Contact\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <VStack\r\n                style={{\r\n                  marginVertical: 9,\r\n                  marginHorizontal: 10,\r\n                  backgroundColor: \"white\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <VStack style={{ flexDirection: \"column\" }}>\r\n                  <Select\r\n                    borderWidth={1}\r\n                    borderColor={Colors.primary}\r\n                    p={2}\r\n                    fontSize={16}\r\n                    accessibilityLabel='Select pipeline'\r\n                    placeholder='Select pipeline'\r\n                    placeholderTextColor={\"coolGray.400\"}\r\n                    _actionSheetContent={{\r\n                      backgroundColor: \"white\",\r\n                    }}\r\n                    dropdownIcon={<DropDownIcon />}\r\n                    _selectedItem={{\r\n                      endIcon: (\r\n                        <CheckIcon\r\n                          marginLeft={80}\r\n                          color={Colors.primary}\r\n                          size='5'\r\n                        />\r\n                      ),\r\n                    }}\r\n                    selectedValue={propertyPipeline}\r\n                    onValueChange={(value) => {\r\n                      setPropertyPipeline(value);\r\n                    }}\r\n                  >\r\n                    {pipelines.length > 0 &&\r\n                      pipelines\r\n                        .filter((item) => item._id !== activePipeline._id)\r\n                        .map((item) => (\r\n                          <Select.Item\r\n                            _pressed={{\r\n                              borderWidth: 1,\r\n                              borderColor: Colors.primary,\r\n                              backgroundColor: \"transparent\",\r\n                            }}\r\n                            borderWidth={1}\r\n                            borderColor='transparent'\r\n                            borderRadius={50}\r\n                            fontSize={16}\r\n                            key={item._id}\r\n                            label={item.name}\r\n                            value={item._id}\r\n                          />\r\n                        ))}\r\n                  </Select>\r\n                </VStack>\r\n              </VStack>\r\n            </Modal.Body>\r\n            <Modal.Footer backgroundColor={\"white\"}>\r\n              <Button.Group space={2}>\r\n                <ShadowButton\r\n                  onPress={() => setShowMoveDialog(false)}\r\n                  label='Cancel'\r\n                  variant='outline'\r\n                  color={Colors.primary}\r\n                />\r\n                <ShadowButton\r\n                  isLoading={isLoading}\r\n                  onPress={() => {\r\n                    moveProperty(propertyPipeline);\r\n                  }}\r\n                  label='Move'\r\n                />\r\n              </Button.Group>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n      )}\r\n      {isAlertOpen && (\r\n        <AlertDialog\r\n          // leastDestructiveRef={cancelRef}\r\n          isOpen={isAlertOpen}\r\n          onClose={onAlertClose}\r\n        >\r\n          <AlertDialog.Content borderRadius={20}>\r\n            <AlertDialog.Header\r\n              borderBottomWidth={0}\r\n              backgroundColor='white'\r\n              _text={{ textAlign: \"center\", fontSize: 16 }}\r\n            >\r\n              {\"Delete Contact\"}\r\n            </AlertDialog.Header>\r\n            <AlertDialog.Body\r\n              backgroundColor={\"white\"}\r\n              _text={{ fontSize: 16, color: \"#000000\" }}\r\n            >\r\n              {\"Are you sure you want to remove this contact from \" +\r\n                activePipeline.name +\r\n                \"?\"}\r\n            </AlertDialog.Body>\r\n            <AlertDialog.Footer\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                borderTopWidth: 0,\r\n              }}\r\n            >\r\n              <HStack space={2}>\r\n                <ShadowButton\r\n                  space={2}\r\n                  // ref={cancelRef}\r\n                  onPress={onAlertClose}\r\n                  label='Cancel'\r\n                  variant='outline'\r\n                  color={Colors.primary}\r\n                />\r\n                <ShadowButton\r\n                  space={4}\r\n                  isLoading={isLoading}\r\n                  onPress={async () => {\r\n                    try {\r\n                      setIsLoading(true);\r\n                      const data = {\r\n                        property: item._id,\r\n                        _id: activePipeline._id,\r\n                      };\r\n                      const action = pipelineActions.deleteProperty(\r\n                        data,\r\n                        socket\r\n                      );\r\n                      await dispatch(action);\r\n                      setIsLoading(false);\r\n                      _showAlert(\r\n                        \"success\",\r\n                        \"Contact deleted from pipeline \" +\r\n                          activePipeline.name +\r\n                          \" successfully.\"\r\n                      );\r\n                      onAlertClose();\r\n                    } catch (err) {\r\n                      console.log(err.message);\r\n                      setIsLoading(false);\r\n                      _showAlert(\r\n                        \"error\",\r\n                        \"An error occured, cannot delete contact.\"\r\n                      );\r\n                    }\r\n                  }}\r\n                  label='Delete'\r\n                />\r\n              </HStack>\r\n            </AlertDialog.Footer>\r\n          </AlertDialog.Content>\r\n        </AlertDialog>\r\n      )}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default VerticalItem;\r\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  Center,\r\n  Spinner,\r\n  Pressable,\r\n  FlatList,\r\n  View,\r\n  Checkbox,\r\n  Input,\r\n} from \"native-base\";\r\n\r\nimport * as events from \"../../../store/events\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport { API_URL } from \"../../../constants/Config\";\r\nimport ShadowPagination from \"../../../components/ShadowPagination\";\r\nimport { vh, vw } from \"../../../util\";\r\nimport SearchIcon from \"../../../components/svg/SearchIcon\";\r\nimport CloseIcon from \"../../../components/svg/CloseIcon\";\r\n\r\nconst getUser = () => {\r\n  if (localStorage.getItem(\"@shadowuser\") !== null) {\r\n    const user = JSON.parse(localStorage.getItem(\"@shadowuser\"));\r\n    return user;\r\n  }\r\n};\r\n\r\nconst AddContacts = ({ pipeline, pipelines, _showAlert, dispatch }) => {\r\n  const sRef = useRef();\r\n  const cRef = useRef();\r\n  const [page, setPage] = useState(1);\r\n  const [total, setTotal] = useState(0);\r\n  const [limit, setLimit] = useState(50);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [reload, setReload] = useState(false);\r\n  const [pIsSav] = useState({});\r\n  const [search, setSearch] = useState(\"\");\r\n  const [properties, setProperties] = useState([]);\r\n\r\n  const _getData = useCallback(async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const filter = {\r\n        // fromdate: moment(fromDate).format(\"YYYY-MM-DD\"),\r\n        // todata: moment(toDate).format(\"YYYY-MM-DD\"),\r\n        inPipeline: pipeline,\r\n        ninPipelines: pipelines,\r\n      };\r\n\r\n      const { token } = getUser();\r\n\r\n      const response = await fetch(`${API_URL}/properties/get`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n        body: JSON.stringify({\r\n          skip: page === 1 ? 0 : (page - 1) * limit,\r\n          limit,\r\n          search,\r\n          filter,\r\n          fields: {\r\n            _id: 1,\r\n            name: 1,\r\n            owneraddress: 1,\r\n            tid: 1,\r\n            \"createdUser._id\": 1,\r\n            \"createdUser.firstname\": 1,\r\n            \"createdUser.lastname\": 1,\r\n            propertyaddress: 1,\r\n            notes: 1,\r\n            created: 1,\r\n            pipelines: 1,\r\n          },\r\n          sort: { tid: -1 },\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errData = await response.json();\r\n        console.log(errData);\r\n        let message = \"Something went wrong!\";\r\n        if (errData.error) {\r\n          message = errData.error;\r\n        } else {\r\n          throw new Error(message);\r\n        }\r\n      } else {\r\n        const resData = await response.json();\r\n\r\n        if (resData.data && resData.data.length > 0) {\r\n          setTotal(resData.count);\r\n          setProperties([...resData.data]);\r\n        }\r\n      }\r\n\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n      setIsLoading(false);\r\n      _showAlert(\"error\", err.message);\r\n    }\r\n  }, [limit, page, search, _showAlert, pipeline, pipelines]);\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    if (!unmounted) {\r\n      _getData();\r\n    }\r\n    return () => {\r\n      unmounted = false;\r\n    };\r\n  }, [page, search, _getData]);\r\n\r\n  const NoItemsFound = () => {\r\n    return (\r\n      <Center style={{ minHeight: vh(300) }}>\r\n        <Text>No Contacts found!</Text>\r\n      </Center>\r\n    );\r\n  };\r\n\r\n  const RenderItem = ({ item, pipeline }) => {\r\n    const pipelineRef = useRef(item.pipelines && item.pipelines.length > 0);\r\n    const [inPipeline, setInPipeline] = useState(\r\n      item.pipelines && item.pipelines.length > 0\r\n    );\r\n    const createdUser = item.createdUser;\r\n    const saveProperty = async (p, del = false) => {\r\n      try {\r\n        if (p._id) {\r\n          if (!del) {\r\n            const data = {\r\n              property: p._id,\r\n              pipeline,\r\n              data: {\r\n                _id: p._id,\r\n                created: p.created,\r\n                createdUser: {\r\n                  _id: p.createdUser._id,\r\n                  firstname: p.createdUser.firstname,\r\n                  lastname: p.createdUser.lastname,\r\n                },\r\n                name: p.name,\r\n                notes: p.notes,\r\n                propertyaddress: p.propertyaddress,\r\n                tid: p.tid,\r\n              },\r\n            };\r\n            dispatch({ type: events.ADD_PIPELINE_PROPERTY_SAGA, data });\r\n            pipelineRef.current = true;\r\n            setInPipeline(true);\r\n          } else {\r\n            const data = {\r\n              property: p._id,\r\n              pipeline,\r\n            };\r\n            dispatch({\r\n              type: events.REMOVE_PIPELINE_PROPERTY_SAGA,\r\n              data,\r\n            });\r\n            pipelineRef.current = false;\r\n            setInPipeline(false);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.log(\"Created Error\", err);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Pressable\r\n        style={{\r\n          borderBottomColor: \"rgba(0,0,0, 0.15)\",\r\n          borderBottomWidth: 1,\r\n          paddingVertical: 5,\r\n        }}\r\n        onPress={() => {\r\n          saveProperty(item, inPipeline);\r\n        }}\r\n      >\r\n        <Box\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-around\",\r\n            borderRadius: 5,\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              justifyContent: \"center\",\r\n              width: \"15%\",\r\n            }}\r\n          >\r\n            {pIsSav[item._id] ? (\r\n              <Spinner size={\"small\"} color={Colors.primary} />\r\n            ) : (\r\n              <Center>\r\n                <Checkbox\r\n                  size={\"sm\"}\r\n                  accessibilityLabel='Select contact'\r\n                  isChecked={inPipeline}\r\n                  colorScheme='purple'\r\n                />\r\n              </Center>\r\n            )}\r\n          </View>\r\n          <View style={{ width: \"85%\" }}>\r\n            <Text\r\n              style={{\r\n                fontSize: 14,\r\n                color: Colors.primary,\r\n                fontFamily: \"Poppins\",\r\n              }}\r\n            >\r\n              {item.name + \" (#\" + item.tid + \")\"}\r\n            </Text>\r\n            <Text\r\n              style={{\r\n                color: \"#414141\",\r\n                fontSize: 12,\r\n                fontFamily: \"Poppins\",\r\n              }}\r\n            >\r\n              {item.owneraddress}\r\n            </Text>\r\n            <Text\r\n              style={{\r\n                color: \"#414141\",\r\n                fontSize: 10,\r\n                fontFamily: \"Poppins\",\r\n              }}\r\n            >\r\n              {\"Added By \" + createdUser.firstname + \" \" + createdUser.lastname}\r\n            </Text>\r\n          </View>\r\n        </Box>\r\n      </Pressable>\r\n    );\r\n  };\r\n\r\n  const _onSubmitEditing = (e) => {\r\n    if (e.nativeEvent.text === \"\") {\r\n      return;\r\n    }\r\n    // setIsLoading(true);\r\n    setProperties([]);\r\n    setPage(1);\r\n    setSearch(e.nativeEvent.text);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      flex={1}\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        paddingBottom: vh(10),\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      {total > 0 && (\r\n        <Center style={{ marginVertical: vh(20), width: \"100%\" }}>\r\n          <Input\r\n            w={\"full\"}\r\n            ref={sRef}\r\n            autoComplete='Off'\r\n            rounded={\"full\"}\r\n            variant='outline'\r\n            size={\"xs\"}\r\n            placeholder='Search by #id/name/address'\r\n            onSubmitEditing={_onSubmitEditing}\r\n            onChangeText={(v) => {\r\n              cRef.current.style.visibility = v !== \"\" ? \"visible\" : \"hidden\";\r\n              if (v === \"\") {\r\n                setSearch(\"\");\r\n                setPage(1);\r\n                setProperties([]);\r\n                sRef.current.value = \"\";\r\n              }\r\n            }}\r\n            style={{\r\n              height: vh(36),\r\n              fontSize: vw(13),\r\n              fontFamily: \"Poppins\",\r\n              flex: 1,\r\n            }}\r\n            leftElement={\r\n              <Center style={{ marginLeft: vw(10) }}>\r\n                <SearchIcon width={18} height={18} fill={Colors.primary} />\r\n              </Center>\r\n            }\r\n            rightElement={\r\n              <Pressable\r\n                ref={cRef}\r\n                onPress={() => {\r\n                  if (search !== \"\") {\r\n                    setSearch(\"\");\r\n                    setPage(1);\r\n                    setProperties([]);\r\n                  }\r\n                  sRef.current.value = \"\";\r\n                  cRef.current.style.visibility = \"hidden\";\r\n                }}\r\n                style={{\r\n                  marginRight: vw(10),\r\n                  visibility: \"hidden\",\r\n                }}\r\n              >\r\n                <CloseIcon />\r\n              </Pressable>\r\n            }\r\n          />\r\n        </Center>\r\n      )}\r\n      {isLoading ? (\r\n        <Center style={{ minHeight: vh(396) }}>\r\n          <Spinner size='small' color={Colors.primary} />\r\n        </Center>\r\n      ) : (\r\n        <FlatList\r\n          contentContainerStyle={{\r\n            backgroundColor: \"white\",\r\n            width: \"100%\",\r\n            minHeight: vh(500),\r\n            // marginHorizontal: vh(10),\r\n            marginBottom: vh(60),\r\n            marginTop: vh(10),\r\n          }}\r\n          ListEmptyComponent={<NoItemsFound />}\r\n          style={{ marginTop: 0 }}\r\n          data={properties}\r\n          keyExtractor={(item) => item._id}\r\n          renderItem={({ item }) => (\r\n            <RenderItem\r\n              item={item}\r\n              pipeline={pipeline}\r\n              pipelines={pipelines}\r\n              setReload={setReload}\r\n              reload={reload}\r\n              setIsSaving={setIsSaving}\r\n              isSaving={isSaving}\r\n              setProperties={setProperties}\r\n            />\r\n          )}\r\n          initialNumToRender={50}\r\n          maxToRenderPerBatch={50}\r\n        />\r\n      )}\r\n      {total > 0 && (\r\n        <ShadowPagination\r\n          limit={limit}\r\n          setLimit={setLimit}\r\n          total={total}\r\n          page={page}\r\n          setPage={setPage}\r\n          setIsLoading={setIsLoading}\r\n          style={{\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            marginHorizontal: 0,\r\n            width: \"100%\",\r\n          }}\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(AddContacts, (p, n) => {\r\n  // console.log(p.pipeline, \"prev\", n.pipeline, \"new\");\r\n  return true;\r\n});\r\n","import React, { useEffect, useState, useCallback, useContext } from \"react\";\r\nimport {\r\n  VStack,\r\n  HStack,\r\n  Text,\r\n  Pressable,\r\n  FlatList,\r\n  Center,\r\n  useToast,\r\n  Spinner,\r\n  Actionsheet,\r\n  useDisclose,\r\n  Menu,\r\n  useBreakpointValue,\r\n  useMediaQuery,\r\n  Hidden,\r\n} from \"native-base\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport _ from \"lodash\";\r\n\r\n// import socketContext from \"../../../context/index\";\r\nimport NavBar from \"../home/NavBar\";\r\nimport { vw, vh } from \"../../../util\";\r\nimport * as pipelineActions from \"../../../store/actions/pipelines\";\r\nimport ShadowPagination from \"../../../components/ShadowPagination\";\r\nimport HorizontalItem from \"./HorizontalItem\";\r\nimport VerticalItem from \"./VerticalItem\";\r\nimport ShadowModal from \"../../../components/ShadowModal\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport * as events from \"../../../store/events\";\r\nimport AcreIcon from \"../../../components/svg/AcreIcon\";\r\nimport NavListIcon from \"../../../components/svg/NavListIcon\";\r\nimport AddIcon from \"../../../components/svg/AddIcon\";\r\nimport MoreIcon from \"../../../components/svg/MoreIcon\";\r\nimport AddContacts from \"./AddContacts\";\r\nimport SocketContext from \"../../../context/index\";\r\nimport ShadowButton from \"../../../components/ShadowButton\";\r\nimport AddPipeline from \"./AddPipeline\";\r\n\r\nconst setOrientation = (orientation) => {\r\n  const a = localStorage.getItem(\"@orientation\");\r\n  if (a) {\r\n    const x = JSON.parse(a);\r\n    localStorage.setItem(\r\n      \"@orientation\",\r\n      JSON.stringify({\r\n        ...x,\r\n        pipelines: orientation,\r\n      })\r\n    );\r\n  } else {\r\n    localStorage.setItem(\r\n      \"@orientation\",\r\n      JSON.stringify({\r\n        properties: orientation,\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nconst getOrientation = (page) => {\r\n  const a = localStorage.getItem(\"@orientation\");\r\n  if (a) {\r\n    const x = JSON.parse(a);\r\n    return x[page] ? x[page] : \"vertical\";\r\n  } else {\r\n    return \"vertical\";\r\n  }\r\n};\r\n\r\nconst PageHeader = ({\r\n  activePipeline,\r\n  pipelines,\r\n  listStyle,\r\n  setListStyle,\r\n  _showAlert,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  // const socket = useContext(socketContext);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isOpenMove, setIsOpenMove] = useState(false);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [isHover, setIsHover] = useState(null);\r\n\r\n  const deleteHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      setIsDeleting(true);\r\n      const _id = activePipeline._id;\r\n      const action = pipelineActions.deletePipeline(_id, null);\r\n      await dispatch(action);\r\n      setIsDeleting(false);\r\n      _showAlert(\"success\", \"Pipeline deleted successfully.\");\r\n      setIsOpen(false);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n      setIsDeleting(false);\r\n      _showAlert(\"error\", \"An error occured, cannot delete pipeline.\");\r\n    }\r\n  };\r\n\r\n  const moveHandler = async (f, t) => {\r\n    try {\r\n\r\n      const action = pipelineActions.movePipeline(\r\n        {\r\n          from: f,\r\n          to: t,\r\n        },\r\n        null\r\n      );\r\n      await dispatch(action);\r\n      setIsOpenMove(false);\r\n    } catch (err) {\r\n      // setIsSaving(false);\r\n      console.log(\"move pipeline error\", err);\r\n      _showAlert(\"error\", \"An error occured, cannot move pipeline.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack\r\n      style={{\r\n        zIndex: 999,\r\n        marginTop: vh(-10),\r\n      }}\r\n    >\r\n      {/* For Big Screens */}\r\n      <Hidden only={[\"sm\", \"base\", \"md\"]}>\r\n        <HStack\r\n          style={{\r\n            height: vh(84),\r\n            marginHorizontal: vw(20),\r\n            borderBottomColor: \"rgba(0,0,0,0.15)\",\r\n            borderBottomWidth: 1,\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Text\r\n            style={{\r\n              fontSize: vw(24),\r\n              paddingTop: vh(10),\r\n              color: \"#303030\",\r\n              fontFamily: \"Poppins_medium\",\r\n            }}\r\n          >\r\n            Pipelines\r\n          </Text>\r\n          {/* <Hidden only={[\"base\", \"sm\", \"md\"]}> */}\r\n          <HStack\r\n            style={{\r\n              flexWrap: \"wrap\",\r\n              width: vw(window.screen.width - 400),\r\n              justifyContent: \"center\",\r\n              zoom: \"85%\",\r\n              marginTop: vh(20),\r\n              paddingHorizontal: vh(10),\r\n            }}\r\n          >\r\n            {pipelines.map((p) => (\r\n              <HStack\r\n                key={\"pl-\" + p._id}\r\n                style={{\r\n                  justifyContent: \"space-between\",\r\n                  height: vh(40),\r\n                }}\r\n              >\r\n                <Pressable\r\n                  key={\"h-\" + p._id}\r\n                  onPress={(e) => {\r\n                    e.preventDefault();\r\n                    dispatch({ type: events.SET_ACTIVE_PIPELINE, data: p });\r\n                  }}\r\n                >\r\n                  <Text\r\n                    key={p._id}\r\n                    style={{\r\n                      fontSize: vw(15),\r\n                      // paddingTop: vh(40),\r\n                      paddingHorizontal: vw(10),\r\n                      color: \"#303030\",\r\n                      fontFamily: \"Poppins_medium\",\r\n                      marginHorizontal: vw(12),\r\n                      paddingBottom: vh(5),\r\n                      borderBottomWidth:\r\n                        activePipeline && activePipeline._id === p._id\r\n                          ? vh(4)\r\n                          : 0,\r\n                      borderBottomColor: \"rgba(125, 43, 233, 1)\",\r\n                    }}\r\n                  >\r\n                    {p.name}\r\n                  </Text>\r\n                </Pressable>\r\n              </HStack>\r\n            ))}\r\n          </HStack>\r\n          {/* </Hidden> */}\r\n\r\n          <HStack\r\n            style={{ marginTop: vh(-20) }}\r\n            justifyContent='flex-end'\r\n            space={4}\r\n          >\r\n            {pipelines && pipelines.length > 0 && (\r\n              <Hidden only={[\"base\", \"sm\", \"md\"]}>\r\n                <Pressable\r\n                  bg={{\r\n                    linearGradient: {\r\n                      colors: [\"lightBlue.300\", \"violet.800\"],\r\n                      start: [0, 0],\r\n                      end: [1, 0],\r\n                    },\r\n                  }}\r\n                  onPress={() => {\r\n                    setListStyle(\r\n                      listStyle === \"vertical\" ? \"horizontal\" : \"vertical\"\r\n                    );\r\n                    setOrientation(\r\n                      listStyle === \"vertical\" ? \"horizontal\" : \"vertical\"\r\n                    );\r\n                  }}\r\n                  rounded={\"full\"}\r\n                  style={{\r\n                    marginTop: vh(30),\r\n                    height: vh(36),\r\n                    width: vh(36),\r\n                    borderColor: \"rgba(0, 0, 0, 0.15)\",\r\n                    borderWidth: 1,\r\n                    // backgroundColor: \"transparent\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  {listStyle === \"vertical\" ? <AcreIcon /> : <NavListIcon />}\r\n                </Pressable>\r\n              </Hidden>\r\n            )}\r\n\r\n            <Menu\r\n              placement='left top'\r\n              borderRadius={vw(10)}\r\n              borderWidth={0}\r\n              marginTop={vh(40)}\r\n              marginRight={vw(-20)}\r\n              backgroundColor={\"white\"}\r\n              trigger={(triggerProps) => {\r\n                return (\r\n                  <Pressable\r\n                    accessibilityLabel='More options menu'\r\n                    {...triggerProps}\r\n                    style={{\r\n                      // position: \"absolute\",\r\n                      // right: 0,\r\n                      // top: vh(30),\r\n                      marginTop: vh(35),\r\n                    }}\r\n                  >\r\n                    <MoreIcon />\r\n                  </Pressable>\r\n                );\r\n              }}\r\n            >\r\n              <Menu.Item\r\n                onHoverIn={() => {\r\n                  setIsHover(\"add\");\r\n                }}\r\n                onHoverOut={() => {\r\n                  setIsHover(null);\r\n                }}\r\n                background={\"none\"}\r\n                // _pressed={{\r\n                //   borderWidth: 1,\r\n                //   borderColor: Colors.primary,\r\n                //   borderRadius: 50,\r\n                //   backgroundColor: \"white\",\r\n                // }}\r\n                borderWidth={1}\r\n                borderColor='transparent'\r\n                onPress={async (e) => {\r\n                  e.preventDefault();\r\n                  setShowModal(true);\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    textAlign: \"left\",\r\n                    fontFamily: \"Poppins\",\r\n                    color: isHover === \"add\" ? Colors.primary : \"#686868\",\r\n                    fontSize: vw(15),\r\n                  }}\r\n                >\r\n                  Add\r\n                </Text>\r\n              </Menu.Item>\r\n              {pipelines && pipelines.length > 1 && (\r\n                <Menu.Item\r\n                  onHoverIn={() => {\r\n                    setIsHover(\"move\");\r\n                  }}\r\n                  onHoverOut={() => {\r\n                    setIsHover(null);\r\n                  }}\r\n                  background={\"none\"}\r\n                  // _pressed={{\r\n                  //   borderWidth: 1,\r\n                  //   borderColor: Colors.primary,\r\n                  //   borderRadius: 50,\r\n                  //   backgroundColor: \"white\",\r\n                  // }}\r\n                  borderWidth={1}\r\n                  borderColor='transparent'\r\n                  onPress={async (e) => {\r\n                    e.preventDefault();\r\n                    if (activePipeline && activePipeline.ord === 1) {\r\n                      moveHandler(activePipeline.ord, activePipeline.ord + 1);\r\n                    } else if (\r\n                      activePipeline &&\r\n                      pipelines &&\r\n                      pipelines.length > 1\r\n                    ) {\r\n                      const last = pipelines[pipelines.length - 1];\r\n                      if (last.ord === activePipeline.ord) {\r\n                        moveHandler(activePipeline.ord, activePipeline.ord - 1);\r\n                      } else {\r\n                        setIsOpenMove(true);\r\n                      }\r\n                    }\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"left\",\r\n                      fontFamily: \"Poppins\",\r\n                      color: isHover === \"move\" ? Colors.primary : \"#686868\",\r\n                      fontSize: vw(15),\r\n                    }}\r\n                  >\r\n                    Move\r\n                  </Text>\r\n                </Menu.Item>\r\n              )}\r\n              {pipelines && pipelines.length > 0 && (\r\n                <Menu.Item\r\n                  onHoverIn={() => {\r\n                    setIsHover(\"delete\");\r\n                  }}\r\n                  onHoverOut={() => {\r\n                    setIsHover(null);\r\n                  }}\r\n                  background={\"none\"}\r\n                  // _pressed={{\r\n                  //   borderWidth: 1,\r\n                  //   borderColor: Colors.primary,\r\n                  //   borderRadius: 50,\r\n                  //   backgroundColor: \"white\",\r\n                  // }}\r\n                  borderWidth={1}\r\n                  borderColor='transparent'\r\n                  onPress={() => {\r\n                    setIsOpen(true);\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"left\",\r\n                      fontFamily: \"Poppins\",\r\n                      color: isHover === \"delete\" ? Colors.primary : \"#686868\",\r\n                      fontSize: vw(15),\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </Text>\r\n                </Menu.Item>\r\n              )}\r\n            </Menu>\r\n          </HStack>\r\n        </HStack>\r\n      </Hidden>\r\n      {/* For Small Screens */}\r\n      <Hidden from='lg'>\r\n        <VStack\r\n          style={{\r\n            marginHorizontal: vh(20),\r\n            marginBottom: vh(10),\r\n            borderBottomColor: \"rgba(0,0,0,0.15)\",\r\n            borderBottomWidth: 1,\r\n          }}\r\n          space={2}\r\n        >\r\n          <HStack justifyContent={\"space-between\"}>\r\n            <Text\r\n              style={{\r\n                fontSize: vw(24),\r\n                paddingTop: vh(10),\r\n                color: \"#303030\",\r\n                fontFamily: \"Poppins_medium\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              Pipelines\r\n            </Text>\r\n            <Menu\r\n              placement='left top'\r\n              borderRadius={vw(10)}\r\n              borderWidth={0}\r\n              backgroundColor={\"white\"}\r\n              trigger={(triggerProps) => {\r\n                return (\r\n                  <Pressable\r\n                    accessibilityLabel='More options menu'\r\n                    {...triggerProps}\r\n                    style={{\r\n                      // position: \"absolute\",\r\n                      // right: 0,\r\n                      // top: vh(30),\r\n                      marginTop: vh(20),\r\n                    }}\r\n                  >\r\n                    <MoreIcon />\r\n                  </Pressable>\r\n                );\r\n              }}\r\n            >\r\n              <Menu.Item\r\n                onHoverIn={() => {\r\n                  setIsHover(\"add\");\r\n                }}\r\n                onHoverOut={() => {\r\n                  setIsHover(null);\r\n                }}\r\n                background={\"none\"}\r\n                // _pressed={{\r\n                //   borderWidth: 1,\r\n                //   borderColor: Colors.primary,\r\n                //   borderRadius: 50,\r\n                //   backgroundColor: \"white\",\r\n                // }}\r\n                borderWidth={1}\r\n                borderColor='transparent'\r\n                onPress={async (e) => {\r\n                  e.preventDefault();\r\n                  setShowModal(true);\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    textAlign: \"left\",\r\n                    fontFamily: \"Poppins\",\r\n                    color: isHover === \"add\" ? Colors.primary : \"#686868\",\r\n                    fontSize: vw(15),\r\n                  }}\r\n                >\r\n                  Add\r\n                </Text>\r\n              </Menu.Item>\r\n              <Menu.Item\r\n                onHoverIn={() => {\r\n                  setIsHover(\"move\");\r\n                }}\r\n                onHoverOut={() => {\r\n                  setIsHover(null);\r\n                }}\r\n                background={\"none\"}\r\n                // _pressed={{\r\n                //   borderWidth: 1,\r\n                //   borderColor: Colors.primary,\r\n                //   borderRadius: 50,\r\n                //   backgroundColor: \"white\",\r\n                // }}\r\n                borderWidth={1}\r\n                borderColor='transparent'\r\n                onPress={async (e) => {\r\n                  e.preventDefault();\r\n                  if (activePipeline && activePipeline.ord === 1) {\r\n                    moveHandler(activePipeline.ord, activePipeline.ord + 1);\r\n                  } else if (\r\n                    activePipeline &&\r\n                    pipelines &&\r\n                    pipelines.length > 1\r\n                  ) {\r\n                    const last = pipelines[pipelines.length - 1];\r\n                    if (last.ord === activePipeline.ord) {\r\n                      moveHandler(activePipeline.ord, activePipeline.ord - 1);\r\n                    } else {\r\n                      setIsOpenMove(true);\r\n                    }\r\n                  }\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    textAlign: \"left\",\r\n                    fontFamily: \"Poppins\",\r\n                    color: isHover === \"move\" ? Colors.primary : \"#686868\",\r\n                    fontSize: vw(15),\r\n                  }}\r\n                >\r\n                  Move\r\n                </Text>\r\n              </Menu.Item>\r\n              <Menu.Item\r\n                onHoverIn={() => {\r\n                  setIsHover(\"delete\");\r\n                }}\r\n                onHoverOut={() => {\r\n                  setIsHover(null);\r\n                }}\r\n                background={\"none\"}\r\n                // _pressed={{\r\n                //   borderWidth: 1,\r\n                //   borderColor: Colors.primary,\r\n                //   borderRadius: 50,\r\n                //   backgroundColor: \"white\",\r\n                // }}\r\n                borderWidth={1}\r\n                borderColor='transparent'\r\n                onPress={() => {\r\n                  setIsOpen(true);\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    textAlign: \"left\",\r\n                    fontFamily: \"Poppins\",\r\n                    color: isHover === \"delete\" ? Colors.primary : \"#686868\",\r\n                    fontSize: vw(15),\r\n                  }}\r\n                >\r\n                  Delete\r\n                </Text>\r\n              </Menu.Item>\r\n            </Menu>\r\n          </HStack>\r\n          <HStack\r\n            style={{\r\n              flexWrap: \"wrap\",\r\n              width: \"100%\",\r\n              justifyContent: \"flex-start\",\r\n              zoom: \"85%\",\r\n            }}\r\n          >\r\n            {pipelines.map((p) => (\r\n              <HStack\r\n                key={\"pl-\" + p._id}\r\n                style={{\r\n                  justifyContent: \"space-between\",\r\n                  height: vh(40),\r\n                }}\r\n              >\r\n                <Pressable\r\n                  key={\"h-\" + p._id}\r\n                  onPress={(e) => {\r\n                    e.preventDefault();\r\n                    dispatch({ type: events.SET_ACTIVE_PIPELINE, data: p });\r\n                  }}\r\n                >\r\n                  <Text\r\n                    key={p._id}\r\n                    style={{\r\n                      fontSize: vw(15),\r\n                      // paddingTop: vh(40),\r\n                      paddingHorizontal: vw(10),\r\n                      color: \"#303030\",\r\n                      fontFamily: \"Poppins_medium\",\r\n                      marginHorizontal: vw(12),\r\n                      paddingBottom: vh(5),\r\n                      borderBottomWidth:\r\n                        activePipeline && activePipeline._id === p._id\r\n                          ? vh(4)\r\n                          : 0,\r\n                      borderBottomColor: \"rgba(125, 43, 233, 1)\",\r\n                    }}\r\n                  >\r\n                    {p.name}\r\n                  </Text>\r\n                </Pressable>\r\n              </HStack>\r\n            ))}\r\n          </HStack>\r\n        </VStack>\r\n      </Hidden>\r\n      <AddPipeline\r\n        showModal={showModal}\r\n        setShowModal={setShowModal}\r\n        _showAlert={_showAlert}\r\n      />\r\n      <ShadowModal\r\n        size='md'\r\n        height={vh(60)}\r\n        isOpen={isOpen}\r\n        close={() => {\r\n          setIsOpen(false);\r\n        }}\r\n        header='Delete Pipeline'\r\n        buttons={\r\n          <HStack space={2}>\r\n            <ShadowButton\r\n              space={2}\r\n              onPress={() => {\r\n                setIsOpen(false);\r\n              }}\r\n              color='rgba(0,0,0, 0.5)'\r\n              variant='outline'\r\n              label='Cancel'\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n            <ShadowButton\r\n              space={2}\r\n              isLoading={isDeleting}\r\n              onPress={deleteHandler}\r\n              color='white'\r\n              label='Delete'\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n          </HStack>\r\n        }\r\n      >\r\n        <Text\r\n          style={{\r\n            fontFamily: \"Poppins\",\r\n            fontSize: vw(15),\r\n            color: \"rgba(0,0,0,0.8)\",\r\n          }}\r\n        >\r\n          Are you sure you want to delete this pipeline?\r\n        </Text>\r\n      </ShadowModal>\r\n      <ShadowModal\r\n        size='md'\r\n        height={vh(60)}\r\n        isOpen={isOpenMove}\r\n        close={() => {\r\n          setIsOpenMove(false);\r\n        }}\r\n        header='Move Pipeline'\r\n        buttons={\r\n          <HStack space={2}>\r\n            <ShadowButton\r\n              space={2}\r\n              onPress={() => {\r\n                setIsOpenMove(false);\r\n              }}\r\n              variant='outline'\r\n              label='Cancel'\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n            <ShadowButton\r\n              space={2}\r\n              // isLoading={isMovingLeft}\r\n              onPress={() => {\r\n                moveHandler(activePipeline.ord, activePipeline.ord - 1);\r\n              }}\r\n              label='Left'\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n            <ShadowButton\r\n              space={2}\r\n              // isLoading={isMovingRight}\r\n              onPress={() => {\r\n                console.log(activePipeline.ord, activePipeline.ord + 1)\r\n                moveHandler(activePipeline.ord, activePipeline.ord + 1);\r\n              }}\r\n              label='Right'\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n          </HStack>\r\n        }\r\n      >\r\n        <Text\r\n          style={{\r\n            fontFamily: \"Poppins\",\r\n            fontSize: vw(15),\r\n            color: \"rgba(0,0,0,0.8)\",\r\n          }}\r\n        >\r\n          Move this pipeline?\r\n        </Text>\r\n      </ShadowModal>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nconst Index = ({ user, setLogout }) => {\r\n  const [landscape] = useMediaQuery([\r\n    {\r\n      orientation: \"landscape\",\r\n    },\r\n    {\r\n      orientation: \"portrait\",\r\n    },\r\n  ]);\r\n\r\n  // const sz = useBreakpointValue({\r\n  //   base: \"base\",\r\n  //   sm: \"sm\",\r\n  //   lg: \"lg\",\r\n  //   md: \"md\",\r\n  //   xl: \"xl\",\r\n  // });\r\n\r\n  let cols = useBreakpointValue({\r\n    base: 1,\r\n    sm: 1,\r\n    lg: 4,\r\n    md: 3,\r\n    xl: 5,\r\n  });\r\n\r\n  if (cols === 1 && landscape) {\r\n    cols = 2;\r\n  }\r\n\r\n  const cardwidth = 428;\r\n  cols = Math.floor(window.screen.width / cardwidth);\r\n  if (cols === 0) {\r\n    cols = 1;\r\n  }\r\n\r\n  const toast = useToast();\r\n  const socket = useContext(SocketContext);\r\n  const dispatch = useDispatch();\r\n  const { onOpen, onClose, isOpen } = useDisclose();\r\n  const { pipelines, activePipeline } = useSelector((state) => state.pipelines);\r\n  const limit = 50;\r\n\r\n  const [listStyle, setListStyle] = useState(getOrientation(\"pipelines\"));\r\n  const op = _.sortBy(pipelines, \"ord\");\r\n  const [page, setPage] = useState(1);\r\n  const [reload, setReload] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const properties =\r\n    (activePipeline && activePipeline.properties.filter((p) => p._id)) || [];\r\n  const total = (properties && properties.total) || 0;\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await dispatch(pipelineActions.fetchPipelines());\r\n      setIsLoading(false);\r\n    })();\r\n  }, [dispatch]);\r\n\r\n  const _emptyComponent = useCallback(() => {\r\n    return (\r\n      <Center height={\"lg\"} justifyContent='center' alignItems='center'>\r\n        <Text textAlign={\"center\"}>{\"No items found.\"} </Text>\r\n      </Center>\r\n    );\r\n  }, []);\r\n\r\n  const _showAlert = useCallback(\r\n    (status, msg) => {\r\n      toast.show({\r\n        placement: \"top\",\r\n        render: () => {\r\n          let bg = \"red.300\";\r\n          if (status === \"error\") {\r\n            bg = \"red.300\";\r\n          } else if (status === \"success\") {\r\n            bg = \"green.300\";\r\n          } else if (status === \"info\") {\r\n            bg = \"blueGray.300\";\r\n          } else if (status === \"warning\") {\r\n            bg = \"orange.300\";\r\n          }\r\n          return (\r\n            <Text\r\n              style={{\r\n                fontSize: vw(12),\r\n                fontFamily: \"Poppins_medium\",\r\n                color: \"#33214B\",\r\n              }}\r\n              p={2}\r\n              bg={bg}\r\n              rounded={\"full\"}\r\n            >\r\n              {msg}\r\n            </Text>\r\n          );\r\n        },\r\n      });\r\n    },\r\n    [toast]\r\n  );  \r\n\r\n  const _renderItem = useCallback(\r\n    ({ item, index }) => {\r\n      const isEnd = index === properties.length - 1;\r\n      return listStyle === \"horizontal\" ? (\r\n        <HorizontalItem\r\n          pipelines={pipelines}\r\n          activePipeline={activePipeline}\r\n          item={item}\r\n          isEnd={isEnd}\r\n          _showAlert={_showAlert}\r\n        />\r\n      ) : (\r\n        <VerticalItem\r\n          activePipeline={activePipeline}\r\n          item={item}\r\n          pipelines={pipelines}\r\n          _showAlert={_showAlert}\r\n          cols={cols}\r\n        />\r\n      );\r\n    },\r\n    [\r\n      listStyle,\r\n      activePipeline,\r\n      _showAlert,\r\n      cols,\r\n      pipelines,\r\n      properties.length,\r\n    ]\r\n  );\r\n\r\n  const _getItemLayout = useCallback(\r\n    (data, index) => ({\r\n      length: 180,\r\n      offset: 180 * index,\r\n      index,\r\n    }),\r\n    []\r\n  );\r\n\r\n  const RoundButton = (props) => {\r\n    const [isPressed, setIsPressed] = useState(false);\r\n    return (\r\n      <Center alignItems='center' position={\"fixed\"} bottom={5} right={5} p={2}>\r\n        <Pressable\r\n          zIndex={9999}\r\n          style={{ padding: isPressed ? 10 : 11, marginTop: 1 }}\r\n          borderRadius={100}\r\n          bg={isPressed ? \"white\" : Colors.primary}\r\n          borderColor={isPressed ? Colors.primary : Colors.primary}\r\n          borderWidth={isPressed ? 1 : 0}\r\n          onPressIn={() => {\r\n            setIsPressed(true);\r\n          }}\r\n          onPressOut={() => {\r\n            setIsPressed(false);\r\n          }}\r\n          onPress={() => {\r\n            onOpen();\r\n          }}\r\n        >\r\n          <AddIcon fill={!isPressed ? \"white\" : Colors.primary} />\r\n        </Pressable>\r\n      </Center>\r\n    );\r\n  };\r\n\r\n  const _keyExtractor = useCallback((item) => item._id, []);\r\n\r\n  const ph = 100 - parseFloat(vh(70)) + \"vh\";\r\n\r\n  return (\r\n    <VStack minHeight={\"100vh\"} bg={\"#F7F8FA\"}>\r\n      <NavBar user={user} setLogout={setLogout} />\r\n      <VStack height={ph}>\r\n        <PageHeader\r\n          setListStyle={setListStyle}\r\n          listStyle={listStyle}\r\n          activePipeline={activePipeline}\r\n          pipelines={op}\r\n          _showAlert={_showAlert}\r\n        />\r\n        {isLoading ? (\r\n          <Center height={\"lg\"} alignItems={\"center\"}>\r\n            <Spinner size='small' color={\"#7D2BE9\"} />\r\n          </Center>\r\n        ) : listStyle === \"horizontal\" ? (\r\n          properties && properties.length > 0 ? (\r\n            <>\r\n              <VStack\r\n                shadow={4}\r\n                borderRadius={vh(10)}\r\n                marginX={vh(20)}\r\n                marginTop={vh(20)}\r\n                bg={\"rgba(251, 252, 254, 1)\"}\r\n              >\r\n                {/* <HStack\r\n                    flex={1}\r\n                    width=\"100%\"\r\n                    style={{\r\n                      borderTopLeftRadius: vh(10),\r\n                      borderTopRightRadius: vh(10),\r\n                      backgroundColor: \"rgba(251, 252, 254, 1)\",\r\n                      // marginHorizontal: vw(20),\r\n                      // marginTop: vh(10),\r\n                      paddingHorizontal: vw(20),\r\n                      justifyContent: \"flex-start\",\r\n                      borderBottomWidth: 1,\r\n                      borderBottomColor: \"rgba(0, 0, 0, 0.15)\",\r\n                      height: vh(60),\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        fontSize: vw(15),\r\n                        fontFamily: \"Poppins\",\r\n                        paddingVertical: vh(20),\r\n                        height: vh(60),\r\n                        margin: 0,\r\n                        alignItems: \"center\",\r\n                        // marginLeft: vw(20)\r\n                      }}\r\n                      // flex={2}\r\n                      textAlign={\"left\"}\r\n                      width={\"20%\"}\r\n                      bg=\"amber.100\"\r\n                    >\r\n                      Owner Name\r\n                    </Text>\r\n                    <Text\r\n                      style={{\r\n                        fontSize: vw(15),\r\n                        fontFamily: \"Poppins\",\r\n                        paddingVertical: vh(20),\r\n                        height: vh(60),\r\n                        alignItems: \"center\",\r\n                      }}\r\n                      // flex={2.5}\r\n                      textAlign={\"center\"}\r\n                      width={\"30%\"}\r\n                      bg=\"amber.200\"\r\n                      // marginLeft={vw(50)}\r\n                    >\r\n                      Property Address\r\n                    </Text>\r\n                    <Text\r\n                      style={{\r\n                        fontSize: vw(15),\r\n                        fontFamily: \"Poppins\",\r\n                        paddingVertical: vh(20),\r\n                        height: vh(60),\r\n                        alignItems: \"center\",\r\n                      }}\r\n                      // flex={1.5}\r\n                      textAlign={\"center\"}\r\n                      width={\"20%\"}\r\n                      bg=\"amber.300\"\r\n                    >\r\n                      Added by\r\n                    </Text>\r\n                    <Text\r\n                      style={{\r\n                        fontSize: vw(15),\r\n                        fontFamily: \"Poppins\",\r\n                        paddingVertical: vh(20),\r\n                        height: vh(60),\r\n                        // marginLeft: vw(50),\r\n                        alignItems: \"center\",\r\n                      }}\r\n                      // flex={1.5}\r\n                      textAlign={\"left\"}\r\n                      width={\"10%\"}\r\n                      bg=\"amber.400\"\r\n                    >\r\n                      Added Date\r\n                    </Text>\r\n                    <Text\r\n                      style={{\r\n                        fontSize: vw(15),\r\n                        fontFamily: \"Poppins\",\r\n                        paddingVertical: vh(20),\r\n                        height: vh(60),\r\n                        // marginLeft: vw(150),\r\n                        alignItems: \"center\",\r\n                      }}\r\n                      // flex={1}\r\n                      textAlign={\"center\"}\r\n                      width={\"10%\"}\r\n                      bg=\"amber.500\"\r\n                    >\r\n                      Notes\r\n                    </Text>\r\n                    <Text\r\n                      style={{\r\n                        fontSize: vw(15),\r\n                        fontFamily: \"Poppins\",\r\n                        paddingVertical: vh(20),\r\n                        height: vh(60),\r\n                        alignItems: \"center\",\r\n                      }}\r\n                      // flex={1}\r\n                      width={\"10%\"}\r\n                      textAlign={\"center\"}\r\n                      bg=\"amber.600\"\r\n                    >\r\n                      Actions\r\n                    </Text>\r\n                  </HStack> */}\r\n                <FlatList\r\n                  key={\"list-\" + listStyle}\r\n                  // refreshing={refreshing}\r\n                  removeClippedSubviews={true}\r\n                  _contentContainerStyle={{\r\n                    justifyContent:\r\n                      listStyle === \"vertical\" ? \"space-around\" : \"center\",\r\n                    overflow: \"hidden\",\r\n                    paddingBottom: vh(20),\r\n                  }}\r\n                  // columnWrapperStyle={{ justifyContent: listStyle === \"vertical\" ? \"space-around\" : \"center\" }}\r\n                  getItemLayout={_getItemLayout}\r\n                  disableVirtualization={true}\r\n                  ListHeaderComponent={\r\n                    <HStack\r\n                      flex={1}\r\n                      width='100%'\r\n                      style={{\r\n                        borderTopLeftRadius: vh(10),\r\n                        borderTopRightRadius: vh(10),\r\n                        backgroundColor: \"rgba(251, 252, 254, 1)\",\r\n                        // marginHorizontal: vw(20),\r\n                        // marginTop: vh(10),\r\n                        paddingHorizontal: vw(20),\r\n                        justifyContent: \"flex-start\",\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: \"rgba(0, 0, 0, 0.15)\",\r\n                        height: vh(60),\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          fontSize: vw(15),\r\n                          fontFamily: \"Poppins\",\r\n                          paddingVertical: vh(20),\r\n                          height: vh(60),\r\n                          lineHeight: vh(20),\r\n                          alignItems: \"center\",\r\n                          color: Colors.primary,\r\n                        }}\r\n                        flexWrap={\"wrap\"}\r\n                        textAlign={\"left\"}\r\n                        width={\"17.8%\"}\r\n                      >\r\n                        Owner Name\r\n                      </Text>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: vw(15),\r\n                          fontFamily: \"Poppins\",\r\n                          paddingVertical: vh(20),\r\n                          height: vh(60),\r\n                          alignItems: \"center\",\r\n                        }}\r\n                        textAlign={\"center\"}\r\n                        width={\"26.7%\"}\r\n                      >\r\n                        Property Address\r\n                      </Text>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: vw(15),\r\n                          fontFamily: \"Poppins\",\r\n                          paddingVertical: vh(20),\r\n                          height: vh(60),\r\n                          alignItems: \"center\",\r\n                        }}\r\n                        textAlign={\"center\"}\r\n                        width={\"17.8%\"}\r\n                      >\r\n                        Added by\r\n                      </Text>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: vw(15),\r\n                          fontFamily: \"Poppins\",\r\n                          paddingVertical: vh(20),\r\n                          height: vh(60),\r\n                          alignItems: \"center\",\r\n                        }}\r\n                        textAlign={\"center\"}\r\n                        width={\"17.8%\"}\r\n                      >\r\n                        Added Date\r\n                      </Text>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: vw(15),\r\n                          fontFamily: \"Poppins\",\r\n                          paddingVertical: vh(20),\r\n                          height: vh(60),\r\n                          alignItems: \"center\",\r\n                        }}\r\n                        textAlign={\"center\"}\r\n                        width={\"10%\"}\r\n                      >\r\n                        Notes\r\n                      </Text>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: vw(15),\r\n                          fontFamily: \"Poppins\",\r\n                          paddingVertical: vh(20),\r\n                          height: vh(60),\r\n                          alignItems: \"center\",\r\n                        }}\r\n                        width={\"10%\"}\r\n                        textAlign={\"center\"}\r\n                      >\r\n                        Actions\r\n                      </Text>\r\n                    </HStack>\r\n                  }\r\n                  ListEmptyComponent={_emptyComponent}\r\n                  data={properties}\r\n                  extraData={listStyle}\r\n                  keyExtractor={_keyExtractor}\r\n                  renderItem={_renderItem}\r\n                  updateCellsBatchingPeriod={1}\r\n                  initialNumToRender={50}\r\n                  maxToRenderPerBatch={50}\r\n                  numColumns={listStyle === \"vertical\" ? 3 : null}\r\n                />\r\n              </VStack>\r\n              <Center style={{ height: vh(10) }}></Center>\r\n            </>\r\n          ) : (\r\n            _emptyComponent()\r\n          )\r\n        ) : (\r\n          <FlatList\r\n            key={\"list-\" + cols}\r\n            // refreshing={refreshing}\r\n            removeClippedSubviews={true}\r\n            _contentContainerStyle={{\r\n              width: \"100vW\",\r\n              flex: 1,\r\n            }}\r\n            // columnWrapperStyle={{ justifyContent: \"flex-start\" }}\r\n            getItemLayout={_getItemLayout}\r\n            disableVirtualization={true}\r\n            // ListHeaderComponent={}\r\n            ListEmptyComponent={_emptyComponent}\r\n            data={properties}\r\n            extraData={listStyle}\r\n            keyExtractor={_keyExtractor}\r\n            renderItem={_renderItem}\r\n            updateCellsBatchingPeriod={1}\r\n            initialNumToRender={50}\r\n            maxToRenderPerBatch={50}\r\n            numColumns={cols}\r\n          />\r\n        )}\r\n\r\n        {total > limit && (\r\n          <ShadowPagination\r\n            limit={limit}\r\n            total={total}\r\n            page={page}\r\n            setPage={setPage}\r\n            setIsLoading={setIsLoading}\r\n          />\r\n        )}\r\n\r\n        <Actionsheet\r\n          isOpen={isOpen}\r\n          onClose={() => {\r\n            onClose();\r\n            setReload(!reload);\r\n          }}\r\n        >\r\n          <Actionsheet.Content\r\n            alignSelf={\"center\"}\r\n            width={[\"90vw\", 500]}\r\n            bg={\"white\"}\r\n          >\r\n            <Center>\r\n              <Text fontSize={18}>Add Contacts</Text>\r\n              <Text fontSize={12}>{activePipeline && activePipeline.name}</Text>\r\n            </Center>\r\n            <AddContacts\r\n              pipelines={\r\n                pipelines && pipelines.length > 0 && pipelines.map((p) => p._id)\r\n              }\r\n              pipeline={activePipeline && activePipeline._id}\r\n              dispatch={dispatch}\r\n              socket={socket}\r\n              _showAlert\r\n            />\r\n          </Actionsheet.Content>\r\n        </Actionsheet>\r\n      </VStack>\r\n      {pipelines && pipelines.length > 0 && <RoundButton />}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"],"names":["ShadowPagination","total","limit","setLimit","setPage","page","style","setIsLoading","view","pageCount","Math","ceil","MyPaginate","styled","ReactPaginate","attrs","activeClassName","vw","HStack","boxShadow","justifyContent","alignItems","height","vh","backgroundColor","paddingHorizontal","Text","fontFamily","fontSize","color","marginRight","Select","outlineColor","outlineStyle","borderWidth","variant","selectedValue","parseInt","width","onValueChange","v","dropdownIcon","DropDownIcon","label","value","marginLeft","breakLabel","nextLabel","onPageChange","p","selected","pageRangeDisplayed","marginPagesDisplayed","previousLabel","renderOnZeroPageCount","forcePage","React","fill","xmlns","viewBox","Path","d","fillRule","props","G","SocketContext","setShowModal","showModal","_showAlert","dispatch","useDispatch","useState","isSaving","setIsSaving","useForm","mode","control","handleSubmit","errors","formState","reset","onSubmit","data","name","action","pipelineActions","console","log","message","size","bodyHeight","isOpen","close","cancel","save","header","buttons","space","onPress","isLoading","marginTop","autoFocus","onKeyPress","e","key","preventDefault","placeholder","rules","required","invalid","error","inputStyle","setIsAlertOpen","setShowMoveDialog","isHover","setIsHover","Menu","placement","borderRadius","trigger","triggerProps","Pressable","accessibilityLabel","MoreIcon","background","onHoverIn","onHoverOut","borderColor","textAlign","Colors","_id","notes","NoteForm","setIsFocused","note","setNote","saveNote","propertiesActions","VStack","w","Input","autoComplete","placeholderTextColor","onSubmitEditing","onBlur","onFocus","onChangeText","txt","paddingVertical","selectionColor","Spinner","top","right","position","NoteItem","item","createdname","moment","created","format","NoteList","ScrollView","marginBottom","maxHeight","length","map","idx","Popover","paddingTop","NotesIcon","borderBottomColor","borderBottomWidth","flex","isEnd","pipelines","activePipeline","socket","createdUser","fullname","firstname","lastname","trim","isAlertOpen","propertyPipeline","setPropertyPipeline","showMoveDialog","moveProperty","pipeline","from","to","property","find","onAlertClose","lineHeight","flexWrap","tid","propertyaddress","Box","Center","Modal","onClose","maxWidth","_text","marginVertical","marginHorizontal","flexDirection","_actionSheetContent","_selectedItem","endIcon","Check","filter","_pressed","Button","ShadowButton","AlertDialog","cols","sqft","acre","toString","window","screen","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","padding","borderTopWidth","borderTopColor","SqftIcon","AcreIcon","BedIcon","bed","BathIcon","bath","getUser","localStorage","getItem","JSON","parse","AddContacts","sRef","useRef","cRef","setTotal","reload","setReload","pIsSav","search","setSearch","properties","setProperties","_getData","useCallback","inPipeline","ninPipelines","token","fetch","API_URL","method","headers","Authorization","body","stringify","skip","fields","owneraddress","sort","response","ok","json","errData","Error","resData","count","useEffect","unmounted","NoItemsFound","minHeight","RenderItem","pipelineRef","setInPipeline","saveProperty","del","type","events","current","err","View","Checkbox","isChecked","colorScheme","paddingBottom","ref","rounded","nativeEvent","text","visibility","leftElement","SearchIcon","rightElement","CloseIcon","FlatList","contentContainerStyle","ListEmptyComponent","keyExtractor","renderItem","initialNumToRender","maxToRenderPerBatch","bottom","n","PageHeader","listStyle","setListStyle","setIsOpen","isOpenMove","setIsOpenMove","isDeleting","setIsDeleting","deleteHandler","moveHandler","f","t","zIndex","Hidden","only","zoom","bg","linearGradient","colors","start","end","orientation","a","x","setItem","setOrientation","NavListIcon","ord","AddPipeline","ShadowModal","user","setLogout","useMediaQuery","landscape","useBreakpointValue","base","sm","lg","md","xl","floor","toast","useToast","useContext","useDisclose","onOpen","useSelector","state","getOrientation","op","_","_emptyComponent","status","msg","show","render","_renderItem","index","_getItemLayout","offset","RoundButton","isPressed","setIsPressed","onPressIn","onPressOut","AddIcon","_keyExtractor","ph","parseFloat","NavBar","shadow","marginX","removeClippedSubviews","_contentContainerStyle","overflow","getItemLayout","disableVirtualization","ListHeaderComponent","borderTopLeftRadius","borderTopRightRadius","extraData","updateCellsBatchingPeriod","numColumns","Actionsheet","alignSelf"],"sourceRoot":""}