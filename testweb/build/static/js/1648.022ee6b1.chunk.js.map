{"version":3,"file":"static/js/1648.022ee6b1.chunk.js","mappings":"qMAIQA,EAAWC,EAAAA,GAAAA,GAAPC,EAAOD,EAAAA,GAAAA,GAEbE,EAAcC,EAAAA,YAAiB,SAACC,EAAOC,GAC3C,OACE,UAAC,KAAD,CACEC,WAAYF,EAAME,WAClBC,UAAWH,EAAMI,QACjBC,WAAYL,EAAMK,aAAc,EAChCC,OAAK,QACHC,OAAQV,EAAG,KACRG,EAAMM,OANb,UASGN,EAAMQ,QACL,SAAC,WAAD,CACEF,OAAK,QACHG,SAAUd,EAAG,IACbe,WAAY,iBACZC,MAAOX,EAAMI,QAAU,UAAY,2BACnCG,OAAQV,EAAG,KACRG,EAAMY,YANb,SASGZ,EAAMQ,SAIX,SAAC,KAAD,CACEK,QAASb,EAAMa,QACfC,MAAOd,EAAMc,MACbC,KAAMf,EAAMe,KACZT,MAAO,CACLU,OAAQ,GAEVC,OAAQ,oBAAGC,MAASC,EAAZ,EAAYA,SAAkBC,GAA9B,EAAsBC,OAAtB,EAA8BD,OAA9B,OACN,SAAC,KAAD,CACEf,WAAYL,EAAMK,aAAc,EAChCJ,IAAKA,EACLqB,KAAMtB,EAAMsB,MAAQ,KACpBC,UAAWvB,EAAMuB,YAAa,EAC9BC,cAAexB,EAAMwB,eAAiB,EACtCC,UAAWzB,EAAMyB,WAAa,EAC9BC,UAAW1B,EAAM0B,WAAa,IAC9BvB,UAAWH,EAAMI,QACjBuB,aAAa,MACbC,UAAW5B,EAAM4B,YAAa,EAC9BC,KAAM7B,EAAM6B,MAAQ,OACpBC,gBAAiB9B,EAAM8B,gBACvBC,WAAY/B,EAAM+B,WAClBC,aAAc,SAACZ,GACbD,EAASC,GACLpB,EAAMgC,cACRhC,EAAMgC,cAET,EACDZ,MAAOA,GAAS,GAChBa,QAAS,UACTC,oBAAqB,UACrBC,kBAAmB,sBACnBC,SAAU,CACRC,YAAa,UACbC,YAAa,KAEfC,OAAQ,CACND,YAAa,KAEfE,MAAO,CACLF,YAAa,KAEfG,KAAM,CACJH,YAAa,KAEfhC,MAAO,CACLG,SAAUd,EAAG,IACbe,WAAY,iBACZgC,gBAAiB,QACjB1B,OAAQ,EACRT,OAAQP,EAAMO,QAAUV,EAAG,KAE7B8C,iBAAkB3C,EAAM4C,UAAY,KACpCC,kBAAmB7C,EAAM8C,WAAa,KACtCC,YAAa/C,EAAM+C,aA/Cf,KAmDV,SAAC,kBAAD,CAA0BzC,MAAO,CAAE0C,UAAWnD,GAAI,IAAlD,SACGG,EAAMiD,SAET,SAAC,gBAAD,CAAwB3C,MAAO,CAAE0C,UAAWnD,GAAI,IAAhD,SACGG,EAAMkD,SAId,IAED,K,iHC3CA,IAlDqB,SAAClD,GACpB,OACE,UAAC,KAAD,CACEG,UAAWH,EAAMI,QACjBE,OAAK,QACHC,QAAQV,EAAAA,EAAAA,IAAG,KACRG,EAAMM,OAJb,UAOGN,EAAMQ,QACL,SAAC,WAAD,CACEF,MAAO,CACLG,UAAUd,EAAAA,EAAAA,IAAG,IACbe,WAAY,iBACZC,MAAOX,EAAMI,QAAU,UAAY,2BACnCG,QAAQV,EAAAA,EAAAA,IAAG,KALf,SAQGG,EAAMQ,SAIX,SAAC,KAAD,CACEK,QAASb,EAAMa,QACfC,MAAOd,EAAMc,MACbC,KAAMf,EAAMe,KACZE,OAAQ,oBAAGC,MAASC,EAAZ,EAAYA,SAAZ,EAAsBE,OAAtB,EAA8BD,MAA9B,OACN,SAAC,KAAD,gBACE+B,aAAcC,EAAAA,EAAAA,QACd9C,MAAO,CAAE0C,WAAWnD,EAAAA,EAAAA,IAAG,KACvByB,KAAM,MACFtB,GAJN,IAKEqD,SAAU,SAACC,GAGTtD,EAAMuD,UAAUD,GAChBnC,EAASmC,EACV,EAEDE,YAAY,WAbR,KAiBV,SAAC,kBAAD,CAA0BlD,MAAO,CAAE0C,WAAWnD,EAAAA,EAAAA,KAAI,IAAlD,SACGG,EAAMiD,UAId,C,sBCtDD,KACEQ,QAAS,wBACTC,OAAQ,U,2TCMJC,EAAe,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACtBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACC,EAAA,GAAD,CACEC,SAAO,uBAAE,mGACDH,EAAS,CAAEjC,KAAMqC,EAAAA,GAA6BC,KAAMP,IADnD,OAEPC,GAAU,GAFH,2CADX,UAME,UAACO,EAAA,EAAD,CACE9D,MAAO,CACL+D,UAAW,yBACXC,OAAO3E,EAAAA,EAAAA,IAAG,KACVY,QAAQV,EAAAA,EAAAA,IAAG,KACX0E,kBAAkB5E,EAAAA,EAAAA,IAAG,IACrB6E,gBAAgB3E,EAAAA,EAAAA,IAAG,IACnB4E,cAAc9E,EAAAA,EAAAA,IAAG,IACjB+C,gBAAiB,SARrB,WAWE,SAACgC,EAAA,EAAD,CACEpE,MAAO,CACLiE,kBAAkB5E,EAAAA,EAAAA,IAAG,IACrBqD,WAAWnD,EAAAA,EAAAA,IAAG,GACdc,MAAOyC,EAAAA,EAAAA,QACP1C,WAAY,iBACZD,UAAUd,EAAAA,EAAAA,IAAG,KANjB,SASGiE,EAAK7C,QAER,SAAC2D,EAAA,EAAD,CACEpE,MAAO,CACL0C,WAAWnD,EAAAA,EAAAA,IAAG,GACd0E,kBAAkB5E,EAAAA,EAAAA,IAAG,IACrBgB,MAAO,mBACPD,WAAY,UACZD,UAAUd,EAAAA,EAAAA,IAAG,KANjB,SASGiE,EAAKe,eAER,UAACC,EAAA,EAAD,CACEtE,MAAO,CAAE0C,WAAWnD,EAAAA,EAAAA,IAAG,GAAI0E,kBAAkB5E,EAAAA,EAAAA,IAAG,KAChDkF,eAAgB,gBAFlB,WAIE,SAACH,EAAA,EAAD,CACEpE,MAAO,CACLK,MAAO,UACPD,WAAY,UACZD,UAAUd,EAAAA,EAAAA,IAAG,KAJjB,SAOGiE,EAAKkB,aAER,SAACd,EAAA,GAAD,CAAWC,QAAS,WAAQ,EAA5B,UACE,SAACS,EAAA,EAAD,CACEpE,MAAO,CACLG,UAAUd,EAAAA,EAAAA,IAAG,IACbe,WAAY,UACZC,MAAOyC,EAAAA,EAAAA,SAJX,SAOGQ,EAAKmB,QACFnB,EAAKoB,OAASpB,EAAKqB,YAAYC,IAC7B,eACA,UACF,cAOjB,EAED,EAAenF,EAAAA,KAAW4D,G,kJC0lC1B,EA/oCoB,SAAC,GAAsC,IAApCwB,EAAmC,EAAnCA,OAAQtB,EAA2B,EAA3BA,UAAWuB,EAAgB,EAAhBA,UAClCC,GAAKC,EAAAA,EAAAA,GAAmB,CAC5BC,KAAM,OACNC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,OAEAC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,MACRjC,GAAWC,EAAAA,EAAAA,MACXiC,EAAYjG,EAAAA,OAAa,MAC/B,EAAsCA,EAAAA,UAAe,GAArD,eAAOkG,EAAP,KAAoBC,EAApB,KAEMC,GAAUC,EAAAA,EAAAA,cAAY,kBAAMvC,GAAU,EAAhB,GAAwB,CAACA,IAC/CwC,EAAe,kBAAMH,GAAe,EAArB,EACrB,GAAsCI,EAAAA,EAAAA,UAAS,CAC7CC,OAAQ,GACRC,KAAM,GACNC,QAAS,KACTC,SAAU,MACVC,IAAK,WAAQ,EACbC,GAAIT,IANN,eAAOU,EAAP,KAAoBC,EAApB,KASQC,GAAoBC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,SAAjB,IAAhCH,gBAmBR,GAA0BT,EAAAA,EAAAA,UACvBS,GAAmBA,EAAgBI,OAhBrB,CACf,CACEC,QAAQ,EACRC,iBAAkB,WAClBC,gBAAgB,EAChBC,cAAe,GACfC,UAAW,GACXC,cAAe,WACfC,aAAa,EACbC,WAAY,GACZC,OAAQ,GACRC,SAAU,MAId,eAAOV,EAAP,KAAcW,EAAd,KAGA,IAAkCxB,EAAAA,EAAAA,WAAS,GAA3C,iBAAOyB,GAAP,MAAkBC,GAAlB,MACA,IAAgC1B,EAAAA,EAAAA,WAAS,GAAzC,iBAAO2B,GAAP,MAAiBC,GAAjB,MACA,IAAsC5B,EAAAA,EAAAA,WAAS,GAA/C,iBAAO6B,GAAP,MAAoBC,GAApB,MACMC,GAAalB,EAAMmB,MAAK,SAACC,GAAD,OAAOA,EAAEnB,MAAT,IAC9B,IAOIoB,EAAAA,EAAAA,IAAQ,CACVC,KAAM,WACNC,cAAeC,IAAAA,QAAU5B,GACrB,CACEhG,KAAM,GACN4D,YAAa,GACbI,SAAS,EACTD,UAAW,uBACXuC,iBAAkB,WAClBC,gBAAgB,EAChBC,cAAe,GACfC,UAAW,GACXC,cAAe,WACfC,aAAa,EACbC,WAAY,GACZC,OAAQ,GACRC,SAAU,IAEZ,CACE9G,KAAMgG,EAAgBhG,KACtB4D,YAAaoC,EAAgBpC,YAC7BI,QAASgC,EAAgBhC,QACzBD,UAAWiC,EAAgBjC,UAC3BuC,iBACEgB,IAAcA,GAAWhB,iBACrBgB,GAAWhB,iBACX,WACNC,kBACEe,KAAcA,GAAWf,iBACrBe,GAAWf,eAEjBC,cACEc,IAAcA,GAAWd,cACrBc,GAAWd,cACX,GACNC,UACEa,IAAcA,GAAWb,UAAYa,GAAWb,UAAY,GAC9DC,cACEY,IAAcA,GAAWZ,cACrBY,GAAWZ,cACX,WACNC,eACEW,KAAcA,GAAWX,cACrBW,GAAWX,YAEjBC,WACEU,IAAcA,GAAWV,WAAaU,GAAWV,WAAa,GAChEC,OAAQS,IAAcA,GAAWT,OAASS,GAAWT,OAAS,GAC9DC,SACEQ,IAAcA,GAAWR,SAAWQ,GAAWR,SAAW,MAvDlEhH,GADF,GACEA,QACA+H,GAFF,GAEEA,aACaC,GAHf,GAGEC,UAAaD,OACbE,GAJF,GAIEA,UACAC,GALF,GAKEA,SACAC,GANF,GAMEA,QAsDIC,GAAWH,GAAU,aAErBI,IAAa/C,EAAAA,EAAAA,cACjB,SAACgD,EAAQC,GACPvD,EAAMwD,KAAK,CACTC,UAAW,MACXtI,OAAQ,WACN,IAAIuI,EAAK,UAUT,MATe,UAAXJ,EACFI,EAAK,UACe,YAAXJ,EACTI,EAAK,YACe,SAAXJ,EACTI,EAAK,eACe,YAAXJ,IACTI,EAAK,eAGL,SAAC9E,EAAA,EAAD,CACEpE,MAAO,CACLG,UAAUd,EAAAA,EAAAA,IAAG,IACbe,WAAY,iBACZC,MAAO,WAET8I,EAAG,EACHD,GAAIA,EACJE,QAAS,OARX,SAUGL,GAGN,GAEJ,GACD,CAACvD,IAGG6D,GAAW,yCAAG,WAAOxF,GAAP,4FAOZyF,EAAoBzC,EAAM0C,QAC9B,SAACC,GAAD,MAA8B,aAAvBA,EAAEzC,kBAAuD,aAApByC,EAAErC,aAA9C,MAGuBmC,EAAkBG,OAAS,GAXlC,uBAYhBZ,GAAW,QAAS,6CACpBjB,IAAY,GAbI,iCAiBZ8B,EAAW,CACfjJ,KAAMoD,EAAKpD,KACX4D,YAAaR,EAAKQ,YAClBI,QAASZ,EAAKY,QACdD,UAAWX,EAAKW,UAChBqC,MAAOA,EAAM8C,KAAI,SAACrG,EAAMsG,GAEtB,OADAtG,EAAKuG,KAAOD,EAAQ,EACbtG,CACR,KAKCmD,GAAmBA,EAAgB7B,MACrC8E,EAAQ,IAAUjD,EAAgB7B,KAG9BkF,EAAUrD,EAEZsD,EAAAA,GAA+BL,GAD/BK,EAAAA,GAA+BL,GAE/BM,GAAO,EACPvD,WACIwD,EAAKxD,GACDK,cACHmD,EAAGvF,YACHuF,EAAGtF,YAEVqF,EAAO3B,IAAAA,QAAU4B,EAAIP,IAGjBX,EAAOW,EAAS9E,IAElB,iCADA,iCAhDc,oBAoDVpB,EAASsG,GApDC,QAsDZI,EAGJrB,GAAW,UAAWE,GACtBnB,IAAY,GACPnB,EAGCuD,EACFnE,KAEAW,EAAe,CACbP,OAAQ,aACRC,KAAM,sIACNC,QAAS,OACTC,SAAU,GACVC,IAAK,WAAQ,EACbC,GAAIT,IAEND,GAAe,IAbjBC,IA5Dc,mDA6EhBsE,QAAQC,IAAI,gBAAZ,MACAvB,GAAW,QAAS,KAAIwB,SACxBzC,IAAY,GA/EI,2DAAH,uDAmFjB0C,EAAAA,EAAAA,YAAU,WACJ3C,IACFW,GAAae,IAAa,WACxBzB,IAAY,EACb,GAFDU,EAIH,GAAE,CAACX,MAEJ2C,EAAAA,EAAAA,YAAU,WACuB,oBAA3B7B,GAAU,eACZC,GAAS,kBAAkB,GAC3BC,GAAQ,kBACRD,GAAS,eAAe,GACxBC,GAAQ,eACRb,IAAe,GAElB,GAAE,CAACc,GAAUH,GAAWC,GAAUC,MAEnC2B,EAAAA,EAAAA,YAAU,WAkCJzC,IAjCe,WACjB,IAAI0C,EAAc1D,EACZ2D,EAAcD,EAAYE,WAAU,SAACnH,GAAD,OAA0B,IAAhBA,EAAKwD,MAAf,IAC1CyD,EAAYC,GAAe,CACzB1D,QAAQ,EACRI,UACEuB,IACAA,GAAU,cACVA,GAAU,aAAaiC,WACzB1D,eAAgByB,IAAaA,GAAU,kBACvCxB,cACEwB,IACAA,GAAU,kBACVA,GAAU,iBAAiBiC,WAC7B3D,iBAAkB0B,IAAaA,GAAU,oBACzCnB,OACEmB,IAAaA,GAAU,WAAaA,GAAU,UAAUiC,WAC1DnD,SACEkB,IACAA,GAAU,aACVA,GAAU,YAAYiC,WACxBtD,YACEqB,IAAaA,GAAU,gBAAkBA,GAAU,eACrDpB,WACEoB,IACAA,GAAU,eACVA,GAAU,cAAciC,WAC1BvD,cAAesB,IAAaA,GAAU,kBAGxCX,IAAe,GACfN,EAAS+C,EACV,CAECI,EAEH,GAAE,CAAClC,GAAWZ,GAAahB,IAE5B,IAyEM+D,GAAa,WACjB,IAAMC,EAAiBhE,EAAM0C,QAAO,SAACjG,GAAD,OAAWA,EAAKwD,MAAhB,IAG9BgE,EAAWD,EAAeA,EAAepB,OAAS,GACxDoB,EAAeA,EAAepB,OAAS,GAAG3C,QAAS,EACnDgE,EAAShE,QAAS,EAClB4B,GACE,mBACAoC,EAAS/D,iBAAmB+D,EAAS/D,iBAAmB,YAE1D2B,GACE,gBACAoC,EAAS3D,cAAgB2D,EAAS3D,cAAgB,YAEpDuB,GAAS,gBAAiBoC,EAAS7D,eACnCyB,GAAS,aAAcoC,EAASzD,YAChCqB,GAAS,YAAaoC,EAAS5D,WAC/BwB,GAAS,SAAUoC,EAASxD,QAC5BoB,GAAS,WAAYoC,EAASvD,UAC9BC,EAASqD,GACThC,GAAW,UAAW,8BACtBjD,GAAe,EAChB,EAEKmF,GAAa,yCAAG,6FAChBtE,IAAmBA,EAAgB7B,IADnB,wBAElB8C,IAAa,GAFK,SAIVoC,EAASC,EAAAA,GAA+BtD,EAAgB7B,KAJ9C,SAKVpB,EAASsG,GALC,OAMhBjB,GAAW,UAAW,kCACtBvD,EAAS,cAPO,kDASI,sBAAhB,KAAI+E,SACN7D,EAAe,CACbP,OAAQ,SACRC,KAAM,8HACNC,QAAS,OACTC,SAAU,GACVC,IAAK,WAAQ,EACbC,GAAIT,IAENtC,GAAU,IAEVsF,GAAW,MAAO,KAAIwB,SAExB3C,IAAa,GAtBG,0DAAH,qDA2BnB,GAAyB,IAArB5C,EAAU2E,OACZ,OACE,UAACuB,EAAA,EAAD,CAAQC,KAAM,EAAd,WACE,SAAC7G,EAAA,EAAD,kCACA,SAAC8G,EAAA,EAAD,CACElL,MAAO,CAAEK,MAAOyC,EAAAA,EAAAA,QAAgBqI,OAAQ,EAAGC,kBAAmB,GAC9DzH,QAAS,WAAQ,EAFnB,UAIE,SAACS,EAAA,EAAD,CAAMpE,MAAO,CAAEK,MAAO,SAAtB,sCAMR,IAAMgL,GAAoB,CACxB,CAAE5K,KAAM,gBAAiBmE,IAAK,WAAY0G,aAAc,aADhC,eAErBxG,IAEFyE,QAAO,SAACC,GAAD,MAA0B,aAAnBA,EAAE8B,YAAT,IACP3B,KAAI,SAACrG,GACJ,MAAO,CAAEpD,MAAOoD,EAAK7C,KAAMK,MAAOwC,EAAKsB,IACxC,IAEG2G,GAAiB,CACrB,CAAE9K,KAAM,iBAAkBmE,IAAK,WAAY0G,aAAc,UADpC,eAElBxG,IAEFyE,QAAO,SAACC,GAAD,MAA0B,UAAnBA,EAAE8B,YAAT,IACP3B,KAAI,SAACrG,GACJ,MAAO,CAAEpD,MAAOoD,EAAK7C,KAAMK,MAAOwC,EAAKsB,IACxC,IAQG4G,GANe,CACnB,uBACA,kBACA,gBAGsC7B,KAAI,SAACrG,GAC3C,MAAO,CAAEpD,MAAOoD,EAAMxC,MAAOwC,EAC9B,IAEKmI,IAAW,OAAIC,MAAM,IAAIC,QAAQhC,KAAI,SAACrG,GAC1C,MAAO,CACLpD,MAAO0L,MAASC,QAAQ,OAAOC,IAAIxI,EAAM,SAASyI,OAAO,SACzDjL,MAAOwC,EAAKoH,WAEf,IAED,OAAOjD,IACL,SAACuD,EAAA,EAAD,CAAQ9B,GAAI,QAAS+B,KAAM,EAA3B,UACE,SAACe,EAAA,EAAD,CAAShL,KAAM,QAASX,MAAOyC,EAAAA,EAAAA,aAGjC,+BACE,UAACgB,EAAA,EAAD,CAAQoF,GAAI,QAAS+C,GAAI,GAAzB,WACE,SAACC,EAAA,QAAD,CACElL,KAAM,KAONiF,OACEQ,GAAmBA,EAAgB7B,IAC/B,gBACA,kBAENC,OAAQA,EACRsH,MAAO,WACLtG,GACD,EACD4B,UAAWE,GACXyE,KAAM,WAC+B,IAA/BC,OAAOV,KAAKpD,IAAQkB,QACtB7B,IAAY,EAEf,EACD0E,YAAa,CACX/H,eAAgB,iBAGlBgI,SACE,UAACjI,EAAA,EAAD,CAAQC,eAAgB,gBAAiBP,MAAO,OAAQwI,MAAO,EAA/D,WACE,SAAClI,EAAA,EAAD,CAAQC,eAAgB,aAAciI,MAAO,EAA7C,UACE,SAACC,EAAA,QAAD,CACED,MAAO,EACPtM,MAAc,SAAP6E,GAAwB,OAAPA,EAAc,IAAM,WAE5CpB,QAAS,WAE2B,aAAhCoE,GAAWhB,kBACkB,aAA7BgB,GAAWZ,cA1NZ,WACjB,IAKMuF,EAAmB,WACnBC,EAAgB,WAEhBpC,EARc1D,EAAM8C,KAAI,SAACrG,EAAMsG,GAEnC,OADAtG,EAAKwD,QAAS,EACPxD,CACR,IAKiCsJ,OAAO,CACvC9F,QAAQ,EACRC,iBAAkB2F,EAClB1F,gBAAkD,EAClDC,cAAe,GACfC,UAAW,GACXC,cAAewF,EACfvF,aAA4C,EAC5CC,WAAY,GACZC,OAAQ,GACRC,SAAU,KAKZmB,GAAS,mBAAoBgE,GAC7BhE,GAAS,gBAAiBiE,GAC1BjE,GAAS,gBAAiB,IAC1BA,GAAS,aAAc,IACvBA,GAAS,YAAa,IACtBA,GAAS,SAAU,IACnBA,GAAS,WAAY,IACrBlB,EAAS+C,EACV,CAmMiBsC,GAPEhE,GACE,QACA,iEAML,EACD7I,MAAO,CAELC,QAAQV,EAAAA,EAAAA,IAAG,UAIjB,UAAC+E,EAAA,EAAD,CAAQC,eAAgB,WAAYiI,MAAO,EAA3C,UACG/F,GAAmBA,EAAgB7B,MAClC,SAAC6H,EAAA,QAAD,CACED,MAAO,EACP7K,QAAQ,UACRzB,MAAc,SAAP6E,GAAwB,OAAPA,EAAc,IAAM,SAC5C/E,MAAO,CAELC,QAAQV,EAAAA,EAAAA,IAAG,IACX6C,gBAAiB,qBAEnBuB,QAAS,WACP6C,EAAe,CACbP,OAAQ,UACRC,KAAM,iDACNC,QAAS,KACTC,SAAU,MACVC,IAAK0E,GACLzE,GAAIP,IAENH,GAAe,EAEhB,KAGL,SAAC6G,EAAA,QAAD,CACED,MAAO,EACPnM,MAAOyC,EAAAA,EAAAA,QACPnB,QAAQ,UACRzB,MAAO,SACPyD,QAAS,WACPkC,GACD,EACD7F,MAAO,CAELC,QAAQV,EAAAA,EAAAA,IAAG,QAGf,SAACkN,EAAA,QAAD,CACED,MAAO,EACPtM,MAAO,OACPuH,UAAWE,GACX3H,MAAO,CAELC,QAAQV,EAAAA,EAAAA,IAAG,KAEboE,QAAS,WAE2B,aAAhCoE,GAAWhB,kBACkB,aAA7BgB,GAAWZ,cAQsB,IAA/BkF,OAAOV,KAAKpD,IAAQkB,QACtB7B,IAAY,GAPZiB,GACE,QACA,sEAOL,UAlHX,UAwHE,UAAC/E,EAAA,EAAD,CAAQ9D,MAAO,CAAE8M,KAAM,OAAvB,WACE,SAACxI,EAAA,EAAD,CACEkI,MAAO,EACPxM,MAAO,CACLgE,MAAc,SAAPe,GAAwB,OAAPA,EAAc,QAAS1F,EAAAA,EAAAA,IAAG,KAClDkF,eAAgB,gBAEhBwI,cAAcxN,EAAAA,EAAAA,IAAG,KANrB,UASE,SAACC,EAAA,EAAD,CACEiB,KAAK,OACLP,MAAO,gBACPuC,YAAY,gBACZlC,QAASA,GACTC,MAAO,CACLwM,SAAU,CACRlM,OAAO,EACPuJ,QAAS,8BAGbvK,UAASyI,GAAO9H,KAChBkC,MAAO4F,GAAO9H,KAAO8H,GAAO9H,KAAK4J,QAAU,GAC3C4C,WAAY,CAAC,OAIjB,SAAC3I,EAAA,EAAD,CACEkI,MAAO,EACPxM,MAAO,CACLgE,MAAc,SAAPe,GAAwB,OAAPA,EAAc,QAAS1F,EAAAA,EAAAA,IAAG,KAClDkF,eAAgB,gBAEhBL,gBAAgB3E,EAAAA,EAAAA,IAAG,KANvB,UASE,SAACC,EAAA,EAAD,CACEiB,KAAK,cACLP,MAAO,uBACPuC,YAAY,uBACZlC,QAASA,GACTC,MAAO,CACLwM,SAAU,CACRlM,OAAO,EACPuJ,QAAS,qCAGbvK,UAASyI,GAAOlE,YAChB1B,MAAO4F,GAAOlE,YAAckE,GAAOlE,YAAYgG,QAAU,GACzD4C,WAAY,CAAC,OAIjB,UAAC3I,EAAA,EAAD,CACEkI,MAAO,EACPxM,MAAO,CACLgE,MAAc,SAAPe,GAAwB,OAAPA,EAAc,UAAW1F,EAAAA,EAAAA,IAAG,KACpDkF,eAAgB,gBAChB7B,WAAWnD,EAAAA,EAAAA,IAAG,IACdwN,cAAcxN,EAAAA,EAAAA,IAAG,KANrB,WASE,SAAC2N,EAAA,EAAD,CACE3M,QAASA,GACT4M,MAAO3B,GACP/K,KAAK,YACLP,MAAM,cACNuC,YAAY,qBACZ3C,UAASyI,GAAO9H,KAChBkC,MAAO4F,GAAO9H,KAAO8H,GAAO9H,KAAK4J,QAAU,GAC3C7J,MAAO,CACLwM,SAAU,CACRlM,OAAO,EACPuJ,QAAS,0BAIf,SAAC+C,EAAA,EAAD,CACE7L,KAAK,SACLhB,QAASA,GACT0C,UAAW,SAACD,GACV0F,GAAS,UAAW1F,GACpB2F,GAAQ,UACT,EACD0E,GAAG,UACH5M,KAAK,UACLP,MAAM,qBACNoN,UAAW7E,GAAU,WAErB3I,UAASyI,GAAO9D,QAChB9B,MAAO4F,GAAO9D,QAAU8D,GAAO9D,QAAQ4F,QAAU,GACjD7J,MAAO,CAAC,OAGXqG,EAAM8C,KAAI,SAACrG,EAAMiK,GAChB,OACE,UAACzJ,EAAA,EAAD,CACEsF,QAAS,KAETpJ,MAAO,CACL+D,UAAW,wBACX3B,iBAAiC,IAAhBkB,EAAKwD,OAAmB,UAAY,OACrD5C,gBAAgB3E,EAAAA,EAAAA,IAAG,IACnB6L,mBAAmB7L,EAAAA,EAAAA,IAAG,IACtBiO,iBAAiBjO,EAAAA,EAAAA,IAAG,IACpByE,MAAc,SAAPe,GAAwB,OAAPA,EAAc,QAAS1F,EAAAA,EAAAA,IAAG,MATtD,WAYE,SAACqE,EAAA,GAAD,CACEC,QAAS,YAxXJ,SAAC8J,GACtB,GAAqB,IAAjB5G,EAAM4C,QAAiBhD,EAA3B,CAGA,IAAMiH,EAAW7G,EAAM8C,KAAI,SAACrG,EAAMsG,GAChC,OAAIA,IAAU6D,GACZ/E,GACE,mBACApF,EAAKyD,iBAAmBzD,EAAKyD,iBAAmB,YAElD2B,GACE,gBACApF,EAAK6D,cAAgB7D,EAAK6D,cAAgB,YAE5CuB,GACE,mBACApF,EAAK0D,gBAAiB1D,EAAK0D,gBAE7B0B,GAAS,gBAAiBpF,EAAK2D,cAAgB3D,EAAK2D,cAAgB,IACpEyB,GAAS,YAAapF,EAAK4D,UAAY5D,EAAK4D,UAAY,IACxDwB,GAAS,gBAAepF,EAAK8D,aAAc9D,EAAK8D,aAChDsB,GAAS,aAAcpF,EAAK+D,WAAa/D,EAAK+D,WAAa,IAC3DqB,GAAS,SAAUpF,EAAKgE,OAAShE,EAAKgE,OAAS,IAC/CoB,GAAS,WAAYpF,EAAKiE,SAAWjE,EAAKiE,SAAW,IACrDoB,KAEArF,EAAKwD,QAASxD,EAAKwD,OACdxD,EAAKyD,mBACRzD,EAAKyD,iBAAmB,YAEnBzD,IAEPA,EAAKwD,QAAS,EACPxD,EAEV,IACDkE,EAASkG,EAjCR,CAkCF,CAoVmBC,CAAeJ,EAChB,EACDvN,MAAO,CAAE+M,aAAczJ,EAAKwD,QAASvH,EAAAA,EAAAA,IAAG,IAAM,GAJhD,UAME,UAAC+E,EAAA,EAAD,CACEsJ,GAAI,EACJ5N,MAAO,CACL6N,kBAAmBvK,EAAKwD,QAASzH,EAAAA,EAAAA,IAAG,GAAK,EACzCyO,kBAAmB,oBACnBvJ,eAAgB,iBALpB,WAQE,UAACH,EAAA,EAAD,CACEpE,MAAO,CACL+N,WAAY,EACZ3N,WAAY,UACZD,SAAU,GACVE,MAAOyC,EAAAA,EAAAA,SALX,kBAQQyK,EAAM,MAGd,SAACvC,EAAA,EAAD,WACE,SAACgD,EAAA,EAAD,YAIW,IAAhB1K,EAAKwD,SACJ,UAAChD,EAAA,EAAD,CAAQiJ,aAA+B,IAAjBlG,EAAM4C,QAAelK,EAAAA,EAAAA,IAAG,IAAM,EAApD,WACE,UAAC+E,EAAA,EAAD,CACEkI,MAAO,EACPxM,MAAO,CACLgE,MACS,SAAPe,GAAwB,OAAPA,EAAc,QAAS1F,EAAAA,EAAAA,IAAG,KAC7CkF,eAAgB,gBAChBwI,cAAcxN,EAAAA,EAAAA,IAAG,KANrB,WASE,SAAC2N,EAAA,EAAD,CACE3M,QAASA,GACT4M,MAAO9B,GACP5K,KAAK,mBACL4M,GAAG,mBACHnN,MAAM,0BACNuC,YAAY,uBACZ5B,SAAU,SAACmC,GACT0F,GAAS,mBAAoB1F,GAC7B2F,GAAQ,oBAERD,GAAS,kBAAkB,GAC3BC,GAAQ,kBAERb,IAAe,SAACmG,GAAD,OAAQA,CAAR,GAChB,EACDnO,UAASyI,GAAOxB,iBAChBpE,MACE4F,GAAOxB,iBACHwB,GAAOxB,iBAAiBsD,QACxB,GAEN7J,MAAO,CACLwM,SAAU,CACRlM,OAAO,EACPuJ,QAAS,qCAIf,SAAC+C,EAAA,EAAD,CACEc,WAC4B,aAA1B5K,EAAKyD,kBACsB,oBAA3B0B,GAAU,aAIZlI,QAASA,GACT0C,UAAW,SAACD,GACV0F,GAAS,iBAAkB1F,GAC3B2F,GAAQ,kBACRb,IAAe,EAChB,EACDuF,GAAG,iBACH5M,KAAK,iBACLP,MAAM,wBACNoN,UAAWhK,EAAK0D,eAEhBlH,UAASyI,GAAOvB,eAChBrE,MACE4F,GAAOvB,eACHuB,GAAOvB,eAAeqD,QACtB,GAEN7J,MAAO,CAAC,QAGa,IAAxB8C,EAAK0D,iBACJ,UAAC1C,EAAA,EAAD,CACEkI,MAAO,EACPxM,MAAO,CACLgE,MACS,SAAPe,GAAwB,OAAPA,EAAc,QAAS1F,EAAAA,EAAAA,IAAG,KAC7CkF,eAAgB,gBAChBL,gBAAgB3E,EAAAA,EAAAA,IAAG,KANvB,WASE,SAACC,EAAA,EAAD,CACE2O,OAAO,SACP5N,QAASA,GACT8M,GAAG,gBACH5M,KAAK,gBACLP,MACS,SAAP6E,GAAwB,OAAPA,EACb,iBACA,iCAENtC,YAAY,KACZrB,UAAW,EAMXM,aAAc,SAACsB,GAGb8E,IAAe,EAChB,EACDhI,UAASyI,GAAOtB,cAChBtE,MACE4F,GAAOtB,cACHsB,GAAOtB,cAAcoD,QACrB,GAEN7J,MAAO,CACLwM,SAAU,CACRlM,OAAO,EACPuJ,QAAS,sCAKf,SAAC7K,EAAA,EAAD,CACEe,QAASA,GACT8M,GAAG,YACH5M,KAAK,YACLP,MAAM,2BACNuC,YAAY,IACZrB,UAAW,EACX4L,UAAQ,EAIRtL,aAAc,SAACsB,GAGb8E,IAAe,EAChB,EACDhI,UAASyI,GAAOrB,UAChBvE,MACE4F,GAAOrB,UAAYqB,GAAOrB,UAAUmD,QAAU,GAEhD7J,MAAO,CACLwM,SAAU,CACRlM,OAAO,EACPuJ,QAAS,oCAMnB,UAAC/F,EAAA,EAAD,CACEkI,MAAO,EACPxM,MAAO,CACLgE,MACS,SAAPe,GAAwB,OAAPA,EAAc,QAAS1F,EAAAA,EAAAA,IAAG,KAC7CkF,eAAgB,gBAChB7B,WAAWnD,EAAAA,EAAAA,IAAG,IACdwN,cAAcxN,EAAAA,EAAAA,IAAG,KAPrB,WAUE,SAAC2N,EAAA,EAAD,CACE3M,QAASA,GACT4M,MAAO5B,GACP9K,KAAK,gBACL4M,GAAG,gBACHnN,MACS,SAAP6E,GAAwB,OAAPA,EACb,gBACA,4BAENtC,YAAY,yBACZ5B,SAAU,SAACmC,GACT0F,GAAS,gBAAiB1F,GAC1B2F,GAAQ,iBAERD,GAAS,eAAe,GACxBC,GAAQ,eAERb,IAAe,SAACmG,GAAD,OAAQA,CAAR,GAChB,EACDnO,UAASyI,GAAOpB,cAChBxE,MACE4F,GAAOpB,cACHoB,GAAOpB,cAAckD,QACrB,GAEN7J,MAAO,CACLwM,SAAU,CACRlM,OAAO,EACPuJ,QAAS,gCAKf,SAAC+C,EAAA,EAAD,CACEc,WACyB,aAAvB5K,EAAK6D,cAEP5G,QAASA,GACT0C,UAAW,SAACD,GACV0F,GAAS,cAAe1F,GACxB2F,GAAQ,eACRb,IAAe,EAChB,EACDuF,GAAG,cACH5M,KAAK,cACLP,MAAM,0BACNoN,UAAWhK,EAAK8D,YAEhBtH,UAASyI,GAAOnB,YAChBzE,MACE4F,GAAOnB,YAAcmB,GAAOnB,YAAYiD,QAAU,GAEpD7J,MAAO,CAAC,QAGU,IAArB8C,EAAK8D,aACmB,aAAvB9D,EAAK6D,gBACH,UAAC7C,EAAA,EAAD,CACEkI,MAAO,EACPxM,MAAO,CACLgE,MACS,SAAPe,GAAwB,OAAPA,EAAc,QAAS1F,EAAAA,EAAAA,IAAG,KAC7CkF,eAAgB,gBAChB7B,WAAWnD,EAAAA,EAAAA,IAAG,IACdwN,cAAcxN,EAAAA,EAAAA,IAAG,KAPrB,WAUE,SAACC,EAAA,EAAD,CACE2O,OAAO,SACP5N,QAASA,GACT8M,GAAG,aACH5M,KAAK,aACLP,MACS,SAAP6E,GAAwB,OAAPA,EACb,iBACA,iCAENtC,YAAY,KACZrB,UAAW,EACX4L,UAAQ,EAERtL,aAAc,SAACsB,GAIb8E,IAAe,EAChB,EACDhI,UAASyI,GAAOlB,WAChB1E,MACE4F,GAAOlB,WACHkB,GAAOlB,WAAWgD,QAClB,GAGN7J,MAAO,CACLwM,SAAU,CACRlM,OAAO,EACPuJ,QACE,6CAKR,SAAC+D,EAAA,EAAD,CAAQC,KAAK,KAAb,UACE,SAAC7O,EAAA,EAAD,CACE2O,OAAO,SACP5N,QAASA,GACT8M,GAAG,SACH5M,KAAK,SACLP,MAAM,2BACNuC,YAAY,IACZrB,UAAW,EAEXM,aAAc,SAACsB,GAGb8E,IAAe,EAChB,EACDhI,UAASyI,GAAOjB,OAChB3E,MACE4F,GAAOjB,OAASiB,GAAOjB,OAAO+C,QAAU,GAE1C7J,MAAO,CACLwM,SAAU,CACRlM,OAAO,EACPuJ,QAAS,mCAKjB,SAAC+D,EAAA,EAAD,CAAQE,KAAM,CAAC,OAAQ,MAAvB,UACE,SAAChK,EAAA,EAAD,CAAQkI,MAAO,EAAf,UACE,SAAChN,EAAA,EAAD,CACEQ,MAAO,CAAEgE,MAAO,OAChBmK,OAAO,SACP5N,QAASA,GACT8M,GAAG,SACH5M,KAAK,SACLP,MAAM,wBACNuC,YAAY,IACZrB,UAAW,EAEXM,aAAc,SAACsB,GAGb8E,IAAe,EAChB,EACDhI,UAASyI,GAAOjB,OAChB3E,MACE4F,GAAOjB,OAASiB,GAAOjB,OAAO+C,QAAU,GAE1C7J,MAAO,CACLwM,SAAU,CACRlM,OAAO,EACPuJ,QAAS,wCAoCzB,SAAC6C,EAAA,EAAD,CACElN,MAAO,CAAEgE,MAAO,MAAOtB,UAAU,GAAIqK,aAAc,IACnDwB,UAAQ,EACRJ,OAAO,IACP5N,QAASA,GACTgB,KAAK,SACL4L,MAAO1B,GACPhL,KAAK,WACL4M,GAAG,WACHnN,MAAM,YACNuC,YAAY,mBACZ5B,SAAU,SAACmC,GACT8E,IAAe,EAChB,EACDhI,UAASyI,GAAOhB,SAChB5E,MAAO4F,GAAOhB,SAAWgB,GAAOhB,SAAS8C,QAAU,GACnD7J,MAAO,CACLwM,SAAU,CACRlM,OAAO,EACPuJ,QAAS,0BAMlBxD,EAAM4C,OAAS,GAAKnG,EAAKwD,SACxB,SAACkE,EAAA,EAAD,CACEhL,MAAO,CACLwO,WAAY,WACZhB,gBAAiB,GACjBiB,aAAc,IAJlB,UAOE,SAACrK,EAAA,EAAD,CACEpE,MAAO,CAAEK,MAAO,MAAOF,SAAU,IACjCwD,QAAS,WACP6C,EAAe,CACbP,OAAQ,UACRC,KAAM,6CACNC,QAAS,KACTC,SAAU,MACVC,IAAKuE,GACLtE,GAAIT,IAEND,GAAe,EAChB,EAZH,6BAhaC,OAAS2H,EAobnB,UAGL,SAACrB,EAAA,QAAD,CACElL,KAAK,KACL6D,OAAQc,EACRwG,MAAOpG,EACPE,OAAQM,EAAYN,OACpBsG,SACE,UAACjI,EAAA,EAAD,CAAQkI,MAAO,EAAf,WACE,SAACC,EAAA,QAAD,CACED,MAAO,EACP7K,QAAQ,UACRzB,MAAOqG,EAAYJ,QACnBxC,QAAS4C,EAAYD,GACrB3G,IAAK+F,IAGNa,EAAYH,WACX,SAACqG,EAAA,QAAD,CACED,MAAO,EAEPtM,MAAOqG,EAAYH,SACnBzC,QAAS4C,EAAYF,SApB/B,UA0BE,SAACjC,EAAA,EAAD,CACEpE,MAAO,CACLI,WAAY,UACZD,UAAUd,EAAAA,EAAAA,IAAG,IACbgB,MAAO,mBAJX,SAOGkG,EAAYL,aAMxB,E,WCzoCKwI,EAAa,SAAC,GAQd,EAPJC,UAOI,EANJC,aAMK,IALLtJ,EAKI,EALJA,SACA/B,EAII,EAJJA,UACAC,EAGI,EAHJA,SACAqF,EAEI,EAFJA,WACA/D,EACI,EADJA,UAEA,GAAsCkB,EAAAA,EAAAA,WAAS,GAA/C,eAAOL,EAAP,KAAoBC,EAApB,KACA,OACE,UAAC9B,EAAA,EAAD,CACE9D,MAAO,CACLiE,kBAAkB5E,EAAAA,EAAAA,IAAG,IACrByO,kBAAmB,mBACnBD,kBAAmB,EACnBnL,WAAWnD,EAAAA,EAAAA,KAAI,KALnB,WAQE,UAAC+E,EAAA,EAAD,CAAQC,eAAgB,gBAAxB,WACE,SAACH,EAAA,EAAD,CACEpE,MAAO,CACLG,UAAUd,EAAAA,EAAAA,IAAG,IACbwP,YAAYtP,EAAAA,EAAAA,IAAG,IACfyE,OAAO3E,EAAAA,EAAAA,IAAG,KACVgB,MAAO,UACPD,WAAY,iBACZmE,eAAgB,cAPpB,SAUG,eAEH,SAAC6J,EAAA,EAAD,CAAQE,KAAM,CAAC,KAAM,QAArB,UACE,UAAChK,EAAA,EAAD,CAAQwK,UAAW,SAAnB,WACE,SAACpL,EAAA,GAAD,CACEC,QAAS,WACP2B,EAAS,aACV,EAHH,UAKE,SAAClB,EAAA,EAAD,CACEpE,MAAO,CACLG,UAAUd,EAAAA,EAAAA,IAAG,IACbwP,YAAYtP,EAAAA,EAAAA,IAAG,IACf6L,kBAAmB,GACnB/K,MAAOyC,EAAAA,EAAAA,QACP1C,WAAY,iBACZ6D,kBAAkB5E,EAAAA,EAAAA,IAAG,IACrB0P,eAAexP,EAAAA,EAAAA,IAAG,IAClBsO,mBAAmBtO,EAAAA,EAAAA,IAAG,GACtBuO,kBAAmB,yBAVvB,0BAgBF,SAACpK,EAAA,GAAD,CACEC,QAAS,WACP2B,EAAS,aACV,EAHH,UAKE,SAAClB,EAAA,EAAD,CACEpE,MAAO,CACLG,UAAUd,EAAAA,EAAAA,IAAG,IACbwP,YAAYtP,EAAAA,EAAAA,IAAG,IACf6L,kBAAmB,GACnB/K,MAAO,UACPD,WAAY,iBACZ6D,kBAAkB5E,EAAAA,EAAAA,IAAG,IACrB0P,eAAexP,EAAAA,EAAAA,IAAG,IAClBsO,mBAAmBtO,EAAAA,EAAAA,IAAG,GACtBuO,kBAAmB,yBAVvB,0BAgBF,SAACpK,EAAA,GAAD,CACEC,QAAS,WACP2B,EAAS,cACV,EAHH,UAKE,SAAClB,EAAA,EAAD,CACEpE,MAAO,CACLG,UAAUd,EAAAA,EAAAA,IAAG,IACbwP,YAAYtP,EAAAA,EAAAA,IAAG,IACf6L,kBAAmB,GACnB/K,MAAO,UACPD,WAAY,iBACZ6D,kBAAkB5E,EAAAA,EAAAA,IAAG,IACrB0P,eAAexP,EAAAA,EAAAA,IAAG,IAClBsO,mBAAmBtO,EAAAA,EAAAA,IAAG,GACtBuO,kBAAmB,yBAVvB,gCAkBN,SAACxJ,EAAA,EAAD,CACEtE,MAAO,CAAE0C,WAAWnD,EAAAA,EAAAA,IAAG,IAAKyE,OAAO3E,EAAAA,EAAAA,IAAG,MACtCmP,WAAY,SACZjK,eAAgB,WAChBiI,MAAO,EAJT,UAME,SAACC,EAAA,QAAD,CACE9I,SAAO,uBAAE,uFACHmB,GAAkC,IAArBA,EAAU2E,OADpB,gBAEL7D,GAAe,GAFV,gDAKGpC,EAAS,CACbjC,KAAMqC,EAAAA,GACNC,KAAM,OAPL,OASHN,GAAU,GATP,kDAWHsF,EAAW,QAAS,KAAIwB,SAXrB,0DAeTnK,MAAO,WACPF,MAAO,CAAEC,QAAQV,EAAAA,EAAAA,IAAG,aAI1B,SAAC6O,EAAA,EAAD,CAAQC,KAAK,KAAb,UACE,UAAC/J,EAAA,EAAD,CAAQwK,UAAW,SAAnB,WACE,SAACpL,EAAA,GAAD,CACEC,QAAS,WACP2B,EAAS,aACV,EAHH,UAKE,SAAClB,EAAA,EAAD,CACEpE,MAAO,CACLG,UAAUd,EAAAA,EAAAA,IAAG,IACbwP,YAAYtP,EAAAA,EAAAA,IAAG,IACf6L,kBAAmB,GACnB/K,MAAOyC,EAAAA,EAAAA,QACP1C,WAAY,iBACZ6D,kBAAkB5E,EAAAA,EAAAA,IAAG,IACrB0P,eAAexP,EAAAA,EAAAA,IAAG,IAClBsO,mBAAmBtO,EAAAA,EAAAA,IAAG,GACtBuO,kBAAmB,yBAVvB,0BAgBF,SAACpK,EAAA,GAAD,CACEC,QAAS,WACP2B,EAAS,aACV,EAHH,UAKE,SAAClB,EAAA,EAAD,CACEpE,MAAO,CACLG,UAAUd,EAAAA,EAAAA,IAAG,IACbwP,YAAYtP,EAAAA,EAAAA,IAAG,IACf6L,kBAAmB,GACnB/K,MAAO,UACPD,WAAY,iBACZ6D,kBAAkB5E,EAAAA,EAAAA,IAAG,IACrB0P,eAAexP,EAAAA,EAAAA,IAAG,IAClBsO,mBAAmBtO,EAAAA,EAAAA,IAAG,GACtBuO,kBAAmB,yBAVvB,0BAgBF,SAACpK,EAAA,GAAD,CACEC,QAAS,WACP2B,EAAS,cACV,EAHH,UAKE,SAAClB,EAAA,EAAD,CACEpE,MAAO,CACLG,UAAUd,EAAAA,EAAAA,IAAG,IACbwP,YAAYtP,EAAAA,EAAAA,IAAG,IACf6L,kBAAmB,GACnB/K,MAAO,UACPD,WAAY,iBACZ6D,kBAAkB5E,EAAAA,EAAAA,IAAG,IACrB0P,eAAexP,EAAAA,EAAAA,IAAG,IAClBsO,mBAAmBtO,EAAAA,EAAAA,IAAG,GACtBuO,kBAAmB,yBAVvB,gCAkBN,SAAC5B,EAAA,QAAD,CACElL,KAAK,KACL6D,OAAQc,EACRM,OAAQ,aACRkG,MAAO,WACLvG,GAAe,EAChB,EACD2G,SACE,UAACjI,EAAA,EAAD,CAAQkI,MAAO,EAAf,WACE,SAACC,EAAA,QAAD,CACED,MAAO,EACP7I,QAAS,WACPiC,GAAe,EAChB,EACD1F,MAAM,SACNyB,QAAQ,UACRtB,MAAOyC,EAAAA,EAAAA,QACP9C,MAAO,CACLC,QAAQV,EAAAA,EAAAA,IAAG,QAGf,SAACkN,EAAA,QAAD,CACED,MAAO,EACP7I,QAAS,WACP2B,EAAS,aACV,EACDpF,MAAM,eACNF,MAAO,CACLC,QAAQV,EAAAA,EAAAA,IAAG,UA5BrB,UAkCE,SAAC6E,EAAA,EAAD,CACEpE,MAAO,CACLI,WAAY,UACZD,UAAUd,EAAAA,EAAAA,IAAG,IACbgB,MAAO,mBAJX,uDAYP,EA8MD,EA5Mc,SAAC,GAAyB,IAAvB2O,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACfzL,GAAWC,EAAAA,EAAAA,MACX6B,GAAWC,EAAAA,EAAAA,MACXR,GAAKC,EAAAA,EAAAA,GAAmB,CAC5BC,KAAM,OACNC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,OAEAG,GAAQC,EAAAA,EAAAA,MACd,GAA0BO,EAAAA,EAAAA,UAAS,IAAnC,eAAOkJ,EAAP,KAAcC,EAAd,KACA,EAA4B1P,EAAAA,UAAe,GAA3C,eAAOoF,EAAP,KAAetB,EAAf,KAEA,GAAkCyC,EAAAA,EAAAA,UAAS,YAA3C,eAAO2I,EAAP,KAAkBC,EAAlB,KACA,GAAkC5I,EAAAA,EAAAA,WAAS,GAA3C,eAAOyB,EAAP,KAAkBC,EAAlB,KACA,GAAwC1B,EAAAA,EAAAA,WAAS,GAAjD,eAAOoJ,EAAP,KAAqBC,EAArB,KACA,GAAyBrJ,EAAAA,EAAAA,WAAS,GAA3BsJ,GAAP,eACA,GAAwBtJ,EAAAA,EAAAA,UAAS,GAAjC,eAAOuJ,GAAP,KAAaC,GAAb,KACA,IAA4C9I,EAAAA,EAAAA,KAC1C,SAACC,GAAD,OAAWA,EAAMC,SAAjB,IADqBA,GAAvB,GAAQ6I,cAA0BC,GAAlC,GAAkCA,MAG5B5K,IAAY4B,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAM7B,UAAU6K,aAA3B,IAExB9G,IAAa/C,EAAAA,EAAAA,cACjB,SAACgD,EAAQC,GACPvD,EAAMoK,WACNpK,EAAMwD,KAAK,CACTC,UAAW,MACX4G,SAAU,IACVlP,OAAQ,WACN,IAAIuI,EAAK,UAUT,MATe,UAAXJ,EACFI,EAAK,UACe,YAAXJ,EACTI,EAAK,YACe,SAAXJ,EACTI,EAAK,eACe,YAAXJ,IACTI,EAAK,eAGL,SAAC9E,EAAA,EAAD,CACEpE,MAAO,CACLG,UAAUd,EAAAA,EAAAA,IAAG,IACbe,WAAY,iBACZC,MAAO,WAET8I,EAAG,EACHD,GAAIA,EACJE,QAAS,OARX,SAUGL,GAGN,GAEJ,GACD,CAACvD,KAGH8E,EAAAA,EAAAA,YAAU,YACR,uBAAC,mGACO9G,EAASsM,EAAAA,GAA+B,EAAG,MADlD,0CAAD,EAGD,GAAE,CAACtM,IAEJ,IAAMuM,IAAgBjK,EAAAA,EAAAA,cAAW,uBAAC,0FAChCuJ,GAAgB,GADgB,kBAGxB7L,EAASuG,EAAAA,GAA+BwF,GAAML,IAHtB,sDAK9BrG,GAAW,QAAS,KAAIwB,SALM,OAOhCgF,GAAgB,GAPgB,yDAQ/B,CAAC7L,EAAUqF,GAAY0G,GAAML,KAEhC5E,EAAAA,EAAAA,YAAU,WAKR,OAJA5C,GAAa,GACbqI,KAAgBC,MAAK,WACnBtI,GAAa,EACd,IACM,WACLA,GAAa,GACb2H,GAAgB,EACjB,CACF,GAAE,CAAC7L,EAAUuM,GAAeR,KAE7B,IAAMU,GAAe,WACnB,OACE,SAACjF,EAAA,EAAD,CAAQkF,GAAI,IAAKjF,KAAM,EAAvB,UACE,SAAC7G,EAAA,EAAD,+BAGL,EAEK+L,GAAK,IAAMC,YAAW7Q,EAAAA,EAAAA,IAAG,KAAO,KAGlC8Q,GAAOC,KAAKC,MAAMC,OAAOC,OAAOzM,MADlB,KAMlB,OAJa,IAATqM,KACFA,GAAO,IAIP,UAACvM,EAAA,EAAD,CAAQ9D,MAAO,CAAE0Q,UAAW,SAAWxH,GAAI,QAAS+B,KAAM,EAA1D,WACE,SAAC0F,EAAA,QAAD,CAAQ3B,KAAMA,EAAMC,UAAWA,KAC/B,UAACnL,EAAA,EAAD,CAAQ7D,OAAQkQ,GAAhB,WACE,SAACzB,EAAD,CACE5J,UAAWA,GACXQ,SAAUA,EACVsJ,aAAcA,EACdD,UAAWA,EACXpL,UAAWA,EACXC,SAAUA,EACVqF,WAAYA,KAEbpB,GACC,SAACuD,EAAA,EAAD,CAAQC,KAAM,EAAd,UACE,SAACe,EAAA,EAAD,CAAShL,KAAM,QAASX,MAAOyC,EAAAA,EAAAA,aAGjC,gCACY,IAATuN,IACC,SAACO,EAAA,EAAD,CAEE5Q,MAAO,CACL+N,WAAmB,SAAPhJ,GAAwB,OAAPA,GAAc1F,EAAAA,EAAAA,KAAI,IAAM,GAEvDwR,sBAAuB,CAAE9B,cAAe,IACxC+B,oBAAoB,SAACb,GAAD,IACpBc,WAAY3B,EACZ4B,uBAAuB,EACvBnN,KAAM+C,GACNqK,aAAc,SAAC3N,GAAD,OAAUA,EAAKsB,GAAf,EACdsM,WAAY,YAAe,IAAZ5N,EAAW,EAAXA,KACb,OACE,SAAC,EAAD,CACE+M,KAAMA,GACN/M,KAAMA,EACNC,UAAWA,EACX+L,eAAgBA,GAGrB,GAnBI,QAAUe,KA2BjB,SAACO,EAAA,EAAD,CAEE5Q,MAAO,CACL+N,WAAmB,SAAPhJ,GAAwB,OAAPA,GAAc1F,EAAAA,EAAAA,KAAI,IAAM,GAEvDwR,sBAAuB,CAAE9B,cAAe,IACxC+B,oBAAoB,SAACb,GAAD,IACpBc,WAAY3B,EACZ4B,uBAAuB,EACvBnN,KAAM+C,GACNqK,aAAc,SAAC3N,GAAD,OAAUA,EAAKsB,GAAf,EACdsM,WAAY,YAAe,IAAZ5N,EAAW,EAAXA,KACb,OACE,SAAC,EAAD,CACE+M,KAAMA,GACN/M,KAAMA,EACNC,UAAWA,EACX+L,eAAgBA,GAGrB,EACD6B,mBAAoB,CAClB5M,eACEqC,GAAU6C,OAAS,EAAI,gBAAkB,cAE7C2H,WAAY,GAxBP,QAAUf,IA2BlBX,GAAQR,IACP,SAACmC,EAAA,EAAD,CACEnC,MAAOA,EACPQ,MAAOA,GACPH,KAAMA,GACNC,QAASA,GACT9H,aAAcA,EACdyH,SAAUA,OAKjBtK,IACC,SAAC,EAAD,CACEA,OAAQA,EACRtB,UAAWA,EACXuB,UAAWA,UAMtB,C","sources":["components/ShadowInput.js","components/ShadowSwitch.js","constants/Colors.js","pages/private/campaigns/VerticalItem.js","pages/private/campaigns/AddCampaign.js","pages/private/campaigns/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Input, FormControl } from \"native-base\";\r\nimport { Controller } from \"react-hook-form\";\r\nimport Util from \"../util\";\r\nconst { vw, vh } = Util;\r\n\r\nconst ShadowInput = React.forwardRef((props, ref) => {\r\n  return (\r\n    <FormControl\r\n      isRequired={props.isRequired}\r\n      isInvalid={props.invalid}\r\n      isReadOnly={props.isReadOnly || false}\r\n      style={{\r\n        height: vh(48),\r\n        ...props.style,\r\n      }}\r\n    >\r\n      {props.label && (\r\n        <FormControl.Label\r\n          style={{\r\n            fontSize: vw(13),\r\n            fontFamily: \"Poppins_medium\",\r\n            color: props.invalid ? \"red.500\" : \"rgba(102, 102, 102, 0.7)\",\r\n            height: vh(19),\r\n            ...props.labelstyle,\r\n          }}\r\n        >\r\n          {props.label}\r\n        </FormControl.Label>\r\n      )}\r\n\r\n      <Controller\r\n        control={props.control}\r\n        rules={props.rules}\r\n        name={props.name}\r\n        style={{\r\n          zIndex: 1,\r\n        }}\r\n        render={({ field: { onChange, onBlur, value } }) => (\r\n          <Input\r\n            isReadOnly={props.isReadOnly || false}\r\n            ref={ref}\r\n            size={props.size || \"lg\"}\r\n            multiline={props.multiline || false}\r\n            numberOfLines={props.numberOfLines || 1}\r\n            minLength={props.minLength || 1}\r\n            maxLength={props.maxLength || 255}\r\n            isInvalid={props.invalid}\r\n            autoComplete='off'\r\n            autoFocus={props.autoFocus || false}\r\n            type={props.type || \"text\"}\r\n            onSubmitEditing={props.onSubmitEditing}\r\n            onKeyPress={props.onKeyPress}\r\n            onChangeText={(value) => {\r\n              onChange(value);\r\n              if (props.onChangeText) {\r\n                props.onChangeText();\r\n              }\r\n            }}\r\n            value={value || \"\"}\r\n            variant={\"outline\"}\r\n            invalidOutlineColor={\"red.300\"}\r\n            focusOutlineColor={\"rgba(0, 0, 0, 0.15)\"}\r\n            _invalid={{\r\n              borderColor: \"red.300\",\r\n              borderWidth: \"1\",\r\n            }}\r\n            _light={{\r\n              borderWidth: \"1\",\r\n            }}\r\n            _dark={{\r\n              borderWidth: \"1\",\r\n            }}\r\n            _web={{\r\n              borderWidth: \"1\",\r\n            }}\r\n            style={{\r\n              fontSize: vw(15),\r\n              fontFamily: \"Poppins_medium\",\r\n              backgroundColor: \"white\",\r\n              zIndex: 1,\r\n              height: props.height || vh(36),\r\n            }}\r\n            InputLeftElement={props.leftIcon || null}\r\n            InputRightElement={props.rightIcon || null}\r\n            placeholder={props.placeholder}\r\n          />\r\n        )}\r\n      />\r\n      <FormControl.ErrorMessage style={{ marginTop: vh(-3) }}>\r\n        {props.error}\r\n      </FormControl.ErrorMessage>\r\n      <FormControl.HelperText style={{ marginTop: vh(-3) }}>\r\n        {props.help}\r\n      </FormControl.HelperText>\r\n    </FormControl>\r\n  );\r\n});\r\n\r\nexport default ShadowInput;\r\n","import React from \"react\";\r\nimport { Switch, FormControl } from \"native-base\";\r\nimport { Controller } from \"react-hook-form\";\r\nimport { vw, vh } from \"../util\";\r\nimport Colors from \"../constants/Colors\";\r\n\r\nconst ShadowSwitch = (props) => {\r\n  return (\r\n    <FormControl\r\n      isInvalid={props.invalid}\r\n      style={{\r\n        height: vh(48),\r\n        ...props.style,\r\n      }}\r\n    >\r\n      {props.label && (\r\n        <FormControl.Label\r\n          style={{\r\n            fontSize: vw(13),\r\n            fontFamily: \"Poppins_medium\",\r\n            color: props.invalid ? \"red.500\" : \"rgba(102, 102, 102, 0.7)\",\r\n            height: vh(19),\r\n          }}\r\n        >\r\n          {props.label}\r\n        </FormControl.Label>\r\n      )}\r\n\r\n      <Controller\r\n        control={props.control}\r\n        rules={props.rules}\r\n        name={props.name}\r\n        render={({ field: { onChange, onBlur, value } }) => (\r\n          <Switch\r\n            onTrackColor={Colors.primary}\r\n            style={{ marginTop: vh(10) }}\r\n            size={\"md\"}\r\n            {...props}\r\n            onToggle={(v) => {\r\n              // console.log(v);\r\n              // setIsChecked(v);\r\n              props.isChanged(v);\r\n              onChange(v);\r\n            }}\r\n            // isChecked={true}\r\n            colorScheme=\"purple\"\r\n          />\r\n        )}\r\n      />\r\n      <FormControl.ErrorMessage style={{ marginTop: vh(-3) }}>\r\n        {props.error}\r\n      </FormControl.ErrorMessage>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default ShadowSwitch;\r\n","export default {\r\n  primary: 'rgba(125, 43, 233, 1)',\r\n  accent: '#FFC107'\r\n};\r\n","import React from \"react\";\r\nimport { VStack, Text, Pressable, HStack } from \"native-base\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { vh, vw } from \"../../../util\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport * as events from \"../../../store/events\";\r\n\r\nconst VerticalItem = ({ item, setIsOpen }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Pressable\r\n      onPress={async () => {\r\n        await dispatch({ type: events.SET_CURRENT_CAMPAIGN, data: item });\r\n        setIsOpen(true);\r\n      }}\r\n    >\r\n      <VStack\r\n        style={{\r\n          boxShadow: \"0px 3px 10px #0000001A\",\r\n          width: vw(345),\r\n          height: vh(100),\r\n          marginHorizontal: vw(20),\r\n          marginVertical: vh(10),\r\n          borderRadius: vw(10),\r\n          backgroundColor: \"white\",\r\n        }}\r\n      >\r\n        <Text\r\n          style={{\r\n            marginHorizontal: vw(10),\r\n            marginTop: vh(5),\r\n            color: Colors.primary,\r\n            fontFamily: \"Poppins_medium\",\r\n            fontSize: vw(15),\r\n          }}\r\n        >\r\n          {item.name}\r\n        </Text>\r\n        <Text\r\n          style={{\r\n            marginTop: vh(5),\r\n            marginHorizontal: vw(10),\r\n            color: \"rgba(0,0,0, 0.5)\",\r\n            fontFamily: \"Poppins\",\r\n            fontSize: vw(11),\r\n          }}\r\n        >\r\n          {item.description}\r\n        </Text>\r\n        <HStack\r\n          style={{ marginTop: vh(6), marginHorizontal: vw(10) }}\r\n          justifyContent={\"space-between\"}\r\n        >\r\n          <Text\r\n            style={{\r\n              color: \"#686868\",\r\n              fontFamily: \"Poppins\",\r\n              fontSize: vw(13),\r\n            }}\r\n          >\r\n            {item.send_mode}\r\n          </Text>\r\n          <Pressable onPress={() => {}}>\r\n            <Text\r\n              style={{\r\n                fontSize: vw(13),\r\n                fontFamily: \"Poppins\",\r\n                color: Colors.primary,\r\n              }}\r\n            >\r\n              {item.default\r\n                ? item.team === item.createdUser._id\r\n                  ? \"Team Default\"\r\n                  : \"Default\"\r\n                : \"\"}\r\n            </Text>\r\n          </Pressable>\r\n        </HStack>\r\n      </VStack>\r\n    </Pressable>\r\n  );\r\n};\r\n\r\nexport default React.memo(VerticalItem);\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  Pressable,\r\n  Text,\r\n  Center,\r\n  Button,\r\n  HStack,\r\n  VStack,\r\n  useToast,\r\n  useBreakpointValue,\r\n  Spinner,\r\n  Hidden,\r\n} from \"native-base\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport _ from \"lodash\";\r\nimport moment from \"moment\";\r\n\r\nimport * as campaignActions from \"../../../store/actions/campaigns\";\r\nimport ShadowInput from \"../../../components/ShadowInput\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport { vw, vh } from \"../../../util\";\r\nimport ShadowSwitch from \"../../../components/ShadowSwitch\";\r\nimport ShadowSelect from \"../../../components/ShadowSelect\";\r\nimport ShadowButton from \"../../../components/ShadowButton\";\r\nimport DropDownIcon from \"../../../components/svg/DropDownIcon\";\r\nimport ShadowModal from \"../../../components/ShadowModal\";\r\n\r\nconst AddCampaign = ({ isOpen, setIsOpen, templates }) => {\r\n  const sz = useBreakpointValue({\r\n    base: \"base\",\r\n    sm: \"sm\",\r\n    lg: \"lg\",\r\n    md: \"md\",\r\n    xl: \"xl\",\r\n  });\r\n  const navigate = useNavigate();\r\n  const toast = useToast();\r\n  const dispatch = useDispatch();\r\n  const cancelRef = React.useRef(null);\r\n  const [isAlertOpen, setIsAlertOpen] = React.useState(false);\r\n  // const [isDeleting, setIsDeleting] = useState(false);\r\n  const onClose = useCallback(() => setIsOpen(false), [setIsOpen]);\r\n  const onAlertClose = () => setIsAlertOpen(false);\r\n  const [alertConfig, setAlertConfig] = useState({\r\n    header: \"\",\r\n    desc: \"\",\r\n    nolabel: \"No\",\r\n    yeslabel: \"Yes\",\r\n    yes: () => {},\r\n    no: onClose,\r\n  });\r\n\r\n  const { currentCampaign } = useSelector((state) => state.campaigns);\r\n\r\n  const redirect = \"campaigns\";\r\n\r\n  const initStep = [\r\n    {\r\n      active: true,\r\n      postcardtemplate: \"not-send\",\r\n      postcardrepeat: false,\r\n      postcardevery: \"\",\r\n      postcards: \"\",\r\n      emailtemplate: \"not-send\",\r\n      emailrepeat: false,\r\n      emailevery: \"\",\r\n      emails: \"\",\r\n      sendtime: \"\",\r\n    },\r\n  ];\r\n\r\n  const [steps, setSteps] = useState(\r\n    (currentCampaign && currentCampaign.steps) || initStep\r\n  );\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [stepChanged, setStepChanged] = useState(false);\r\n  const activeStep = steps.find((s) => s.active);\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    getValues,\r\n    setValue,\r\n    trigger,\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n    defaultValues: _.isEmpty(currentCampaign)\r\n      ? {\r\n          name: \"\",\r\n          description: \"\",\r\n          default: false,\r\n          send_mode: \"Attach Automatically\",\r\n          postcardtemplate: \"not-send\",\r\n          postcardrepeat: false,\r\n          postcardevery: \"\",\r\n          postcards: \"\",\r\n          emailtemplate: \"not-send\",\r\n          emailrepeat: false,\r\n          emailevery: \"\",\r\n          emails: \"\",\r\n          sendtime: \"\",\r\n        }\r\n      : {\r\n          name: currentCampaign.name,\r\n          description: currentCampaign.description,\r\n          default: currentCampaign.default,\r\n          send_mode: currentCampaign.send_mode,\r\n          postcardtemplate:\r\n            activeStep && activeStep.postcardtemplate\r\n              ? activeStep.postcardtemplate\r\n              : \"not-send\",\r\n          postcardrepeat:\r\n            activeStep && activeStep.postcardrepeat\r\n              ? activeStep.postcardrepeat\r\n              : false,\r\n          postcardevery:\r\n            activeStep && activeStep.postcardevery\r\n              ? activeStep.postcardevery\r\n              : \"\",\r\n          postcards:\r\n            activeStep && activeStep.postcards ? activeStep.postcards : \"\",\r\n          emailtemplate:\r\n            activeStep && activeStep.emailtemplate\r\n              ? activeStep.emailtemplate\r\n              : \"not-send\",\r\n          emailrepeat:\r\n            activeStep && activeStep.emailrepeat\r\n              ? activeStep.emailrepeat\r\n              : false,\r\n          emailevery:\r\n            activeStep && activeStep.emailevery ? activeStep.emailevery : \"\",\r\n          emails: activeStep && activeStep.emails ? activeStep.emails : \"\",\r\n          sendtime:\r\n            activeStep && activeStep.sendtime ? activeStep.sendtime : \"\",\r\n        },\r\n  });\r\n\r\n  const sendMode = getValues(\"send_mode\");\r\n\r\n  const _showAlert = useCallback(\r\n    (status, msg) => {\r\n      toast.show({\r\n        placement: \"top\",\r\n        render: () => {\r\n          let bg = \"red.300\";\r\n          if (status === \"error\") {\r\n            bg = \"red.300\";\r\n          } else if (status === \"success\") {\r\n            bg = \"green.300\";\r\n          } else if (status === \"info\") {\r\n            bg = \"blueGray.300\";\r\n          } else if (status === \"warning\") {\r\n            bg = \"orange.300\";\r\n          }\r\n          return (\r\n            <Text\r\n              style={{\r\n                fontSize: vw(12),\r\n                fontFamily: \"Poppins_medium\",\r\n                color: \"#33214B\",\r\n              }}\r\n              p={2}\r\n              bg={bg}\r\n              rounded={\"full\"}\r\n            >\r\n              {msg}\r\n            </Text>\r\n          );\r\n        },\r\n      });\r\n    },\r\n    [toast]\r\n  );\r\n\r\n  const saveHandler = async (data) => {\r\n    // if (Object.keys(errors).length > 0) {\r\n    //   _showAlert(\"error\", \"Check your enteries\");\r\n    //   setIsSaving(false);\r\n    //   return;\r\n    // }\r\n\r\n    const templatesNotFound = steps.filter(\r\n      (f) => f.postcardtemplate === \"not-send\" && f.emailtemplate === \"not-send\"\r\n    );\r\n\r\n    if (templatesNotFound && templatesNotFound.length > 0) {\r\n      _showAlert(\"error\", \"No template selected in one of the steps.\");\r\n      setIsSaving(false);\r\n      return;\r\n    }\r\n\r\n    const postdata = {\r\n      name: data.name,\r\n      description: data.description,\r\n      default: data.default,\r\n      send_mode: data.send_mode,\r\n      steps: steps.map((item, index) => {\r\n        item.step = index + 1;\r\n        return item;\r\n      }),\r\n    };\r\n\r\n    // console.log(\"steps\", steps);\r\n\r\n    if (currentCampaign && currentCampaign._id) {\r\n      postdata[\"_id\"] = currentCampaign._id;\r\n    }\r\n\r\n    const action = !currentCampaign\r\n      ? campaignActions.createCampaign(postdata)\r\n      : campaignActions.updateCampaign(postdata);\r\n    let iseq = false;\r\n    if (currentCampaign) {\r\n      const cc = currentCampaign;\r\n      delete cc.active;\r\n      delete cc.team;\r\n      delete cc.createdUser;\r\n\r\n      iseq = _.isEqual(cc, postdata);\r\n    }\r\n\r\n    const msg = !postdata._id\r\n      ? \"Campaign created successfully.\"\r\n      : \"Campaign updated successfully.\";\r\n    // setIsSaving(true);\r\n    try {\r\n      await dispatch(action);\r\n\r\n      if (redirect === \"home\") {\r\n        navigate(-1);\r\n      }\r\n      _showAlert(\"success\", msg);\r\n      setIsSaving(false);\r\n      if (!currentCampaign) {\r\n        onClose();\r\n      } else {\r\n        if (iseq) {\r\n          onClose();\r\n        } else {\r\n          setAlertConfig({\r\n            header: \"Attention!\",\r\n            desc: \"Saved changes to the campaign take effect on newly added properties or to properties that you manually add/edit in campaign config.\",\r\n            nolabel: \"Okay\",\r\n            yeslabel: \"\",\r\n            yes: () => {},\r\n            no: onClose,\r\n          });\r\n          setIsAlertOpen(true);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(\"Created Error\", err);\r\n      _showAlert(\"error\", err.message);\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isSaving) {\r\n      handleSubmit(saveHandler, () => {\r\n        setIsSaving(false);\r\n      })();\r\n    }\r\n  }, [isSaving]);\r\n\r\n  useEffect(() => {\r\n    if (getValues(\"send_mode\") === \"Attach Manually\") {\r\n      setValue(\"postcardrepeat\", false);\r\n      trigger(\"postcardrepeat\");\r\n      setValue(\"emailrepeat\", false);\r\n      trigger(\"emailrepeat\");\r\n      setStepChanged(true);\r\n    }\r\n  }, [sendMode, getValues, setValue, trigger]);\r\n\r\n  useEffect(() => {\r\n    const updateStep = () => {\r\n      let activeSteps = steps;\r\n      const activeIndex = activeSteps.findIndex((item) => item.active === true);\r\n      activeSteps[activeIndex] = {\r\n        active: true,\r\n        postcards:\r\n          getValues &&\r\n          getValues(\"postcards\") &&\r\n          getValues(\"postcards\").toString(),\r\n        postcardrepeat: getValues && getValues(\"postcardrepeat\"),\r\n        postcardevery:\r\n          getValues &&\r\n          getValues(\"postcardevery\") &&\r\n          getValues(\"postcardevery\").toString(),\r\n        postcardtemplate: getValues && getValues(\"postcardtemplate\"),\r\n        emails:\r\n          getValues && getValues(\"emails\") && getValues(\"emails\").toString(),\r\n        sendtime:\r\n          getValues &&\r\n          getValues(\"sendtime\") &&\r\n          getValues(\"sendtime\").toString(),\r\n        emailrepeat:\r\n          getValues && getValues(\"emailrepeat\") && getValues(\"emailrepeat\"),\r\n        emailevery:\r\n          getValues &&\r\n          getValues(\"emailevery\") &&\r\n          getValues(\"emailevery\").toString(),\r\n        emailtemplate: getValues && getValues(\"emailtemplate\"),\r\n      };\r\n\r\n      setStepChanged(false);\r\n      setSteps(activeSteps);\r\n    };\r\n    if (stepChanged) {\r\n      updateStep();\r\n    }\r\n  }, [getValues, stepChanged, steps]);\r\n\r\n  const addNewStep = () => {\r\n    let inactiveSteps = steps.map((item, index) => {\r\n      item.active = false;\r\n      return item;\r\n    });\r\n\r\n    const postcardTemplate = \"not-send\";\r\n    const emailTemplate = \"not-send\";\r\n\r\n    const activeSteps = inactiveSteps.concat({\r\n      active: true,\r\n      postcardtemplate: postcardTemplate,\r\n      postcardrepeat: postcardTemplate === \"not-send\" ? false : true,\r\n      postcardevery: \"\",\r\n      postcards: \"\",\r\n      emailtemplate: emailTemplate,\r\n      emailrepeat: emailTemplate === \"not-send\" ? false : true,\r\n      emailevery: \"\",\r\n      emails: \"\",\r\n      sendtime: \"\",\r\n    });\r\n\r\n    // console.log(\"active steps\", activeSteps);\r\n\r\n    setValue(\"postcardtemplate\", postcardTemplate);\r\n    setValue(\"emailtemplate\", emailTemplate);\r\n    setValue(\"postcardevery\", \"\");\r\n    setValue(\"emailevery\", \"\");\r\n    setValue(\"postcards\", \"\");\r\n    setValue(\"emails\", \"\");\r\n    setValue(\"sendtime\", \"\");\r\n    setSteps(activeSteps);\r\n  };\r\n\r\n  const makeStepActive = (selectedIndex) => {\r\n    if (steps.length === 1 && !currentCampaign) {\r\n      return;\r\n    }\r\n    const allSteps = steps.map((item, index) => {\r\n      if (index === selectedIndex) {\r\n        setValue(\r\n          \"postcardtemplate\",\r\n          item.postcardtemplate ? item.postcardtemplate : \"not-send\"\r\n        );\r\n        setValue(\r\n          \"emailtemplate\",\r\n          item.emailtemplate ? item.emailtemplate : \"not-send\"\r\n        );\r\n        setValue(\r\n          \"postcardrepeat\",\r\n          item.postcardrepeat ? item.postcardrepeat : false\r\n        );\r\n        setValue(\"postcardevery\", item.postcardevery ? item.postcardevery : \"\");\r\n        setValue(\"postcards\", item.postcards ? item.postcards : \"\");\r\n        setValue(\"emailrepeat\", item.emailrepeat ? item.emailrepeat : false);\r\n        setValue(\"emailevery\", item.emailevery ? item.emailevery : \"\");\r\n        setValue(\"emails\", item.emails ? item.emails : \"\");\r\n        setValue(\"sendtime\", item.sendtime ? item.sendtime : \"\");\r\n        trigger();\r\n\r\n        item.active = item.active ? false : true;\r\n        if (!item.postcardtemplate) {\r\n          item.postcardtemplate = \"not-send\";\r\n        }\r\n        return item;\r\n      } else {\r\n        item.active = false;\r\n        return item;\r\n      }\r\n    });\r\n    setSteps(allSteps);\r\n  };\r\n\r\n  const deleteStep = () => {\r\n    const availableSteps = steps.filter((item) => !item.active);\r\n\r\n    // console.log(\"Available Steps\", availableSteps);\r\n    const currStep = availableSteps[availableSteps.length - 1];\r\n    availableSteps[availableSteps.length - 1].active = true;\r\n    currStep.active = true;\r\n    setValue(\r\n      \"postcardtemplate\",\r\n      currStep.postcardtemplate ? currStep.postcardtemplate : \"not-send\"\r\n    );\r\n    setValue(\r\n      \"emailtemplate\",\r\n      currStep.emailtemplate ? currStep.emailtemplate : \"not-send\"\r\n    );\r\n    setValue(\"postcardevery\", currStep.postcardevery);\r\n    setValue(\"emailevery\", currStep.emailevery);\r\n    setValue(\"postcards\", currStep.postcards);\r\n    setValue(\"emails\", currStep.emails);\r\n    setValue(\"sendtime\", currStep.sendtime);\r\n    setSteps(availableSteps);\r\n    _showAlert(\"success\", \"Step deleted successfully.\");\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const deleteHandler = async () => {\r\n    if (currentCampaign && currentCampaign._id) {\r\n      setIsLoading(true);\r\n      try {\r\n        const action = campaignActions.deleteCampaign(currentCampaign._id);\r\n        await dispatch(action);\r\n        _showAlert(\"success\", \"Campaign deleted successfully.\");\r\n        navigate(\"/campaigns\");\r\n      } catch (err) {\r\n        if (err.message === \"CAMPAIGN-ATTACHED\") {\r\n          setAlertConfig({\r\n            header: \"Sorry!\",\r\n            desc: \"Cannot delete campaign used by one or more properties, you can only delete campaigns that are not assigned to any property.\",\r\n            nolabel: \"Okay\",\r\n            yeslabel: \"\",\r\n            yes: () => {},\r\n            no: onClose,\r\n          });\r\n          setIsOpen(true);\r\n        } else {\r\n          _showAlert(\"err\", err.message);\r\n        }\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (templates.length === 0) {\r\n    return (\r\n      <Center flex={1}>\r\n        <Text>An error occurred!</Text>\r\n        <Button\r\n          style={{ color: Colors.primary, margin: 5, paddingHorizontal: 5 }}\r\n          onPress={() => {}}\r\n        >\r\n          <Text style={{ color: \"white\" }}>No templates Found.</Text>\r\n        </Button>\r\n      </Center>\r\n    );\r\n  }\r\n\r\n  const postcardTemplates = [\r\n    { name: \"Not send mail\", _id: \"not-send\", templatetype: \"postcard\" },\r\n    ...templates,\r\n  ]\r\n    .filter((f) => f.templatetype === \"postcard\")\r\n    .map((item) => {\r\n      return { label: item.name, value: item._id };\r\n    });\r\n\r\n  const emailTemplates = [\r\n    { name: \"Not send email\", _id: \"not-send\", templatetype: \"email\" },\r\n    ...templates,\r\n  ]\r\n    .filter((f) => f.templatetype === \"email\")\r\n    .map((item) => {\r\n      return { label: item.name, value: item._id };\r\n    });\r\n\r\n  const sendingModes = [\r\n    \"Attach Automatically\",\r\n    \"Attach Manually\",\r\n    \"Stop Sending\",\r\n  ];\r\n\r\n  const sendingModeOptions = sendingModes.map((item) => {\r\n    return { label: item, value: item };\r\n  });\r\n\r\n  const sendTime = [...Array(24).keys()].map((item) => {\r\n    return {\r\n      label: moment().startOf(\"day\").add(item, \"hours\").format(\"HH:mm\"),\r\n      value: item.toString(),\r\n    };\r\n  });\r\n\r\n  return isLoading ? (\r\n    <Center bg={\"white\"} flex={1}>\r\n      <Spinner size={\"small\"} color={Colors.primary} />\r\n    </Center>\r\n  ) : (\r\n    <>\r\n      <VStack bg={\"white\"} mb={20}>\r\n        <ShadowModal\r\n          size={\"xl\"}\r\n          // top={sz === \"md\" ? 0 : 0}\r\n          // height={\r\n          //   sz === \"base\" || sz === \"sm\"\r\n          //     ? window.screen.height - 20\r\n          //     : window.screen.height - 200\r\n          // }\r\n          header={\r\n            currentCampaign && currentCampaign._id\r\n              ? \"Edit Campaign\"\r\n              : \"Create Campaign\"\r\n          }\r\n          isOpen={isOpen}\r\n          close={() => {\r\n            onClose();\r\n          }}\r\n          isLoading={isSaving}\r\n          save={() => {\r\n            if (Object.keys(errors).length === 0) {\r\n              setIsSaving(true);\r\n            }\r\n          }}\r\n          footerStyle={{\r\n            justifyContent: \"space-between\",\r\n          }}\r\n          // width={sz === \"base\" || sz === \"sm\" ? \"99vw\" : vw(620)}\r\n          buttons={\r\n            <HStack justifyContent={\"space-between\"} width={\"100%\"} space={2}>\r\n              <HStack justifyContent={\"flex-start\"} space={2}>\r\n                <ShadowButton\r\n                  space={2}\r\n                  label={sz === \"base\" || sz === \"sm\" ? \"+\" : \"Add Step\"}\r\n                  // isLoading={isSaving}\r\n                  onPress={() => {\r\n                    if (\r\n                      activeStep.postcardtemplate === \"not-send\" &&\r\n                      activeStep.emailtemplate === \"not-send\"\r\n                    ) {\r\n                      _showAlert(\r\n                        \"error\",\r\n                        \"Please select a template in the current step to add a new one.\"\r\n                      );\r\n                      return;\r\n                    }\r\n\r\n                    addNewStep();\r\n                  }}\r\n                  style={{\r\n                    // minWidth: vw(40),\r\n                    height: vh(36),\r\n                  }}\r\n                />\r\n              </HStack>\r\n              <HStack justifyContent={\"flex-end\"} space={2}>\r\n                {currentCampaign && currentCampaign._id && (\r\n                  <ShadowButton\r\n                    space={2}\r\n                    variant='outline'\r\n                    label={sz === \"base\" || sz === \"sm\" ? \"X\" : \"Delete\"}\r\n                    style={{\r\n                      // minWidth: vw(40),\r\n                      height: vh(36),\r\n                      backgroundColor: \"rgba(255,0,0,0.3)\",\r\n                    }}\r\n                    onPress={() => {\r\n                      setAlertConfig({\r\n                        header: \"Delete!\",\r\n                        desc: \"Are you sure you want to delete this campaign?\",\r\n                        nolabel: \"No\",\r\n                        yeslabel: \"Yes\",\r\n                        yes: deleteHandler,\r\n                        no: onAlertClose,\r\n                      });\r\n                      setIsAlertOpen(true);\r\n                      return;\r\n                    }}\r\n                  />\r\n                )}\r\n                <ShadowButton\r\n                  space={2}\r\n                  color={Colors.primary}\r\n                  variant='outline'\r\n                  label={\"Cancel\"}\r\n                  onPress={() => {\r\n                    onClose();\r\n                  }}\r\n                  style={{\r\n                    // width: vw(36),\r\n                    height: vh(36),\r\n                  }}\r\n                />\r\n                <ShadowButton\r\n                  space={3}\r\n                  label={\"Save\"}\r\n                  isLoading={isSaving}\r\n                  style={{\r\n                    // width: vw(36),\r\n                    height: vh(36),\r\n                  }}\r\n                  onPress={() => {\r\n                    if (\r\n                      activeStep.postcardtemplate === \"not-send\" &&\r\n                      activeStep.emailtemplate === \"not-send\"\r\n                    ) {\r\n                      _showAlert(\r\n                        \"error\",\r\n                        \"Please select a template in the current step to save this campaign.\"\r\n                      );\r\n                      return;\r\n                    }\r\n                    if (Object.keys(errors).length === 0) {\r\n                      setIsSaving(true);\r\n                    }\r\n                  }}\r\n                />\r\n              </HStack>\r\n            </HStack>\r\n          }\r\n        >\r\n          <VStack style={{ zoom: \"90%\" }}>\r\n            <HStack\r\n              space={4}\r\n              style={{\r\n                width: sz === \"base\" || sz === \"sm\" ? \"94vw\" : vw(612),\r\n                justifyContent: \"space-between\",\r\n                // marginHorizontal: vw(20),\r\n                marginBottom: vh(20),\r\n              }}\r\n            >\r\n              <ShadowInput\r\n                name='name'\r\n                label={\"Campaign Name\"}\r\n                placeholder='Campaign Name'\r\n                control={control}\r\n                rules={{\r\n                  required: {\r\n                    value: true,\r\n                    message: \"Campaign name is required\",\r\n                  },\r\n                }}\r\n                invalid={errors.name ? true : false}\r\n                error={errors.name ? errors.name.message : \"\"}\r\n                inputStyle={{}}\r\n              />\r\n            </HStack>\r\n\r\n            <HStack\r\n              space={4}\r\n              style={{\r\n                width: sz === \"base\" || sz === \"sm\" ? \"94vw\" : vw(612),\r\n                justifyContent: \"space-between\",\r\n                // marginHorizontal: vw(20),\r\n                marginVertical: vh(20),\r\n              }}\r\n            >\r\n              <ShadowInput\r\n                name='description'\r\n                label={\"Campaign Description\"}\r\n                placeholder='Campaign Description'\r\n                control={control}\r\n                rules={{\r\n                  required: {\r\n                    value: true,\r\n                    message: \"Campaign Description is required\",\r\n                  },\r\n                }}\r\n                invalid={errors.description ? true : false}\r\n                error={errors.description ? errors.description.message : \"\"}\r\n                inputStyle={{}}\r\n              />\r\n            </HStack>\r\n\r\n            <HStack\r\n              space={4}\r\n              style={{\r\n                width: sz === \"base\" || sz === \"sm\" ? \"45.5vw\" : vw(300),\r\n                justifyContent: \"space-between\",\r\n                marginTop: vh(20),\r\n                marginBottom: vh(40),\r\n              }}\r\n            >\r\n              <ShadowSelect\r\n                control={control}\r\n                items={sendingModeOptions}\r\n                name='send_mode'\r\n                label='Attach Mode'\r\n                placeholder='Select attach mode'\r\n                invalid={errors.name ? true : false}\r\n                error={errors.name ? errors.name.message : \"\"}\r\n                rules={{\r\n                  required: {\r\n                    value: true,\r\n                    message: \"Select attach mode\",\r\n                  },\r\n                }}\r\n              />\r\n              <ShadowSwitch\r\n                type='switch'\r\n                control={control}\r\n                isChanged={(v) => {\r\n                  setValue(\"default\", v);\r\n                  trigger(\"default\");\r\n                }}\r\n                id='default'\r\n                name='default'\r\n                label='Default campaign? '\r\n                isChecked={getValues(\"default\")}\r\n                // required\r\n                invalid={errors.default ? true : false}\r\n                error={errors.default ? errors.default.message : \"\"}\r\n                rules={{}}\r\n              />\r\n            </HStack>\r\n            {steps.map((item, idx) => {\r\n              return (\r\n                <VStack\r\n                  rounded={\"md\"}\r\n                  key={\"step\" + idx}\r\n                  style={{\r\n                    boxShadow: \"0px 3px 5px #0000001A\",\r\n                    backgroundColor: item.active === false ? \"#eeeeee\" : \"#fff\",\r\n                    marginVertical: vh(10),\r\n                    paddingHorizontal: vh(20),\r\n                    paddingVertical: vh(10),\r\n                    width: sz === \"base\" || sz === \"sm\" ? \"94vw\" : vw(612),\r\n                  }}\r\n                >\r\n                  <Pressable\r\n                    onPress={() => {\r\n                      makeStepActive(idx);\r\n                    }}\r\n                    style={{ marginBottom: item.active ? vh(10) : 0 }}\r\n                  >\r\n                    <HStack\r\n                      py={1}\r\n                      style={{\r\n                        borderBottomWidth: item.active ? vw(2) : 0,\r\n                        borderBottomColor: \"rgba(0,0,0, 0.15)\",\r\n                        justifyContent: \"space-between\",\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          marginLeft: 5,\r\n                          fontFamily: \"Poppins\",\r\n                          fontSize: 16,\r\n                          color: Colors.primary,\r\n                        }}\r\n                      >\r\n                        Step {idx + 1}\r\n                      </Text>\r\n\r\n                      <Center>\r\n                        <DropDownIcon />\r\n                      </Center>\r\n                    </HStack>\r\n                  </Pressable>\r\n                  {item.active === true && (\r\n                    <VStack marginBottom={steps.length === 1 ? vh(10) : 0}>\r\n                      <HStack\r\n                        space={4}\r\n                        style={{\r\n                          width:\r\n                            sz === \"base\" || sz === \"sm\" ? \"40vw\" : vw(280),\r\n                          justifyContent: \"space-between\",\r\n                          marginBottom: vh(10),\r\n                        }}\r\n                      >\r\n                        <ShadowSelect\r\n                          control={control}\r\n                          items={postcardTemplates}\r\n                          name='postcardtemplate'\r\n                          id='postcardtemplate'\r\n                          label='Send mail with template'\r\n                          placeholder='Select mail template'\r\n                          onChange={(v) => {\r\n                            setValue(\"postcardtemplate\", v);\r\n                            trigger(\"postcardtemplate\");\r\n                            // if (v === \"not-send\") {\r\n                            setValue(\"postcardrepeat\", false);\r\n                            trigger(\"postcardrepeat\");\r\n                            // }\r\n                            setStepChanged((c) => !c);\r\n                          }}\r\n                          invalid={errors.postcardtemplate ? true : false}\r\n                          error={\r\n                            errors.postcardtemplate\r\n                              ? errors.postcardtemplate.message\r\n                              : \"\"\r\n                          }\r\n                          rules={{\r\n                            required: {\r\n                              value: true,\r\n                              message: \"Please select a mail template\",\r\n                            },\r\n                          }}\r\n                        />\r\n                        <ShadowSwitch\r\n                          isDisabled={\r\n                            item.postcardtemplate === \"not-send\" ||\r\n                            getValues(\"send_mode\") === \"Attach Manually\"\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          control={control}\r\n                          isChanged={(v) => {\r\n                            setValue(\"postcardrepeat\", v);\r\n                            trigger(\"postcardrepeat\");\r\n                            setStepChanged(true);\r\n                          }}\r\n                          id='postcardrepeat'\r\n                          name='postcardrepeat'\r\n                          label='Repeat mail Sending? '\r\n                          isChecked={item.postcardrepeat}\r\n                          // required\r\n                          invalid={errors.postcardrepeat ? true : false}\r\n                          error={\r\n                            errors.postcardrepeat\r\n                              ? errors.postcardrepeat.message\r\n                              : \"\"\r\n                          }\r\n                          rules={{}}\r\n                        />\r\n                      </HStack>\r\n                      {item.postcardrepeat === true && (\r\n                        <HStack\r\n                          space={4}\r\n                          style={{\r\n                            width:\r\n                              sz === \"base\" || sz === \"sm\" ? \"40vw\" : vw(280),\r\n                            justifyContent: \"space-between\",\r\n                            marginVertical: vh(10),\r\n                          }}\r\n                        >\r\n                          <ShadowInput\r\n                            suffix='Day(s)'\r\n                            control={control}\r\n                            id='postcardevery'\r\n                            name='postcardevery'\r\n                            label={\r\n                              sz === \"base\" || sz === \"sm\"\r\n                                ? \"Repeat sending\"\r\n                                : \"Repeat sending every (in days)\"\r\n                            }\r\n                            placeholder='21'\r\n                            maxLength={3}\r\n                            // defaultValue={\r\n                            //   item.postcardevery\r\n                            //     ? item.postcardevery.toString()\r\n                            //     : \"0\"\r\n                            // }\r\n                            onChangeText={(v) => {\r\n                              // setValue(\"postcardevery\", v);\r\n                              // trigger(\"postcardevery\");\r\n                              setStepChanged(true);\r\n                            }}\r\n                            invalid={errors.postcardevery ? true : false}\r\n                            error={\r\n                              errors.postcardevery\r\n                                ? errors.postcardevery.message\r\n                                : \"\"\r\n                            }\r\n                            rules={{\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Mail repeat period is required\",\r\n                              },\r\n                            }}\r\n                          />\r\n\r\n                          <ShadowInput\r\n                            control={control}\r\n                            id='postcards'\r\n                            name='postcards'\r\n                            label='Mails to send (in nos.) '\r\n                            placeholder='8'\r\n                            maxLength={4}\r\n                            required\r\n                            // defaultValue={\r\n                            //   item.postcards ? item.postcards.toString() : \"0\"\r\n                            // }\r\n                            onChangeText={(v) => {\r\n                              // setValue(\"postcards\", v);\r\n                              // trigger(\"postcards\");\r\n                              setStepChanged(true);\r\n                            }}\r\n                            invalid={errors.postcards ? true : false}\r\n                            error={\r\n                              errors.postcards ? errors.postcards.message : \"\"\r\n                            }\r\n                            rules={{\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Mails to send is required\",\r\n                              },\r\n                            }}\r\n                          />\r\n                        </HStack>\r\n                      )}\r\n                      <HStack\r\n                        space={4}\r\n                        style={{\r\n                          width:\r\n                            sz === \"base\" || sz === \"sm\" ? \"40vw\" : vw(280),\r\n                          justifyContent: \"space-between\",\r\n                          marginTop: vh(20),\r\n                          marginBottom: vh(10),\r\n                        }}\r\n                      >\r\n                        <ShadowSelect\r\n                          control={control}\r\n                          items={emailTemplates}\r\n                          name='emailtemplate'\r\n                          id='emailtemplate'\r\n                          label={\r\n                            sz === \"base\" || sz === \"sm\"\r\n                              ? \"Send template\"\r\n                              : \"Send e-mail with template\"\r\n                          }\r\n                          placeholder='Select e-mail template'\r\n                          onChange={(v) => {\r\n                            setValue(\"emailtemplate\", v);\r\n                            trigger(\"emailtemplate\");\r\n                            // if (v === \"not-send\") {\r\n                            setValue(\"emailrepeat\", false);\r\n                            trigger(\"emailrepeat\");\r\n                            // }\r\n                            setStepChanged((c) => !c);\r\n                          }}\r\n                          invalid={errors.emailtemplate ? true : false}\r\n                          error={\r\n                            errors.emailtemplate\r\n                              ? errors.emailtemplate.message\r\n                              : \"\"\r\n                          }\r\n                          rules={{\r\n                            required: {\r\n                              value: true,\r\n                              message: \"Select an email template\",\r\n                            },\r\n                          }}\r\n                        />\r\n\r\n                        <ShadowSwitch\r\n                          isDisabled={\r\n                            item.emailtemplate === \"not-send\" ? true : false\r\n                          }\r\n                          control={control}\r\n                          isChanged={(v) => {\r\n                            setValue(\"emailrepeat\", v);\r\n                            trigger(\"emailrepeat\");\r\n                            setStepChanged(true);\r\n                          }}\r\n                          id='emailrepeat'\r\n                          name='emailrepeat'\r\n                          label='Repeat e-mail sending? '\r\n                          isChecked={item.emailrepeat}\r\n                          // required\r\n                          invalid={errors.emailrepeat ? true : false}\r\n                          error={\r\n                            errors.emailrepeat ? errors.emailrepeat.message : \"\"\r\n                          }\r\n                          rules={{}}\r\n                        />\r\n                      </HStack>\r\n                      {item.emailrepeat === true &&\r\n                        item.emailtemplate !== \"not-send\" && (\r\n                          <HStack\r\n                            space={4}\r\n                            style={{\r\n                              width:\r\n                                sz === \"base\" || sz === \"sm\" ? \"40vw\" : vw(280),\r\n                              justifyContent: \"space-between\",\r\n                              marginTop: vh(10),\r\n                              marginBottom: vh(20),\r\n                            }}\r\n                          >\r\n                            <ShadowInput\r\n                              suffix='Day(s)'\r\n                              control={control}\r\n                              id='emailevery'\r\n                              name='emailevery'\r\n                              label={\r\n                                sz === \"base\" || sz === \"sm\"\r\n                                  ? \"Repeat sending\"\r\n                                  : \"Repeat sending every (in days)\"\r\n                              }\r\n                              placeholder='21'\r\n                              maxLength={3}\r\n                              required\r\n                              // defaultValue={item.emailevery.toString()}\r\n                              onChangeText={(v) => {\r\n                                // console.log(v)\r\n                                // setValue(\"emailevery\", v);\r\n                                // trigger(\"emailevery\");\r\n                                setStepChanged(true);\r\n                              }}\r\n                              invalid={errors.emailevery ? true : false}\r\n                              error={\r\n                                errors.emailevery\r\n                                  ? errors.emailevery.message\r\n                                  : \"\"\r\n                              }\r\n                              // help=\"Enter days\"\r\n                              rules={{\r\n                                required: {\r\n                                  value: true,\r\n                                  message:\r\n                                    \"Repeat email every period is required\",\r\n                                },\r\n                              }}\r\n                            />\r\n\r\n                            <Hidden from='md'>\r\n                              <ShadowInput\r\n                                suffix='Nos(s)'\r\n                                control={control}\r\n                                id='emails'\r\n                                name='emails'\r\n                                label='Emails to send (in nos.)'\r\n                                placeholder='8'\r\n                                maxLength={4}\r\n                                // defaultValue={item.emails.toString()}\r\n                                onChangeText={(v) => {\r\n                                  // setValue(\"emails\", v);\r\n                                  // trigger(\"emails\");\r\n                                  setStepChanged(true);\r\n                                }}\r\n                                invalid={errors.emails ? true : false}\r\n                                error={\r\n                                  errors.emails ? errors.emails.message : \"\"\r\n                                }\r\n                                rules={{\r\n                                  required: {\r\n                                    value: true,\r\n                                    message: \"Email to send is required\",\r\n                                  },\r\n                                }}\r\n                              />\r\n                            </Hidden>\r\n                            <Hidden only={[\"base\", \"sm\"]}>\r\n                              <HStack space={2}>\r\n                                <ShadowInput\r\n                                  style={{ width: \"34%\" }}\r\n                                  suffix='Nos(s)'\r\n                                  control={control}\r\n                                  id='emails'\r\n                                  name='emails'\r\n                                  label='Emails to send (nos.)'\r\n                                  placeholder='8'\r\n                                  maxLength={4}\r\n                                  // defaultValue={item.emails.toString()}\r\n                                  onChangeText={(v) => {\r\n                                    // setValue(\"emails\", v);\r\n                                    // trigger(\"emails\");\r\n                                    setStepChanged(true);\r\n                                  }}\r\n                                  invalid={errors.emails ? true : false}\r\n                                  error={\r\n                                    errors.emails ? errors.emails.message : \"\"\r\n                                  }\r\n                                  rules={{\r\n                                    required: {\r\n                                      value: true,\r\n                                      message: \"Email to send is required\",\r\n                                    },\r\n                                  }}\r\n                                />\r\n\r\n                                {/* <ShadowSelect\r\n                                  style={{ width: \"24%\" }}\r\n                                  sameline\r\n                                  suffix=' '\r\n                                  control={control}\r\n                                  type='select'\r\n                                  items={sendTime}\r\n                                  name='sendtime'\r\n                                  id='sendtime'\r\n                                  label='Send Time'\r\n                                  placeholder='Select send time'\r\n                                  onChange={(v) => {\r\n                                    setStepChanged(true);\r\n                                  }}\r\n                                  invalid={errors.sendtime ? true : false}\r\n                                  error={\r\n                                    errors.sendtime\r\n                                      ? errors.sendtime.message\r\n                                      : \"\"\r\n                                  }\r\n                                  rules={{\r\n                                    required: {\r\n                                      value: true,\r\n                                      message: \"Select send time\",\r\n                                    },\r\n                                  }}\r\n                                /> */}\r\n                              </HStack>\r\n                            </Hidden>\r\n                          </HStack>\r\n                        )}\r\n                      <ShadowSelect\r\n                        style={{ width: \"24%\", marginTop:10, marginBottom: 20 }}\r\n                        sameline\r\n                        suffix=' '\r\n                        control={control}\r\n                        type='select'\r\n                        items={sendTime}\r\n                        name='sendtime'\r\n                        id='sendtime'\r\n                        label='Send Time'\r\n                        placeholder='Select send time'\r\n                        onChange={(v) => {\r\n                          setStepChanged(true);\r\n                        }}\r\n                        invalid={errors.sendtime ? true : false}\r\n                        error={errors.sendtime ? errors.sendtime.message : \"\"}\r\n                        rules={{\r\n                          required: {\r\n                            value: true,\r\n                            message: \"Select send time\",\r\n                          },\r\n                        }}\r\n                      />\r\n                    </VStack>\r\n                  )}\r\n                  {steps.length > 1 && item.active && (\r\n                    <Center\r\n                      style={{\r\n                        alignItems: \"flex-end\",\r\n                        paddingVertical: 10,\r\n                        paddingRight: 25,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{ color: \"red\", fontSize: 10 }}\r\n                        onPress={() => {\r\n                          setAlertConfig({\r\n                            header: \"Delete?\",\r\n                            desc: \"Are you sure you want to delete this Step?\",\r\n                            nolabel: \"No\",\r\n                            yeslabel: \"Yes\",\r\n                            yes: deleteStep,\r\n                            no: onClose,\r\n                          });\r\n                          setIsAlertOpen(true);\r\n                        }}\r\n                      >\r\n                        Remove Step\r\n                      </Text>\r\n                    </Center>\r\n                  )}\r\n                </VStack>\r\n              );\r\n            })}\r\n          </VStack>\r\n        </ShadowModal>\r\n        <ShadowModal\r\n          size='md'\r\n          isOpen={isAlertOpen}\r\n          close={onAlertClose}\r\n          header={alertConfig.header}\r\n          buttons={\r\n            <HStack space={2}>\r\n              <ShadowButton\r\n                space={3}\r\n                variant='outline'\r\n                label={alertConfig.nolabel}\r\n                onPress={alertConfig.no}\r\n                ref={cancelRef}\r\n              />\r\n\r\n              {alertConfig.yeslabel && (\r\n                <ShadowButton\r\n                  space={3}\r\n                  // isLoading={isDeleting}\r\n                  label={alertConfig.yeslabel}\r\n                  onPress={alertConfig.yes}\r\n                />\r\n              )}\r\n            </HStack>\r\n          }\r\n        >\r\n          <Text\r\n            style={{\r\n              fontFamily: \"Poppins\",\r\n              fontSize: vw(13),\r\n              color: \"rgba(0,0,0,0.8)\",\r\n            }}\r\n          >\r\n            {alertConfig.desc}\r\n          </Text>\r\n        </ShadowModal>\r\n      </VStack>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddCampaign;\r\n","/**\r\n *\r\n * Templates List Screen\r\n * Author:Justin Antony\r\n * last modified on 04/nov/2021\r\n *\r\n */\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  Text,\r\n  FlatList,\r\n  Center,\r\n  useToast,\r\n  Spinner,\r\n  HStack,\r\n  Pressable,\r\n  VStack,\r\n  Hidden,\r\n  useBreakpointValue,\r\n} from \"native-base\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { vw, vh } from \"../../../util\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport * as campaignActions from \"../../../store/actions/campaigns\";\r\nimport * as templateActions from \"../../../store/actions/templates\";\r\nimport VerticalItem from \"./VerticalItem\";\r\nimport NavBar from \"../home/NavBar\";\r\nimport AddCampaign from \"./AddCampaign\";\r\nimport * as events from \"../../../store/events\";\r\nimport ShadowPagination from \"../../../components/ShadowPagination\";\r\nimport ShadowButton from \"../../../components/ShadowButton\";\r\nimport ShadowModal from \"../../../components/ShadowModal\";\r\n\r\nconst PageHeader = ({\r\n  listStyle,\r\n  setListStyle,\r\n  navigate,\r\n  setIsOpen,\r\n  dispatch,\r\n  _showAlert,\r\n  templates,\r\n}) => {\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  return (\r\n    <VStack\r\n      style={{\r\n        marginHorizontal: vw(20),\r\n        borderBottomColor: \"rgba(0,0,0,0.15)\",\r\n        borderBottomWidth: 1,\r\n        marginTop: vh(-10),\r\n      }}\r\n    >\r\n      <HStack justifyContent={\"space-between\"}>\r\n        <Text\r\n          style={{\r\n            fontSize: vw(24),\r\n            paddingTop: vh(30),\r\n            width: vw(300),\r\n            color: \"#303030\",\r\n            fontFamily: \"Poppins_medium\",\r\n            justifyContent: \"flex-start\",\r\n          }}\r\n        >\r\n          {\"Campaigns\"}\r\n        </Text>\r\n        <Hidden only={[\"sm\", \"base\"]}>\r\n          <HStack alignSelf={\"center\"}>\r\n            <Pressable\r\n              onPress={() => {\r\n                navigate(\"/campaigns\");\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  fontSize: vw(15),\r\n                  paddingTop: vh(40),\r\n                  paddingHorizontal: 10,\r\n                  color: Colors.primary,\r\n                  fontFamily: \"Poppins_medium\",\r\n                  marginHorizontal: vw(25),\r\n                  paddingBottom: vh(13),\r\n                  borderBottomWidth: vh(4),\r\n                  borderBottomColor: \"rgba(125, 43, 233, 1)\",\r\n                }}\r\n              >\r\n                Campaigns\r\n              </Text>\r\n            </Pressable>\r\n            <Pressable\r\n              onPress={() => {\r\n                navigate(\"/templates\");\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  fontSize: vw(15),\r\n                  paddingTop: vh(40),\r\n                  paddingHorizontal: 10,\r\n                  color: \"#303030\",\r\n                  fontFamily: \"Poppins_medium\",\r\n                  marginHorizontal: vw(25),\r\n                  paddingBottom: vh(13),\r\n                  borderBottomWidth: vh(0),\r\n                  borderBottomColor: \"rgba(125, 43, 233, 1)\",\r\n                }}\r\n              >\r\n                Templates\r\n              </Text>\r\n            </Pressable>\r\n            <Pressable\r\n              onPress={() => {\r\n                navigate(\"/signatures\");\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  fontSize: vw(15),\r\n                  paddingTop: vh(40),\r\n                  paddingHorizontal: 10,\r\n                  color: \"#303030\",\r\n                  fontFamily: \"Poppins_medium\",\r\n                  marginHorizontal: vw(25),\r\n                  paddingBottom: vh(13),\r\n                  borderBottomWidth: vh(0),\r\n                  borderBottomColor: \"rgba(125, 43, 233, 1)\",\r\n                }}\r\n              >\r\n                Signatures\r\n              </Text>\r\n            </Pressable>\r\n          </HStack>\r\n        </Hidden>\r\n        <HStack\r\n          style={{ marginTop: vh(20), width: vw(300) }}\r\n          alignItems={\"center\"}\r\n          justifyContent={\"flex-end\"}\r\n          space={2}\r\n        >\r\n          <ShadowButton\r\n            onPress={async () => {\r\n              if (templates && templates.length === 0) {\r\n                setIsAlertOpen(true);\r\n              } else {\r\n                try {\r\n                  await dispatch({\r\n                    type: events.SET_CURRENT_CAMPAIGN,\r\n                    data: null,\r\n                  });\r\n                  setIsOpen(true);\r\n                } catch (err) {\r\n                  _showAlert(\"error\", err.message);\r\n                }\r\n              }\r\n            }}\r\n            label={\"+ Create\"}\r\n            style={{ height: vh(36) }}\r\n          />\r\n        </HStack>\r\n      </HStack>\r\n      <Hidden from='md'>\r\n        <HStack alignSelf={\"center\"}>\r\n          <Pressable\r\n            onPress={() => {\r\n              navigate(\"/campaigns\");\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontSize: vw(15),\r\n                paddingTop: vh(20),\r\n                paddingHorizontal: 10,\r\n                color: Colors.primary,\r\n                fontFamily: \"Poppins_medium\",\r\n                marginHorizontal: vw(10),\r\n                paddingBottom: vh(13),\r\n                borderBottomWidth: vh(4),\r\n                borderBottomColor: \"rgba(125, 43, 233, 1)\",\r\n              }}\r\n            >\r\n              Campaigns\r\n            </Text>\r\n          </Pressable>\r\n          <Pressable\r\n            onPress={() => {\r\n              navigate(\"/templates\");\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontSize: vw(15),\r\n                paddingTop: vh(20),\r\n                paddingHorizontal: 10,\r\n                color: \"#303030\",\r\n                fontFamily: \"Poppins_medium\",\r\n                marginHorizontal: vw(10),\r\n                paddingBottom: vh(13),\r\n                borderBottomWidth: vh(0),\r\n                borderBottomColor: \"rgba(125, 43, 233, 1)\",\r\n              }}\r\n            >\r\n              Templates\r\n            </Text>\r\n          </Pressable>\r\n          <Pressable\r\n            onPress={() => {\r\n              navigate(\"/signatures\");\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontSize: vw(15),\r\n                paddingTop: vh(20),\r\n                paddingHorizontal: 10,\r\n                color: \"#303030\",\r\n                fontFamily: \"Poppins_medium\",\r\n                marginHorizontal: vw(10),\r\n                paddingBottom: vh(13),\r\n                borderBottomWidth: vh(0),\r\n                borderBottomColor: \"rgba(125, 43, 233, 1)\",\r\n              }}\r\n            >\r\n              Signatures\r\n            </Text>\r\n          </Pressable>\r\n        </HStack>\r\n      </Hidden>\r\n      <ShadowModal\r\n        size='md'\r\n        isOpen={isAlertOpen}\r\n        header={\"Attention!\"}\r\n        close={() => {\r\n          setIsAlertOpen(false);\r\n        }}\r\n        buttons={\r\n          <HStack space={2}>\r\n            <ShadowButton\r\n              space={2}\r\n              onPress={() => {\r\n                setIsAlertOpen(false);\r\n              }}\r\n              label='Cancel'\r\n              variant='outline'\r\n              color={Colors.primary}\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n            <ShadowButton\r\n              space={2}\r\n              onPress={() => {\r\n                navigate(\"/templates\");\r\n              }}\r\n              label='Add Template'\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n          </HStack>\r\n        }\r\n      >\r\n        <Text\r\n          style={{\r\n            fontFamily: \"Poppins\",\r\n            fontSize: vw(15),\r\n            color: \"rgba(0,0,0,0.8)\",\r\n          }}\r\n        >\r\n          You need a template to add a campaign\r\n        </Text>\r\n      </ShadowModal>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nconst Index = ({ user, setLogout }) => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const sz = useBreakpointValue({\r\n    base: \"base\",\r\n    sm: \"sm\",\r\n    lg: \"lg\",\r\n    md: \"md\",\r\n    xl: \"xl\",\r\n  });\r\n  const toast = useToast();\r\n  const [limit, setLimit] = useState(50);\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  // const onClose = () => setIsOpen(false);\r\n  const [listStyle, setListStyle] = useState(\"vertical\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isRefreshing, setIsRefreshing] = useState(false);\r\n  const [setShowPreview] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const { userCampaigns: campaigns, total } = useSelector(\r\n    (state) => state.campaigns\r\n  );\r\n  const templates = useSelector((state) => state.templates.userTemplates);\r\n\r\n  const _showAlert = useCallback(\r\n    (status, msg) => {\r\n      toast.closeAll();\r\n      toast.show({\r\n        placement: \"top\",\r\n        duration: 1000,\r\n        render: () => {\r\n          let bg = \"red.300\";\r\n          if (status === \"error\") {\r\n            bg = \"red.300\";\r\n          } else if (status === \"success\") {\r\n            bg = \"green.300\";\r\n          } else if (status === \"info\") {\r\n            bg = \"blueGray.300\";\r\n          } else if (status === \"warning\") {\r\n            bg = \"orange.300\";\r\n          }\r\n          return (\r\n            <Text\r\n              style={{\r\n                fontSize: vw(12),\r\n                fontFamily: \"Poppins_medium\",\r\n                color: \"#33214B\",\r\n              }}\r\n              p={2}\r\n              bg={bg}\r\n              rounded={\"full\"}\r\n            >\r\n              {msg}\r\n            </Text>\r\n          );\r\n        },\r\n      });\r\n    },\r\n    [toast]\r\n  );\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await dispatch(templateActions.fetchTemplates(1, 1000));\r\n    })();\r\n  }, [dispatch]);\r\n\r\n  const loadCampaigns = useCallback(async () => {\r\n    setIsRefreshing(true);\r\n    try {\r\n      await dispatch(campaignActions.fetchCampaigns(page, limit));\r\n    } catch (err) {\r\n      _showAlert(\"error\", err.message);\r\n    }\r\n    setIsRefreshing(false);\r\n  }, [dispatch, _showAlert, page, limit]);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    loadCampaigns().then(() => {\r\n      setIsLoading(false);\r\n    });\r\n    return () => {\r\n      setIsLoading(false);\r\n      setIsRefreshing(false);\r\n    };\r\n  }, [dispatch, loadCampaigns, page]);\r\n\r\n  const NoItemsFound = () => {\r\n    return (\r\n      <Center mt={250} flex={1}>\r\n        <Text>No items found.</Text>\r\n      </Center>\r\n    );\r\n  };\r\n\r\n  const ph = 100 - parseFloat(vh(70)) + \"vh\";\r\n\r\n  const cardwidth = 250;\r\n  let cols = Math.floor(window.screen.width / cardwidth);\r\n  if (cols === 0) {\r\n    cols = 1;\r\n  }\r\n\r\n  return (\r\n    <VStack style={{ minHeight: \"100vh\" }} bg={\"white\"} flex={1}>\r\n      <NavBar user={user} setLogout={setLogout} />\r\n      <VStack height={ph}>\r\n        <PageHeader\r\n          templates={templates}\r\n          navigate={navigate}\r\n          setListStyle={setListStyle}\r\n          listStyle={listStyle}\r\n          setIsOpen={setIsOpen}\r\n          dispatch={dispatch}\r\n          _showAlert={_showAlert}\r\n        />\r\n        {isLoading ? (\r\n          <Center flex={1}>\r\n            <Spinner size={\"small\"} color={Colors.primary} />\r\n          </Center>\r\n        ) : (\r\n          <>\r\n            {cols === 1 ? (\r\n              <FlatList\r\n                key={\"list-\" + cols}\r\n                style={{\r\n                  marginLeft: sz === \"base\" || sz === \"sm\" ? vw(-10) : 0,\r\n                }}\r\n                contentContainerStyle={{ paddingBottom: 20 }}\r\n                ListEmptyComponent={<NoItemsFound />}\r\n                refreshing={isRefreshing}\r\n                removeClippedSubviews={true}\r\n                data={campaigns}\r\n                keyExtractor={(item) => item._id}\r\n                renderItem={({ item }) => {\r\n                  return (\r\n                    <VerticalItem\r\n                      cols={cols}\r\n                      item={item}\r\n                      setIsOpen={setIsOpen}\r\n                      setShowPreview={setShowPreview}\r\n                    />\r\n                  );\r\n                }}\r\n                // columnWrapperStyle={{\r\n                //   justifyContent:\r\n                //     campaigns.length > 5 ? \"space-between\" : \"flex-start\",\r\n                // }}\r\n                // numColumns={5}\r\n              />\r\n            ) : (\r\n              <FlatList\r\n                key={\"list-\" + cols}\r\n                style={{\r\n                  marginLeft: sz === \"base\" || sz === \"sm\" ? vw(-10) : 0,\r\n                }}\r\n                contentContainerStyle={{ paddingBottom: 20 }}\r\n                ListEmptyComponent={<NoItemsFound />}\r\n                refreshing={isRefreshing}\r\n                removeClippedSubviews={true}\r\n                data={campaigns}\r\n                keyExtractor={(item) => item._id}\r\n                renderItem={({ item }) => {\r\n                  return (\r\n                    <VerticalItem\r\n                      cols={cols}\r\n                      item={item}\r\n                      setIsOpen={setIsOpen}\r\n                      setShowPreview={setShowPreview}\r\n                    />\r\n                  );\r\n                }}\r\n                columnWrapperStyle={{\r\n                  justifyContent:\r\n                    campaigns.length > 5 ? \"space-between\" : \"flex-start\",\r\n                }}\r\n                numColumns={5}\r\n              />\r\n            )}\r\n            {total > limit && (\r\n              <ShadowPagination\r\n                limit={limit}\r\n                total={total}\r\n                page={page}\r\n                setPage={setPage}\r\n                setIsLoading={setIsLoading}\r\n                setLimit={setLimit}\r\n              />\r\n            )}\r\n          </>\r\n        )}\r\n        {isOpen && (\r\n          <AddCampaign\r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n            templates={templates}\r\n          />\r\n        )}\r\n      </VStack>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"],"names":["vw","Util","vh","ShadowInput","React","props","ref","isRequired","isInvalid","invalid","isReadOnly","style","height","label","fontSize","fontFamily","color","labelstyle","control","rules","name","zIndex","render","field","onChange","value","onBlur","size","multiline","numberOfLines","minLength","maxLength","autoComplete","autoFocus","type","onSubmitEditing","onKeyPress","onChangeText","variant","invalidOutlineColor","focusOutlineColor","_invalid","borderColor","borderWidth","_light","_dark","_web","backgroundColor","InputLeftElement","leftIcon","InputRightElement","rightIcon","placeholder","marginTop","error","help","onTrackColor","Colors","onToggle","v","isChanged","colorScheme","primary","accent","VerticalItem","item","setIsOpen","dispatch","useDispatch","Pressable","onPress","events","data","VStack","boxShadow","width","marginHorizontal","marginVertical","borderRadius","Text","description","HStack","justifyContent","send_mode","default","team","createdUser","_id","isOpen","templates","sz","useBreakpointValue","base","sm","lg","md","xl","navigate","useNavigate","toast","useToast","cancelRef","isAlertOpen","setIsAlertOpen","onClose","useCallback","onAlertClose","useState","header","desc","nolabel","yeslabel","yes","no","alertConfig","setAlertConfig","currentCampaign","useSelector","state","campaigns","steps","active","postcardtemplate","postcardrepeat","postcardevery","postcards","emailtemplate","emailrepeat","emailevery","emails","sendtime","setSteps","isLoading","setIsLoading","isSaving","setIsSaving","stepChanged","setStepChanged","activeStep","find","s","useForm","mode","defaultValues","_","handleSubmit","errors","formState","getValues","setValue","trigger","sendMode","_showAlert","status","msg","show","placement","bg","p","rounded","saveHandler","templatesNotFound","filter","f","length","postdata","map","index","step","action","campaignActions","iseq","cc","redirect","console","log","message","useEffect","activeSteps","activeIndex","findIndex","toString","updateStep","deleteStep","availableSteps","currStep","deleteHandler","Center","flex","Button","margin","paddingHorizontal","postcardTemplates","templatetype","emailTemplates","sendingModeOptions","sendTime","Array","keys","moment","startOf","add","format","Spinner","mb","ShadowModal","close","save","Object","footerStyle","buttons","space","ShadowButton","postcardTemplate","emailTemplate","concat","addNewStep","zoom","marginBottom","required","inputStyle","ShadowSelect","items","ShadowSwitch","id","isChecked","idx","paddingVertical","selectedIndex","allSteps","makeStepActive","py","borderBottomWidth","borderBottomColor","marginLeft","DropDownIcon","c","isDisabled","suffix","Hidden","from","only","sameline","alignItems","paddingRight","PageHeader","listStyle","setListStyle","paddingTop","alignSelf","paddingBottom","user","setLogout","limit","setLimit","isRefreshing","setIsRefreshing","setShowPreview","page","setPage","userCampaigns","total","userTemplates","closeAll","duration","templateActions","loadCampaigns","then","NoItemsFound","mt","ph","parseFloat","cols","Math","floor","window","screen","minHeight","NavBar","FlatList","contentContainerStyle","ListEmptyComponent","refreshing","removeClippedSubviews","keyExtractor","renderItem","columnWrapperStyle","numColumns","ShadowPagination"],"sourceRoot":""}