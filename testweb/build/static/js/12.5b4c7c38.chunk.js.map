{"version":3,"file":"static/js/12.5b4c7c38.chunk.js","mappings":"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","sources":["components/svg/ArrowDownIcon.js","components/svg/ArrowUpIcon.js","components/svg/SearchIcon.js","pages/private/account/Faq.js","pages/private/account/PageHeader.js","../node_modules/native-base/lib/module/components/basic/FlatList/FlatList.tsx","../node_modules/native-base/lib/module/utils/accessibilityUtils.ts","../node_modules/native-base/lib/module/components/composites/FormControl/useFormControl.tsx","../node_modules/native-base/lib/module/utils/resolveStackStyleInput.ts","../node_modules/native-base/lib/module/components/primitives/Input/Input.tsx","../node_modules/native-base/lib/module/components/primitives/Input/index.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\nimport { vw, vh } from \"../../util\";\r\n\r\nconst ArrowDownIcon = ({ fill }) => (\r\n  <Svg xmlns='http://www.w3.org/2000/svg' width={vw(24)} height={vh(24)}>\r\n    <Path data-name='Rectangle 287' fill='none' d='M0 0h24v24H0z' />\r\n    <Path\r\n      data-name='Path 149'\r\n      d='m12 12.682 3.708-3.717 1.062 1.062L12 14.8l-4.77-4.773 1.062-1.062Z'\r\n      fill={fill || \"#666\"}\r\n    />\r\n  </Svg>\r\n);\r\n\r\nexport default ArrowDownIcon;\r\n","import * as React from \"react\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\nimport { vw, vh } from \"../../util\";\r\n\r\nconst ArrowUpIcon = ({ fill }) => (\r\n  <Svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    width={vw(24)}\r\n    height={vh(24)}\r\n    viewBox='0 0 24 24'\r\n  >\r\n    <Path data-name='Rectangle 287' fill='none' d='M0 0h24v24H0z' />\r\n    <Path\r\n      data-name='Path 10193'\r\n      d='m12 10.918-3.708 3.717-1.062-1.062L12 8.8l4.77 4.77-1.062 1.065Z'\r\n      fill={fill || \"#686868\"}\r\n    />\r\n  </Svg>\r\n);\r\n\r\nexport default ArrowUpIcon;\r\n","import * as React from \"react\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\nimport { vh, vw } from \"../../util\";\r\n\r\nconst SearchIcon = ({ fill, width, height }) => (\r\n  <Svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    viewBox='0 0 24 24'\r\n    width={vw(width||24)}\r\n    height={vh(height || 24)}\r\n  >\r\n    <Path data-name='Rectangle 37' fill='none' d='M0 0h24v24H0z' />\r\n    <Path\r\n      data-name='Path 161'\r\n      d='m17.03 15.85 3.57 3.57-1.18 1.17-3.57-3.56a7.623 7.623 0 0 1-2.205 1.215 7.389 7.389 0 0 1-2.475.425 7.4 7.4 0 0 1-2.92-.59 7.388 7.388 0 0 1-2.385-1.61 7.516 7.516 0 0 1-1.605-2.38 7.457 7.457 0 0 1-.59-2.925 7.385 7.385 0 0 1 .59-2.915 7.427 7.427 0 0 1 1.605-2.385A7.427 7.427 0 0 1 8.25 4.26a7.385 7.385 0 0 1 2.915-.59 7.457 7.457 0 0 1 2.925.59 7.516 7.516 0 0 1 2.38 1.605 7.388 7.388 0 0 1 1.61 2.385 7.4 7.4 0 0 1 .59 2.92 7.389 7.389 0 0 1-.425 2.475 7.623 7.623 0 0 1-1.215 2.205Zm-1.68-.62a5.724 5.724 0 0 0 1.225-1.875A5.8 5.8 0 0 0 17 11.17a5.734 5.734 0 0 0-.46-2.27 5.75 5.75 0 0 0-1.25-1.86 5.78 5.78 0 0 0-1.85-1.25 5.793 5.793 0 0 0-2.275-.46 5.721 5.721 0 0 0-2.265.46 5.75 5.75 0 0 0-1.86 1.25A5.75 5.75 0 0 0 5.79 8.9a5.721 5.721 0 0 0-.46 2.265 5.793 5.793 0 0 0 .46 2.275 5.78 5.78 0 0 0 1.25 1.85 5.75 5.75 0 0 0 1.86 1.25 5.734 5.734 0 0 0 2.27.46 5.8 5.8 0 0 0 2.185-.425 5.724 5.724 0 0 0 1.875-1.225Z'\r\n      fill={fill || \"#686868\"}\r\n    />\r\n  </Svg>\r\n);\r\n\r\nexport default SearchIcon;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Input,\r\n  VStack,\r\n  FlatList,\r\n  Text,\r\n  HStack,\r\n  Center,\r\n  Pressable,\r\n  Avatar,\r\n  Hidden,\r\n} from \"native-base\";\r\n\r\nimport { vw, vh } from \"../../../util\";\r\nimport PageHeader from \"./PageHeader\";\r\nimport SearchIcon from \"../../../components/svg/SearchIcon\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ArrowUpIcon from \"../../../components/svg/ArrowUpIcon\";\r\nimport ArrowDownIcon from \"../../../components/svg/ArrowDownIcon\";\r\nimport Colors from \"../../../constants/Colors\";\r\n\r\nconst Faq = () => {\r\n  const [isOpen, setIsOpen] = useState(null);\r\n  const { faqs } = useSelector((state) => state.auth);\r\n\r\n  return (\r\n    <VStack style={{ minHeight: \"100vh\" }}>\r\n      <PageHeader\r\n        // noborder\r\n        title={\"Frequently Asked Questions\"}\r\n        // subtitle='Hay muchas variaciones de los pasajes de Lorem Ipsum disponibles'\r\n        rightElement={\r\n          <Input\r\n            autoComplete='Off'\r\n            style={{ fontFamily: \"Poppins\", fontSize: vw(14) }}\r\n            leftElement={<SearchIcon width={18} height={14} />}\r\n            variant={\"filled\"}\r\n            placeholder='Search'\r\n          />\r\n        }\r\n      />\r\n      <HStack space={10} justifyContent={\"space-between\"}>\r\n        <FlatList\r\n          contentContainerStyle={{ paddingBottom: 20, flexGrow: 1 }}\r\n          // ListEmptyComponent={<NoItemsFound />}\r\n          // onRefresh={loadIssues}\r\n          // refreshing={isRefreshing}\r\n          data={faqs}\r\n          keyExtractor={(item) => item._id.g}\r\n          renderItem={({ item }) => {\r\n            return (\r\n              <VStack key={item._id.g}>\r\n                <Text\r\n                  style={{\r\n                    fontSize: vw(24),\r\n                    fontFamily: \"Poppins_medium\",\r\n                    color: \"#382058\",\r\n                    paddingHorizontal: vw(12),\r\n                  }}\r\n                >\r\n                  {item._id.g}\r\n                </Text>\r\n                {item.faq &&\r\n                  item.faq.length > 0 &&\r\n                  item.faq.map((f, idx) => {\r\n                    return (\r\n                      <Pressable\r\n                        onPress={() => {\r\n                          setIsOpen((p) => (p === f._id ? null : f._id));\r\n                        }}\r\n                        style={{\r\n                          backgroundColor:\r\n                            isOpen === f._id ? \"white\" : \"transparent\",\r\n                          boxShadow:\r\n                            isOpen === f._id ? \"0px 0px 6px #0000001A\" : \"\",\r\n                          borderRadius: vw(6),\r\n                          paddingHorizontal: vw(12),\r\n                          marginVertical: vh(10),\r\n                        }}\r\n                        key={\"f-\" + idx}\r\n                      >\r\n                        <HStack justifyContent={\"space-between\"}>\r\n                          <Text\r\n                            style={{\r\n                              fontSize: vw(15),\r\n                              fontFamily: \"Poppins_medium\",\r\n                              color: \"#303030\",\r\n                              // paddingHorizontal: vw(12),\r\n                              paddingVertical: vh(5),\r\n                            }}\r\n                          >\r\n                            {f.q}\r\n                          </Text>\r\n                          <Center>\r\n                            {isOpen === f._id ? (\r\n                              <ArrowUpIcon />\r\n                            ) : (\r\n                              <ArrowDownIcon />\r\n                            )}\r\n                          </Center>\r\n                        </HStack>\r\n                        {isOpen === f._id && (\r\n                          <Text\r\n                            style={{\r\n                              fontSize: vw(13),\r\n                              fontFamily: \"Poppins\",\r\n                              color: \"#666666\",\r\n                              // paddingHorizontal: vw(12),\r\n                              paddingVertical: vh(5),\r\n                            }}\r\n                          >\r\n                            {f.a}\r\n                          </Text>\r\n                        )}\r\n                      </Pressable>\r\n                    );\r\n                  })}\r\n              </VStack>\r\n              \r\n            );\r\n          }}\r\n        />\r\n        <Hidden only={[\"sm\", \"base\"]}>\r\n          <VStack\r\n            style={{\r\n              backgroundColor: \"white\",\r\n              boxShadow: \"0px 3px 10px #0000001A\",\r\n              borderRadius: vw(10),\r\n              width: vw(320),\r\n              height: vh(300),\r\n              paddingHorizontal: vw(20),\r\n              paddingVertical: vh(20),\r\n            }}\r\n          >\r\n            <Center\r\n              style={{\r\n                height: \"100%\",\r\n                width: \"100%\",\r\n                // borderStyle: \"dashed\",\r\n                // borderWidth: vw(1.5),\r\n                // borderColor: \"#E0E4EC\",\r\n                backgroundImage: `url(\"data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' stroke='%23E0E4ECFF' stroke-width='4' stroke-dasharray='6%2c 14' stroke-dashoffset='0' stroke-linecap='square'/%3e%3c/svg%3e\")`,\r\n              }}\r\n            >\r\n              <HStack style={{ marginTop: vh(50), justifyContent: \"center\" }}>\r\n                <Avatar\r\n                  style={{\r\n                    backgroundColor: \"red\",\r\n                    position: \"absolute\",\r\n                    left: vw(-50),\r\n                    top: vh(-70),\r\n                    zIndex: 1,\r\n                  }}\r\n                />\r\n                <Avatar\r\n                  style={{\r\n                    backgroundColor: \"blue\",\r\n                    position: \"absolute\",\r\n                    top: vh(-80),\r\n                    zIndex: 3,\r\n                  }}\r\n                />\r\n                <Avatar\r\n                  style={{\r\n                    backgroundColor: \"green\",\r\n                    position: \"absolute\",\r\n                    right: vw(-50),\r\n                    top: vh(-70),\r\n                    zIndex: 2,\r\n                  }}\r\n                />\r\n              </HStack>\r\n              <Text\r\n                style={{\r\n                  fontFamily: \"Poppins_medium\",\r\n                  fontSize: vw(20),\r\n                  color: Colors.primary,\r\n                  height: vh(50),\r\n                }}\r\n              >\r\n                Still have questions?\r\n              </Text>\r\n              <Text\r\n                style={{\r\n                  fontFamily: \"Poppins_medium\",\r\n                  fontSize: vw(14),\r\n                  color: \"#303030\",\r\n                  marginTop: vh(10),\r\n                  textAlign: \"center\",\r\n                  height: vh(50),\r\n                }}\r\n              >\r\n                Can't find the answer you're looking for? Please contact to our\r\n                friendly team.\r\n              </Text>\r\n            </Center>\r\n          </VStack>\r\n        </Hidden>\r\n      </HStack>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Faq;\r\n","import React from \"react\";\r\nimport { HStack, VStack, Text } from \"native-base\";\r\nimport { vh, vw } from \"../../../util\";\r\n\r\nconst PageHeader = ({ title, subtitle, rightElement, noborder = false }) => {\r\n  let bottomBorder = {\r\n    borderBottomColor: \"rgba(0,0,0, 0.15)\",\r\n    borderBottomWidth: vw(1.5),\r\n    marginBottom: vh(20),\r\n  };\r\n  if (noborder) {\r\n    bottomBorder = {};\r\n  }\r\n  return (\r\n    <HStack\r\n      style={{ paddingBottom: vh(16), ...bottomBorder }}\r\n      justifyContent={\"space-between\"}\r\n    >\r\n      <VStack>\r\n        <Text\r\n          style={{\r\n            fontSize: vw(24),\r\n            color: \"#303030\",\r\n            fontFamily: \"Poppins_medium\",\r\n          }}\r\n        >\r\n          {title}\r\n        </Text>\r\n        <Text\r\n          style={{\r\n            fontSize: vw(13),\r\n            color: \"#666666\",\r\n            fontFamily: \"Poppins\",\r\n          }}\r\n        >\r\n          {subtitle}\r\n        </Text>\r\n      </VStack>\r\n      {rightElement}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import React, { forwardRef } from 'react';\nimport { FlatList as RNFlatList } from 'react-native';\nimport {\n  usePropsResolution,\n  useStyledSystemPropsResolver,\n} from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport type { IFlatListProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyledFlatList: any = makeStyledComponent(RNFlatList);\n\nconst FlatListComponent = <ItemT extends any>(\n  props: IFlatListProps<ItemT>,\n  ref: any\n) => {\n  const {\n    _contentContainerStyle,\n    contentContainerStyle,\n    ...resolvedProps\n  } = usePropsResolution('FlatList', props);\n  const resolved_ContentContainerStyle = useStyledSystemPropsResolver(\n    _contentContainerStyle || {}\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <StyledFlatList\n      {...resolvedProps}\n      contentContainerStyle={\n        contentContainerStyle || resolved_ContentContainerStyle\n      }\n      ref={ref}\n    />\n  );\n};\n\nexport const FlatList = forwardRef(FlatListComponent) as <ItemT>(\n  props: IFlatListProps<ItemT>,\n  ref: any\n) => any;\n","export const ariaAttr = (condition: boolean | undefined) =>\n  condition ? true : undefined;\n","import React from 'react';\nimport { useId } from '@react-native-aria/utils';\nimport omit from 'lodash.omit';\nimport type { IFormControlProps } from './types';\nimport { ariaAttr } from '../../../utils';\nimport { ResponsiveQueryContext } from '../../../utils/useResponsiveQuery/ResponsiveQueryProvider';\nimport { uniqueId } from 'lodash';\n\nexport type IFormControlContext = Omit<\n  ReturnType<typeof useFormControlProvider>,\n  'htmlProps'\n>;\n\nexport const FormControlContext = React.createContext({});\n\nexport function useFormControlProvider(props: IFormControlProps) {\n  const {\n    nativeID: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n\n  let id = uniqueId();\n  const responsiveQueryContext = React.useContext(ResponsiveQueryContext);\n  const disableCSSMediaQueries = responsiveQueryContext.disableCSSMediaQueries;\n\n  if (!disableCSSMediaQueries) {\n    // This if statement technically breaks the rules of hooks, but is safe\n    // because the condition never changes after mounting.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    id = useId();\n  }\n\n  // const id = '';\n  // Generate all the required ids\n  const nativeID = idProp || `field-${id}`;\n\n  const labelId = `${nativeID}-label`;\n  const feedbackId = `${nativeID}-feedback`;\n  const helpTextId = `${nativeID}-helptext`;\n\n  /**\n   * Track whether the `FormErrorMessage` has been rendered.\n   * We use this to append its id the the `aria-describedby` of the `input`.\n   */\n  const [hasFeedbackText, setHasFeedbackText] = React.useState(false);\n\n  /**\n   * Track whether the `FormHelperText` has been rendered.\n   * We use this to append its id the the `aria-describedby` of the `input`.\n   */\n  const [hasHelpText, setHasHelpText] = React.useState(false);\n\n  const context = {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    nativeID,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n  };\n\n  return context;\n}\n\n/**\n * React hook that provides the props that should be spread on to\n * input fields (`input`, `select`, `textarea`, etc.).\n *\n * It provides a convenient way to control a form fields, validation\n * and helper text.\n */\nexport function useFormControl(props: IFormControlProps) {\n  const field = useFormControlContext();\n  const describedBy: any[] = [];\n\n  // Error message must be described first in all scenarios.\n  if (field?.hasFeedbackText) describedBy.push(field?.feedbackId);\n  if (field?.hasHelpText) describedBy.push(field?.helpTextId);\n  const ariaDescribedBy = describedBy.join(' ');\n\n  const cleanProps = omit(props, [\n    'isInvalid',\n    'isDisabled',\n    'isReadOnly',\n    'isRequired',\n  ]);\n\n  return {\n    ...cleanProps,\n    nativeID: props.nativeID ?? field?.nativeID + '-input',\n    disabled: props.isDisabled || field?.isDisabled,\n    readOnly: props.isReadOnly || field?.isReadOnly,\n    required: props.isRequired || field?.isRequired,\n    accessibilityInvalid: ariaAttr(props.isInvalid || field?.isInvalid),\n    accessibilityRequired: ariaAttr(props.isRequired || field?.isRequired),\n    accessibilityReadOnly: ariaAttr(props.isReadOnly || field?.isReadOnly),\n    accessibilityDescribedBy: ariaDescribedBy || undefined,\n  };\n}\n\nexport const useFormControlContext = () => {\n  return (React.useContext(\n    FormControlContext\n  ) as unknown) as IFormControlContext;\n};\n","export const resolveStackStyleInput = (variant: any, color: any) => {\n  if (variant === 'underlined') {\n    return {\n      outlineWidth: '0',\n      boxShadow: `0 1px 0 0 ${color}`,\n    };\n  } else if (variant === 'unstyled') {\n    return {\n      outlineWidth: 0,\n    };\n  } else {\n    return {\n      outlineWidth: '0',\n      boxShadow: `0 0 0 1px ${color}`,\n    };\n  }\n};\n","import React, { memo, forwardRef } from 'react';\nimport type { IInputProps } from './types';\nimport { TextInput } from 'react-native';\nimport { useToken } from '../../../hooks';\nimport { useFormControl } from '../../composites/FormControl';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { useHover } from '@react-native-aria/interactions';\nimport { extractInObject, stylingProps } from '../../../theme/tools/utils';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { mergeRefs, resolveStackStyleInput } from '../../../utils';\nimport { Stack } from '../Stack';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { useResolvedFontFamily } from '../../../hooks/useResolvedFontFamily';\n\nconst StyledInput = makeStyledComponent(TextInput);\n\nconst Input = (\n  {\n    isHovered: isHoveredProp,\n    isFocused: isFocusedProp,\n    onKeyPress,\n    InputLeftElement,\n    InputRightElement,\n    leftElement,\n    rightElement,\n    ...props\n  }: IInputProps,\n  ref: any\n) => {\n  const inputProps = useFormControl({\n    isDisabled: props.isDisabled,\n    isInvalid: props.isInvalid,\n    isReadOnly: props.isReadOnly,\n    isRequired: props.isRequired,\n    nativeID: props.nativeID,\n  });\n  const [isFocused, setIsFocused] = React.useState(false);\n  const handleFocus = (focusState: boolean, callback: any) => {\n    setIsFocused(focusState);\n    callback();\n  };\n\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n\n  const inputThemeProps = {\n    isDisabled: inputProps.disabled,\n    isInvalid: inputProps.accessibilityInvalid,\n    isReadOnly: inputProps.accessibilityReadOnly,\n    isRequired: inputProps.required,\n  };\n\n  const {\n    ariaLabel,\n    accessibilityLabel,\n    type,\n    isFullWidth,\n    isDisabled,\n    isReadOnly,\n    fontFamily,\n    fontWeight,\n    fontStyle,\n    placeholderTextColor,\n    selectionColor,\n    underlineColorAndroid,\n    onFocus,\n    onBlur,\n    wrapperRef,\n    _stack,\n    _input,\n\n    ...resolvedProps\n  } = usePropsResolution(\n    'Input',\n    {\n      ...inputThemeProps,\n      ...props,\n    },\n    {\n      isDisabled: inputThemeProps.isDisabled,\n      isHovered: isHoveredProp || isHovered,\n      isFocused: isFocusedProp || isFocused,\n      isInvalid: inputThemeProps.isInvalid,\n      isReadOnly: inputThemeProps.isReadOnly,\n    }\n  );\n\n  const [layoutProps, nonLayoutProps] = extractInObject(resolvedProps, [\n    ...stylingProps.margin,\n    ...stylingProps.border,\n    ...stylingProps.layout,\n    ...stylingProps.flexbox,\n    ...stylingProps.position,\n    ...stylingProps.background,\n    'shadow',\n    'opacity',\n  ]);\n\n  const resolvedFontFamily = useResolvedFontFamily({\n    fontFamily,\n    fontWeight: fontWeight ?? 400,\n    fontStyle: fontStyle ?? 'normal',\n  });\n  const resolvedPlaceholderTextColor = useToken('colors', placeholderTextColor);\n  const resolvedSelectionColor = useToken('colors', selectionColor);\n  const resolvedUnderlineColorAndroid = useToken(\n    'colors',\n    underlineColorAndroid\n  );\n\n  /**Converting into Hash Color Code */\n  //@ts-ignore\n  resolvedProps.focusOutlineColor = useToken(\n    'colors',\n    resolvedProps.focusOutlineColor\n  );\n  //@ts-ignore\n  resolvedProps.invalidOutlineColor = useToken(\n    'colors',\n    resolvedProps.invalidOutlineColor\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  if (resolvedProps.focusOutlineColor && isFocused) {\n    layoutProps.borderColor = resolvedProps.focusOutlineColor;\n    _stack.style = resolveStackStyleInput(\n      props.variant,\n      resolvedProps.focusOutlineColor\n    );\n  }\n\n  if (resolvedProps.invalidOutlineColor && props.isInvalid) {\n    layoutProps.borderColor = resolvedProps.invalidOutlineColor;\n    _stack.style = resolveStackStyleInput(\n      props.variant,\n      resolvedProps.invalidOutlineColor\n    );\n  }\n\n  return (\n    <Stack\n      {..._stack}\n      {...layoutProps}\n      ref={mergeRefs([_ref, wrapperRef])}\n      isFocused={isFocused}\n    >\n      {InputLeftElement || leftElement ? InputLeftElement || leftElement : null}\n      <StyledInput\n        {...inputProps}\n        secureTextEntry={type === 'password'}\n        accessible\n        accessibilityLabel={ariaLabel || accessibilityLabel}\n        editable={isDisabled || isReadOnly ? false : true}\n        w={isFullWidth ? '100%' : undefined}\n        {...nonLayoutProps}\n        {...resolvedFontFamily}\n        placeholderTextColor={resolvedPlaceholderTextColor}\n        selectionColor={resolvedSelectionColor}\n        underlineColorAndroid={resolvedUnderlineColorAndroid}\n        onKeyPress={(e: any) => {\n          e.persist();\n          onKeyPress && onKeyPress(e);\n        }}\n        onFocus={(e: any) => {\n          handleFocus(true, onFocus ? () => onFocus(e) : () => {});\n        }}\n        onBlur={(e: any) => {\n          handleFocus(false, onBlur ? () => onBlur(e) : () => {});\n        }}\n        {..._input}\n        ref={mergeRefs([ref, _ref, wrapperRef])}\n      />\n      {InputRightElement || rightElement\n        ? InputRightElement || rightElement\n        : null}\n    </Stack>\n  );\n};\n\nexport default memo(forwardRef(Input));\n","export { InputGroup } from './InputGroup';\nexport { InputRightAddon, InputLeftAddon } from './InputAddons';\nexport type { IInputGroupProps, IInputProps } from './types';\n\nimport InputMain from './Input';\nimport type { IInputComponentType } from './types';\n\nconst InputTemp: any = InputMain;\n\n// To add typings\nconst Input = InputTemp as IInputComponentType;\n\nexport { Input };\n"],"names":["fill","xmlns","width","vw","height","vh","Path","d","viewBox","useState","isOpen","setIsOpen","faqs","useSelector","state","auth","style","minHeight","title","rightElement","autoComplete","fontFamily","fontSize","leftElement","variant","placeholder","space","justifyContent","contentContainerStyle","paddingBottom","flexGrow","data","keyExtractor","item","_id","g","renderItem","color","paddingHorizontal","faq","length","map","f","idx","onPress","p","backgroundColor","boxShadow","borderRadius","marginVertical","paddingVertical","q","a","only","backgroundImage","marginTop","position","left","top","zIndex","right","Colors","textAlign","subtitle","noborder","bottomBorder","borderBottomColor","borderBottomWidth","marginBottom","StyledFlatList","makeStyledComponent","RNFlatList","FlatListComponent","props","ref","usePropsResolution","_contentContainerStyle","resolvedProps","resolved_ContentContainerStyle","useStyledSystemPropsResolver","useHasResponsiveProps","React","FlatList","forwardRef","ariaAttr","condition","undefined","FormControlContext","useFormControlProvider","idProp","nativeID","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","id","uniqueId","ResponsiveQueryContext","disableCSSMediaQueries","useId","labelId","feedbackId","helpTextId","hasFeedbackText","setHasFeedbackText","hasHelpText","setHasHelpText","useFormControl","field","useFormControlContext","describedBy","push","ariaDescribedBy","join","cleanProps","omit","disabled","readOnly","required","accessibilityInvalid","accessibilityRequired","accessibilityReadOnly","accessibilityDescribedBy","resolveStackStyleInput","outlineWidth","StyledInput","TextInput","Input","isHoveredProp","isHovered","isFocusedProp","isFocused","onKeyPress","InputLeftElement","InputRightElement","inputProps","setIsFocused","handleFocus","focusState","callback","_ref","useHover","inputThemeProps","ariaLabel","accessibilityLabel","type","isFullWidth","fontWeight","fontStyle","placeholderTextColor","selectionColor","underlineColorAndroid","onFocus","onBlur","wrapperRef","_stack","_input","extractInObject","stylingProps","layoutProps","nonLayoutProps","resolvedFontFamily","useResolvedFontFamily","resolvedPlaceholderTextColor","useToken","resolvedSelectionColor","resolvedUnderlineColorAndroid","focusOutlineColor","invalidOutlineColor","borderColor","Stack","mergeRefs","secureTextEntry","accessible","editable","w","e","persist","memo"],"sourceRoot":""}