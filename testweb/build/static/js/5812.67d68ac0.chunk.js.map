{"version":3,"file":"static/js/5812.67d68ac0.chunk.js","mappings":"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","sources":["pages/public/Login.js"],"sourcesContent":["import React, { useState, useCallback, useRef } from \"react\";\r\nimport {\r\n  HStack,\r\n  VStack,\r\n  Center,\r\n  Text,\r\n  Pressable,\r\n  useToast,\r\n  Hidden,\r\n  useBreakpointValue,\r\n} from \"native-base\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport EmailIcon from \"../../components/svg/EmailIcon\";\r\nimport PasswordIcon from \"../../components/svg/PasswordIcon\";\r\n// import ShadowButton from \"../../components/ShadowButton\";\r\nimport EyeClosedIcon from \"../../components/svg/EyeClosedIcon\";\r\n// import LogoBlock from \"../../components/LogoBlock\";\r\n// import TermsBlock from \"../../components/TermsBlock\";\r\n// import WelcomeBlock from \"../../components/WelcomeBlock\";\r\n// import ForgotPassword from \"./ForgotPassword\";\r\n// import ShadowAuthInput from \"../../components/ShadowAuthInput\";\r\nimport * as authActions from \"../../store/actions/auth\";\r\nimport { vw, vh } from \"../../util\";\r\nimport WhiteLogo from \"../../components/svg/WhiteLogo\";\r\nimport Colors from \"../../constants/Colors\";\r\nimport EyeOpenIcon from \"../../components/svg/EyeOpenIcon\";\r\n\r\nconst ShadowButton = React.lazy(() => import(\"../../components/ShadowButton\"));\r\nconst LogoBlock = React.lazy(() => import(\"../../components/LogoBlock\"));\r\nconst TermsBlock = React.lazy(() => import(\"../../components/TermsBlock\"));\r\nconst WelcomeBlock = React.lazy(() => import(\"../../components/WelcomeBlock\"));\r\nconst ForgotPassword = React.lazy(() => import(\"./ForgotPassword\"));\r\nconst ShadowAuthInput = React.lazy(() =>\r\n  import(\"../../components/ShadowAuthInput\")\r\n);\r\n\r\nconst Login = ({ setIsIn, page, setPage }) => {\r\n  const sz = useBreakpointValue({\r\n    base: \"base\",\r\n    sm: \"sm\",\r\n    lg: \"lg\",\r\n    md: \"md\",\r\n    xl: \"xl\",\r\n  });\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const toast = useToast();\r\n  const dispatch = useDispatch();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    mode: \"all\",\r\n  });\r\n\r\n  const _showAlert = useCallback(\r\n    (status, msg) => {\r\n      toast.show({\r\n        placement: \"top\",\r\n        duration: 2000,\r\n        render: () => {\r\n          let bg = \"red.300\";\r\n          if (status === \"error\") {\r\n            bg = \"red.300\";\r\n          } else if (status === \"success\") {\r\n            bg = \"green.300\";\r\n          } else if (status === \"info\") {\r\n            bg = \"blueGray.300\";\r\n          } else if (status === \"warning\") {\r\n            bg = \"orange.300\";\r\n          }\r\n          return (\r\n            <Text\r\n              style={{\r\n                fontSize: vw(12),\r\n                fontFamily: \"Poppins_medium\",\r\n                color: \"#33214B\",\r\n              }}\r\n              p={2}\r\n              bg={bg}\r\n              rounded={\"full\"}\r\n            >\r\n              {msg}\r\n            </Text>\r\n          );\r\n        },\r\n      });\r\n    },\r\n    [toast]\r\n  );\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      const action = authActions.login(data.email, data.password);\r\n      await dispatch(action);\r\n      _showAlert(\"success\", \"Logged in successfully.\");\r\n      setIsLoading(false);\r\n      setIsIn(true);\r\n    } catch (err) {\r\n      _showAlert(\"error\", err.message);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack style={{ minHeight: \"100vh\", flex: 1 }}>\r\n      <HStack flex={1} justifyContent={\"space-between\"}>\r\n        <Hidden only={[\"base\", \"sm\"]}>\r\n          <LogoBlock />\r\n        </Hidden>\r\n        <Center flex={1} justifyContent={\"center\"}>\r\n          <VStack\r\n            style={{\r\n              marginTop: vh(117),\r\n            }}\r\n            flex={1}\r\n          >\r\n            <Hidden from={\"md\"}>\r\n              <Center style={{ marginTop: vh(-80), marginBottom: vh(10) }}>\r\n                <WhiteLogo width={vw(43)} fill={Colors.primary} />\r\n              </Center>\r\n            </Hidden>\r\n            <WelcomeBlock />\r\n            <ShadowAuthInput\r\n              ref={emailRef}\r\n              name='email'\r\n              label={\"Email\"}\r\n              placeholder='Email'\r\n              control={control}\r\n              autoFocus={true}\r\n              onKeyPress={(e) => {\r\n                if (e.key === \"Tab\") {\r\n                  e.preventDefault();\r\n                  console.log(\"Tab\");\r\n                  passwordRef.current.focus();\r\n                } else if (e.key === \"Enter\") {\r\n                  e.preventDefault();\r\n                  setIsLoading(true);\r\n                  handleSubmit(onSubmit, () => {\r\n                    setIsLoading(false);\r\n                  })();\r\n                }\r\n              }}\r\n              rules={{\r\n                required: true,\r\n                message: \"Please enter your email address\",\r\n                pattern: {\r\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                  message: \"invalid email address\",\r\n                },\r\n              }}\r\n              error={errors.email ? true : false}\r\n              style={{ marginTop: vh(58) }}\r\n              inputStyle={{}}\r\n              leftIcon={\r\n                <EmailIcon\r\n                  style={{\r\n                    marginRight: vw(10),\r\n                  }}\r\n                  width={vw(24)}\r\n                  height={vh(24)}\r\n                  fill={errors.email ? \"red\" : \"#000\"}\r\n                />\r\n              }\r\n              tabIndex={1}\r\n            />\r\n            <ShadowAuthInput\r\n              ref={passwordRef}\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              name='password'\r\n              label={\"Password\"}\r\n              placeholder='Password'\r\n              control={control}\r\n              rules={{\r\n                required: {\r\n                  value: true,\r\n                  message: \"Please enter your password\",\r\n                },\r\n              }}\r\n              onKeyPress={(e) => {\r\n                if (e.key === \"Tab\") {\r\n                  e.preventDefault();\r\n                  e.preventDefault();\r\n                  setIsLoading(true);\r\n                  handleSubmit(onSubmit, () => {\r\n                    setIsLoading(false);\r\n                  })();\r\n                } else if (e.key === \"Enter\") {\r\n                  e.preventDefault();\r\n                  setIsLoading(true);\r\n                  handleSubmit(onSubmit, () => {\r\n                    setIsLoading(false);\r\n                  })();\r\n                }\r\n              }}\r\n              error={errors.password ? true : false}\r\n              inputStyle={{}}\r\n              leftIcon={\r\n                <PasswordIcon\r\n                  style={{\r\n                    marginRight: vw(10),\r\n                  }}\r\n                  width={vw(24)}\r\n                  height={vh(24)}\r\n                  fill={errors.password ? \"red\" : \"#000\"}\r\n                />\r\n              }\r\n              rightIcon={\r\n                <Pressable\r\n                  onPress={() => {\r\n                    setShowPassword(!showPassword);\r\n                  }}\r\n                >\r\n                  {!showPassword ? (\r\n                    <EyeOpenIcon\r\n                      style={{\r\n                        marginRight: vw(4),\r\n                      }}\r\n                    />\r\n                  ) : (\r\n                    <EyeClosedIcon\r\n                      style={{\r\n                        marginLeft: vw(10),\r\n                      }}\r\n                      width={vw(24)}\r\n                      height={vh(24)}\r\n                      //   fill={errors.password ? \"red\" : \"none\"}\r\n                    />\r\n                  )}\r\n                </Pressable>\r\n              }\r\n              tabIndex={2}\r\n            />\r\n            <Pressable\r\n              onPress={() => {\r\n                setShowModal(true);\r\n              }}\r\n              _web={{\r\n                marginTop: vh(40),\r\n                alignSelf: \"center\",\r\n                borderBottomWidth: vw(2),\r\n                borderBottomColor: \"#303030\",\r\n              }}\r\n            >\r\n              <Text\r\n                _web={{\r\n                  height: vh(21),\r\n                  color: \"#303030\",\r\n                  fontSize: vw(15),\r\n                  fontFamily: \"Poppins_medium\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                Forgot Password\r\n              </Text>\r\n            </Pressable>\r\n            <Center marginTop={vh(42)}>\r\n              <ShadowButton\r\n                label={\"Login\"}\r\n                isLoading={isLoading}\r\n                onPress={() => {\r\n                  setIsLoading(true);\r\n                  handleSubmit(onSubmit, () => {\r\n                    setIsLoading(false);\r\n                  })();\r\n                }}\r\n                style={{\r\n                  width: vw(320),\r\n                  height: vh(57),\r\n                }}\r\n              />\r\n            </Center>\r\n            <Center style={{ marginTop: vh(58) }}>\r\n              <HStack space={2} justifyContent={\"space-between\"}>\r\n                <Text\r\n                  _web={{\r\n                    color: \"rgba(48, 48, 48, 1);\",\r\n                    fontSize: vw(14),\r\n                    fontFamily: \"Poppins_medium\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  Don't have an account?\r\n                </Text>\r\n                <Pressable\r\n                  onPress={() => {\r\n                    setPage(\"register\");\r\n                  }}\r\n                  _web={{\r\n                    //   height: vh(40),\r\n                    alignSelf: \"center\",\r\n                    borderBottomWidth: vw(2),\r\n                    borderBottomColor: \"rgba(125, 43, 233, 1)\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    _web={{\r\n                      height: vh(21),\r\n                      color: \"rgba(125, 43, 233, 1)\",\r\n                      fontSize: vw(14),\r\n                      fontFamily: \"Poppins_medium\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    Sign up here\r\n                  </Text>\r\n                </Pressable>\r\n              </HStack>\r\n            </Center>\r\n            <TermsBlock />\r\n          </VStack>\r\n        </Center>\r\n      </HStack>\r\n      <ForgotPassword\r\n        sz={sz}\r\n        showModal={showModal}\r\n        setShowModal={setShowModal}\r\n      />\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["ShadowButton","React","LogoBlock","TermsBlock","WelcomeBlock","ForgotPassword","ShadowAuthInput","setIsIn","setPage","page","sz","useBreakpointValue","base","sm","lg","md","xl","emailRef","useRef","passwordRef","toast","useToast","dispatch","useDispatch","useState","isLoading","setIsLoading","showModal","setShowModal","showPassword","setShowPassword","useForm","mode","control","handleSubmit","errors","formState","_showAlert","useCallback","status","msg","show","placement","duration","render","bg","style","fontSize","vw","fontFamily","color","p","rounded","onSubmit","data","action","authActions","email","password","message","minHeight","flex","justifyContent","only","marginTop","vh","from","marginBottom","width","fill","Colors","ref","name","label","placeholder","autoFocus","onKeyPress","e","key","preventDefault","console","log","current","focus","rules","required","pattern","value","error","inputStyle","leftIcon","marginRight","height","tabIndex","type","rightIcon","onPress","marginLeft","_web","alignSelf","borderBottomWidth","borderBottomColor","textAlign","space"],"sourceRoot":""}