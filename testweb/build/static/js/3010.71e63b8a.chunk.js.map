{"version":3,"file":"static/js/3010.71e63b8a.chunk.js","mappings":"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","sources":["components/ShadowPagination.js","components/svg/EmailIcon.js","pages/private/templates/assets/Template1.js","pages/private/templates/assets/Template2.js","pages/private/templates/assets/Template3.js","pages/private/templates/assets/Template4.js","pages/private/templates/VerticalItem.js","pages/private/templates/AddTemplate.js","pages/private/templates/HtmlPreview.js","pages/private/templates/Preview.js","pages/private/templates/index.js","store/actions/templates.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { HStack, Select, Center, Pressable, Text } from \"native-base\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { vh, vw } from \"../util\";\r\nimport PrevIcon from \"./svg/PrevIcon\";\r\nimport NextIcon from \"./svg/NextIcon\";\r\nimport Colors from \"../constants/Colors\";\r\nimport DropDownIcon from \"./svg/DropDownIcon\";\r\n\r\nconst ShadowPagination = ({\r\n  total = 1,\r\n  limit = 10,\r\n  setLimit,\r\n  setPage,\r\n  page,\r\n  setIsLoading,\r\n  style,\r\n  view = true,\r\n  \r\n}) => {\r\n  const pageCount = Math.ceil(total / limit);\r\n\r\n  const onPageChange = (p) => {\r\n    setPage(p.selected + 1);\r\n  };\r\n\r\n  const MyPaginate = styled(ReactPaginate).attrs({\r\n    activeClassName: \"active\", // default to \"disabled\"\r\n  })`\r\n    margin-bottom: 1rem;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-end;\r\n    list-style-type: none;\r\n    padding: 0 1rem;\r\n    li a {\r\n      border-radius: 4px;\r\n      padding: 0.1rem 1rem;\r\n      cursor: pointer;\r\n      color: rgba(102, 102, 102, 1);\r\n      font-family: \"Poppins_medium\";\r\n      font-size: ${vw(15)};\r\n    }\r\n    li.previous a,\r\n    li.next a,\r\n    li.break a {\r\n      border-color: transparent;\r\n      color: rgba(102, 102, 102, 1);\r\n      font-family: \"Poppins_medium\";\r\n      font-size: ${vw(15)};\r\n    }\r\n    li.active a {\r\n      background-color: #7d2be9;\r\n      border-color: transparent;\r\n      color: white;\r\n      min-width: 24px;\r\n      font-family: \"Poppins_medium\";\r\n      font-size: ${vw(15)};\r\n    }\r\n    li.disabled a {\r\n      color: rgba(102, 102, 102, 0.5);\r\n    }\r\n    li.disable,\r\n    li.disabled a {\r\n      cursor: default;\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <HStack\r\n      style={{\r\n        boxShadow: \"0px 0px 15px rgba(0, 0, 0, 0.1)\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        height: vh(60),\r\n        backgroundColor: \"white\", //\"rgba(247, 248, 250, 1)\",\r\n        ...style,\r\n      }}\r\n    >\r\n      {view ? (\r\n        <HStack style={{ alignItems: \"center\", paddingHorizontal: vh(20) }}>\r\n          <Text\r\n            style={{\r\n              fontFamily: \"Poppins_medium\",\r\n              fontSize: vw(15),\r\n              color: \"rgba(102, 102, 102, 1)\",\r\n              marginRight: vw(10),\r\n            }}\r\n          >\r\n            View\r\n          </Text>\r\n          <Select\r\n            outlineColor={\"rgba(0,0,0.0.15)\"}\r\n            outlineStyle={{\r\n              borderWidth: vh(2),\r\n            }}\r\n            variant='outline'\r\n            selectedValue={parseInt(limit)}\r\n            style={{\r\n              width: vw(50),\r\n            }}\r\n            onValueChange={(v) => {\r\n              setPage(1);\r\n              setLimit(v);\r\n            }}\r\n            dropdownIcon={<DropDownIcon />}\r\n          >\r\n            <Select.Item label={\"1\"} value={1} />\r\n            <Select.Item label={\"5\"} value={5} />\r\n            <Select.Item label={\"10\"} value={10} />\r\n            <Select.Item label={\"20\"} value={20} />\r\n            <Select.Item label={\"30\"} value={30} />\r\n            <Select.Item label={\"40\"} value={40} />\r\n            <Select.Item label={\"50\"} value={50} />\r\n            <Select.Item label={\"100\"} value={100} />\r\n          </Select>\r\n          <Text\r\n            style={{\r\n              fontFamily: \"Poppins_medium\",\r\n              fontSize: vw(15),\r\n              color: \"rgba(102, 102, 102, 1)\",\r\n              marginLeft: vw(10),\r\n            }}\r\n          >\r\n            per page\r\n          </Text>\r\n        </HStack>\r\n      ) : (\r\n        <HStack></HStack>\r\n      )}\r\n      <MyPaginate\r\n        breakLabel='...'\r\n        nextLabel='Next >'\r\n        onPageChange={onPageChange}\r\n        pageRangeDisplayed={3}\r\n        marginPagesDisplayed={2}\r\n        pageCount={pageCount}\r\n        previousLabel='< Previous'\r\n        renderOnZeroPageCount={null}\r\n        forcePage={page - 1}\r\n      />\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShadowPagination);\r\n","import * as React from \"react\";\r\nimport Svg, { G, Path } from \"react-native-svg\";\r\n\r\nconst EmailIcon = (props) => (\r\n  <Svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    viewBox='0 0 24 24'\r\n    width={24}\r\n    height={24}\r\n    {...props}\r\n  >\r\n    <G fill={\"none\"}>\r\n      <Path data-name='Rectangle 287' d='M0 0h24v24H0z' />\r\n      <G\r\n        opacity={0.5}\r\n        stroke={props.fill || \"#000\"}\r\n        strokeLinecap='round'\r\n        strokeLinejoin='round'\r\n        strokeWidth={1.5}\r\n      >\r\n        <Path\r\n          data-name='Stroke 1'\r\n          d='m16.964 9.392-3.762 3.059a1.945 1.945 0 0 1-2.421 0L6.987 9.392'\r\n        />\r\n        <Path\r\n          data-name='Stroke 3'\r\n          d='M16.122 19.677c2.575.007 4.31-2.108 4.31-4.708V9.154a4.407 4.407 0 0 0-4.31-4.716H7.81A4.407 4.407 0 0 0 3.5 9.154v5.814c0 2.6 1.735 4.716 4.31 4.708Z'\r\n        />\r\n      </G>\r\n    </G>\r\n  </Svg>\r\n);\r\n\r\nexport default EmailIcon;\r\n","import React from \"react\";\r\nimport Svg, { G, Rect } from \"react-native-svg\";\r\n/* SVGR has dropped some elements not supported by react-native-svg: style */\r\nimport Util from \"../../../../util\";\r\nconst { vw, vh } = Util;\r\n\r\nconst Template1 = (props) => (\r\n  <Svg\r\n    viewBox='0 0 94 94'\r\n    width={props.width || vw(94)}\r\n    height={props.height || vh(94)}\r\n    {...props}\r\n  >\r\n    <G id='Group_1225' data-name='Group 1225' transform='translate(-8942 543)'>\r\n      <Rect\r\n        id='Rectangle_1573'\r\n        data-name='Rectangle 1573'\r\n        width='94'\r\n        height='94'\r\n        transform='translate(8942 -543)'\r\n        fill='#e4e4e4'\r\n      />\r\n      <G id='Group_1224' data-name='Group 1224' transform='translate(0 -1)'>\r\n        <Rect\r\n          id='Rectangle_1577'\r\n          data-name='Rectangle 1577'\r\n          width='28'\r\n          height='22'\r\n          rx='3'\r\n          transform='translate(8950 -481)'\r\n          fill='#ccc'\r\n        />\r\n        <Rect\r\n          id='Rectangle_1579'\r\n          data-name='Rectangle 1579'\r\n          width='31'\r\n          height='4'\r\n          rx='2'\r\n          transform='translate(8997 -475)'\r\n          fill='#ccc'\r\n        />\r\n        <Rect\r\n          id='Rectangle_1580'\r\n          data-name='Rectangle 1580'\r\n          width='31'\r\n          height='4'\r\n          rx='2'\r\n          transform='translate(8997 -468)'\r\n          fill='#ccc'\r\n        />\r\n        <Rect\r\n          id='Rectangle_1581'\r\n          data-name='Rectangle 1581'\r\n          width='78'\r\n          height='40'\r\n          rx='3'\r\n          transform='translate(8950 -530)'\r\n          fill='#ccc'\r\n        />\r\n      </G>\r\n    </G>\r\n  </Svg>\r\n);\r\n\r\nexport default Template1;\r\n","import React from 'react';\r\nimport Svg, { G, Rect } from 'react-native-svg';\r\n/* SVGR has dropped some elements not supported by react-native-svg: style */\r\n\r\nimport Util from \"../../../../util\";\r\nconst { vw, vh } = Util;\r\n\r\nconst Template2 = (props) => (\r\n  <Svg\r\n    viewBox='0 0 94 94'\r\n    width={props.width || vw(94)}\r\n    height={props.height || vh(94)}\r\n    {...props}\r\n  >\r\n    <G id='Group_1226' data-name='Group 1226' transform='translate(-8942 543)'>\r\n      <Rect\r\n        id='Rectangle_1573'\r\n        data-name='Rectangle 1573'\r\n        width='94'\r\n        height='94'\r\n        transform='translate(8942 -543)'\r\n        fill='#e4e4e4'\r\n      />\r\n      <G\r\n        id='Group_1224'\r\n        data-name='Group 1224'\r\n        transform='translate(8950 -531)'>\r\n        <Rect\r\n          id='Rectangle_1577'\r\n          data-name='Rectangle 1577'\r\n          width='28'\r\n          height='22'\r\n          rx='3'\r\n          transform='translate(50 49)'\r\n          fill='#ccc'\r\n        />\r\n        <Rect\r\n          id='Rectangle_1579'\r\n          data-name='Rectangle 1579'\r\n          width='31'\r\n          height='4'\r\n          rx='2'\r\n          transform='translate(0 55)'\r\n          fill='#ccc'\r\n        />\r\n        <Rect\r\n          id='Rectangle_1580'\r\n          data-name='Rectangle 1580'\r\n          width='31'\r\n          height='4'\r\n          rx='2'\r\n          transform='translate(0 62)'\r\n          fill='#ccc'\r\n        />\r\n        <Rect\r\n          id='Rectangle_1581'\r\n          data-name='Rectangle 1581'\r\n          width='78'\r\n          height='40'\r\n          rx='3'\r\n          fill='#ccc'\r\n        />\r\n      </G>\r\n    </G>\r\n  </Svg>\r\n);\r\n\r\nexport default Template2;\r\n","import React from 'react';\r\nimport Svg, {  G, Rect } from 'react-native-svg';\r\n/* SVGR has dropped some elements not supported by react-native-svg: style */\r\n\r\nimport Util from \"../../../../util\";\r\nconst { vw, vh } = Util;\r\n\r\nconst Template3 = (props) => (\r\n  <Svg\r\n    viewBox='0 0 94 94'\r\n    width={props.width || vw(94)}\r\n    height={props.height || vh(94)}\r\n    {...props}\r\n  >\r\n    <G id='Group_1227' data-name='Group 1227' transform='translate(-8942 543)'>\r\n      <Rect\r\n        id='Rectangle_1573'\r\n        data-name='Rectangle 1573'\r\n        width='94'\r\n        height='94'\r\n        transform='translate(8942 -543)'\r\n        fill='#e4e4e4'\r\n      />\r\n      <G\r\n        id='Group_1224'\r\n        data-name='Group 1224'\r\n        transform='translate(8950 -531)'>\r\n        <Rect\r\n          id='Rectangle_1577'\r\n          data-name='Rectangle 1577'\r\n          width='28'\r\n          height='22'\r\n          rx='3'\r\n          fill='#ccc'\r\n        />\r\n        <Rect\r\n          id='Rectangle_1579'\r\n          data-name='Rectangle 1579'\r\n          width='31'\r\n          height='4'\r\n          rx='2'\r\n          transform='translate(47 12)'\r\n          fill='#ccc'\r\n        />\r\n        <Rect\r\n          id='Rectangle_1580'\r\n          data-name='Rectangle 1580'\r\n          width='31'\r\n          height='4'\r\n          rx='2'\r\n          transform='translate(47 5)'\r\n          fill='#ccc'\r\n        />\r\n        <Rect\r\n          id='Rectangle_1581'\r\n          data-name='Rectangle 1581'\r\n          width='78'\r\n          height='40'\r\n          rx='3'\r\n          transform='translate(0 31)'\r\n          fill='#ccc'\r\n        />\r\n      </G>\r\n    </G>\r\n  </Svg>\r\n);\r\n\r\nexport default Template3;\r\n","import React from \"react\";\r\nimport Svg, { G, Rect } from \"react-native-svg\";\r\n/* SVGR has dropped some elements not supported by react-native-svg: style */\r\n\r\nimport Util from \"../../../../util\";\r\nconst { vw, vh } = Util;\r\n\r\nconst Template4 = (props) => (\r\n  <Svg\r\n    viewBox='0 0 94 94'\r\n    width={props.width || vw(94)}\r\n    height={props.height || vh(94)}\r\n    {...props}\r\n  >\r\n    <Rect\r\n      id='Rectangle_1573'\r\n      data-name='Rectangle 1573'\r\n      width='94'\r\n      height='94'\r\n      fill='#e4e4e4'\r\n    />\r\n    <G id='Group_1224' data-name='Group 1224' transform='translate(8 12)'>\r\n      <Rect\r\n        id='Rectangle_1577'\r\n        data-name='Rectangle 1577'\r\n        width='28'\r\n        height='22'\r\n        rx='3'\r\n        transform='translate(50)'\r\n        fill='#ccc'\r\n      />\r\n      <Rect\r\n        id='Rectangle_1579'\r\n        data-name='Rectangle 1579'\r\n        width='31'\r\n        height='4'\r\n        rx='2'\r\n        transform='translate(0 12)'\r\n        fill='#ccc'\r\n      />\r\n      <Rect\r\n        id='Rectangle_1580'\r\n        data-name='Rectangle 1580'\r\n        width='31'\r\n        height='4'\r\n        rx='2'\r\n        transform='translate(0 5)'\r\n        fill='#ccc'\r\n      />\r\n      <Rect\r\n        id='Rectangle_1581'\r\n        data-name='Rectangle 1581'\r\n        width='78'\r\n        height='40'\r\n        rx='3'\r\n        transform='translate(0 31)'\r\n        fill='#ccc'\r\n      />\r\n    </G>\r\n  </Svg>\r\n);\r\n\r\nexport default Template4;\r\n","import React from \"react\";\r\nimport { VStack, Text, Center, Pressable, HStack } from \"native-base\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { vw, vh } from \"../../../util\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport * as events from \"../../../store/events\";\r\nimport Template1 from \"./assets/Template1\";\r\nimport Template2 from \"./assets/Template2\";\r\nimport Template3 from \"./assets/Template3\";\r\nimport Template4 from \"./assets/Template4\";\r\nimport EmailIcon from \"../../../components/svg/EmailIcon\";\r\n\r\nconst VerticalItem = ({\r\n  isEnd,\r\n  item,\r\n  setIsOpen,\r\n  setShowPreview,\r\n  setTemplateOptions,\r\n  cols,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Pressable\r\n      onPress={async () => {\r\n        await dispatch({ type: events.SET_CURRENT_TEMPLATE, data: item });\r\n        setIsOpen(true);\r\n      }}\r\n    >\r\n      <VStack\r\n        style={{\r\n          boxShadow: \"0px 3px 10px #0000001A\",\r\n          width: cols === 1 ? \"88%\" : vw(250),\r\n          height: vh(280),\r\n          marginHorizontal: vw(20),\r\n          marginVertical: vh(20),\r\n          borderRadius: vw(10),\r\n          flex: 1,\r\n        }}\r\n      >\r\n        <Center\r\n          style={{\r\n            backgroundColor: \"#F2F4F8\",\r\n            height: vh(200),\r\n            borderRadius: vw(10),\r\n            width: cols === 1 ? \"100%\" : vw(250),\r\n          }}\r\n        >\r\n          {item.style_id === 1 && (\r\n            <Template1 width={vw(230)} height={vh(180)} />\r\n          )}\r\n          {item.style_id === 2 && <Template2 />}\r\n          {item.style_id === 3 && <Template3 />}\r\n          {item.style_id === 4 && <Template4 />}\r\n          {item.templatetype === \"email\" && (\r\n            <EmailIcon\r\n              width={vw(100)}\r\n              height={vw(100)}\r\n              fill={\"rgba(0,0,0,0.15)\"}\r\n            />\r\n          )}\r\n        </Center>\r\n\r\n        <Text\r\n          style={{\r\n            marginTop: 10,\r\n            color: Colors.primary,\r\n            fontFamily: \"Poppins_medium\",\r\n            fontSize: vw(15),\r\n            textAlign: \"left\",\r\n            marginLeft: vw(20)\r\n          }}\r\n        >\r\n          {item.name}\r\n        </Text>\r\n\r\n        <HStack\r\n          style={{ marginTop: vh(6), marginHorizontal: vw(20), marginBottom: vh(10) }}\r\n          justifyContent={\"space-between\"}\r\n        >\r\n          <Text\r\n            style={{\r\n              color: \"#686868\",\r\n              fontFamily: \"Poppins\",\r\n              fontSize: vw(13),\r\n            }}\r\n          >\r\n            {item.templatetype === \"email\" ? \"Email\" : \"Mail\"}\r\n          </Text>\r\n          <Pressable\r\n            onPress={() => {\r\n              setTemplateOptions(item);\r\n              setShowPreview(true);\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontSize: vw(13),\r\n                fontFamily: \"Poppins\",\r\n                color: Colors.primary,\r\n              }}\r\n            >\r\n              Preview\r\n            </Text>\r\n          </Pressable>\r\n        </HStack>\r\n      </VStack>\r\n    </Pressable>\r\n  );\r\n};\r\n\r\nexport default VerticalItem;\r\n","/**\r\n *\r\n * Add Signature Screen\r\n * Author:Justin Antony\r\n * last modified on 04/nov/2021\r\n *\r\n */\r\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport {\r\n  Pressable,\r\n  Text,\r\n  VStack,\r\n  Center,\r\n  Spinner,\r\n  useToast,\r\n  HStack,\r\n  ScrollView,\r\n  FormControl,\r\n  CircleIcon,\r\n  useBreakpointValue,\r\n} from \"native-base\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport _ from \"lodash\";\r\nimport { SketchPicker } from \"react-color\";\r\n\r\nimport { vw, vh } from \"../../../util\";\r\nimport * as templateActions from \"../../../store/actions/templates\";\r\nimport ShadowInput from \"../../../components/ShadowInput\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport ShadowModal from \"../../../components/ShadowModal\";\r\nimport ShadowButton from \"../../../components/ShadowButton\";\r\nimport ShadowSelect from \"../../../components/ShadowSelect\";\r\nimport Template1 from \"./assets/Template1\";\r\nimport Template2 from \"./assets/Template2\";\r\nimport Template3 from \"./assets/Template3\";\r\nimport Template4 from \"./assets/Template4\";\r\nimport { getUser } from \"../../../constants/Config\";\r\nimport * as events from \"../../../store/events\";\r\nimport AddSignature from \"../signatures/AddSignature\";\r\n\r\nconst fontsList = [\r\n  \"Roboto\",\r\n  //'SourceSansPro',\r\n  //'LiuJianMaoCao',\r\n  \"Quicksand\",\r\n  \"Lobster\",\r\n  // 'Pacifico',\r\n  //'DancingScript',\r\n  //'ShadowsIntoLight',\r\n  //'AmaticSC',\r\n  \"Satisfy\",\r\n  \"Caveat\",\r\n  \"Courgette\",\r\n];\r\n\r\nconst AddTemplate = ({ isOpen, setIsOpen, setRefresh }) => {\r\n  const dispatch = useDispatch();\r\n  const sRef = useRef();\r\n  const user = getUser();\r\n  const toast = useToast();\r\n  const [editSignature, setEditSignature] = useState(false);\r\n  const currentTemplate = useSelector(\r\n    (state) => state.templates.currentTemplate\r\n  );\r\n  const sz = useBreakpointValue({\r\n    base: \"base\",\r\n    sm: \"sm\",\r\n    lg: \"lg\",\r\n    md: \"md\",\r\n    xl: \"xl\",\r\n  });\r\n\r\n  const signatures = useSelector((state) => state.signatures.userSignatures);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [showPicker, setShowPicker] = useState(false);\r\n  const [pickerColor, setPickerColor] = useState(Colors.primary);\r\n  const [colorFor, setColorFor] = useState(\"p\");\r\n  const [templateStyle, setTemplateStyle] = useState(1);\r\n  // const [error, setError] = useState();\r\n  // const [openSmtp, setOpenSmtp] = useState();\r\n\r\n  const onClose = () => setIsOpen(false);\r\n  const [isSmtpOpen, setIsSmtpOpen] = React.useState(false);\r\n  const onSmtpClose = () => setIsSmtpOpen(false);\r\n  const [isAlertOpen, setIsAlertOpen] = React.useState(false);\r\n  const onAlertClose = () => setIsAlertOpen(false);\r\n  const cancelRef = React.useRef(null);\r\n  const [alertConfig, setAlertConfig] = useState({\r\n    header: \"\",\r\n    desc: \"\",\r\n    nolabel: \"No\",\r\n    yeslabel: \"Yes\",\r\n    yes: () => {},\r\n    no: onAlertClose,\r\n  });\r\n\r\n  const [secA, setSecA] = useState(\r\n    currentTemplate && currentTemplate.section_a\r\n      ? currentTemplate.section_a.length\r\n      : 0\r\n  );\r\n  const [secB, setSecB] = useState(\r\n    currentTemplate && currentTemplate.section_b\r\n      ? currentTemplate.section_b.length\r\n      : 0\r\n  );\r\n  const [secC, setSecC] = useState(\r\n    currentTemplate && currentTemplate.section_a\r\n      ? currentTemplate.section_c.length\r\n      : 0\r\n  );\r\n\r\n  const signatureOptions = [\r\n    // { label: \"Select Signature\", _id: \"\" },\r\n    ...signatures,\r\n  ].map((sign) => {\r\n    return {\r\n      label: sign.label,\r\n      value: sign._id,\r\n    };\r\n  });\r\n\r\n  // signatureOptions.unshift({\r\n  //   label: \"Select a signature\",\r\n  //   value: \"\",\r\n  // });\r\n\r\n  const fontOptions = fontsList.map((f) => ({\r\n    label: f,\r\n    value: f,\r\n  }));\r\n\r\n  const templatetypeOptions = [\"postcard\", \"email\"].map((f) => ({\r\n    label: f === \"postcard\" ? \"Mail\" : f === \"email\" ? \"E-mail\" : \"\",\r\n    value: f,\r\n  }));\r\n\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    getValues,\r\n    setValue,\r\n    trigger,\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n    defaultValues: _.isEmpty(currentTemplate)\r\n      ? {\r\n          name: \"\",\r\n          templatetype: \"postcard\",\r\n          emailcontent: ``,\r\n          subject: \"\",\r\n          // templatemailer_id: 0,\r\n          // style_id: \"\",\r\n          section_a: \"\",\r\n          section_b:\r\n            \"\",\r\n          section_c:\r\n            \"\",\r\n          // section_d: '',\r\n          primarycolor: \"#ffffff\",\r\n          secondarycolor: \"#000000\",\r\n          fontfamily: \"Roboto\",\r\n          signature: \"\",\r\n          includeinbody: false,\r\n        }\r\n      : {\r\n          name: currentTemplate.name,\r\n          templatetype: currentTemplate.templatetype\r\n            ? currentTemplate.templatetype\r\n            : \"postcard\",\r\n          emailcontent: currentTemplate.emailcontent\r\n            ? currentTemplate.emailcontent\r\n            : ``,\r\n          subject: currentTemplate.subject\r\n            ? currentTemplate.subject\r\n            : \"\",\r\n          // templatemailer_id: currentTemplate.templatemailer_id,\r\n          // style_id: currentTemplate.style_id.toString(),\r\n          section_a: currentTemplate.section_a ? currentTemplate.section_a : \"\",\r\n          section_b: currentTemplate.section_b ? currentTemplate.section_b : \"\",\r\n          section_c: currentTemplate.section_c ? currentTemplate.section_c : \"\",\r\n          // section_d: currentTemplate.section_d,\r\n          primarycolor: currentTemplate.primarycolor\r\n            ? currentTemplate.primarycolor\r\n            : \"#ffffff\",\r\n          secondarycolor: currentTemplate.secondarycolor\r\n            ? currentTemplate.secondarycolor\r\n            : \"#000000\",\r\n          fontfamily: currentTemplate.fontfamily\r\n            ? currentTemplate.fontfamily\r\n            : \"Roboto\",\r\n          signature: currentTemplate.signature\r\n            ? currentTemplate.signature._id\r\n            : \"\",\r\n          includeinbody: currentTemplate.includeinbody\r\n            ? currentTemplate.includeinbody\r\n            : false,\r\n        },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (isSaving) {\r\n      handleSubmit(saveHandler, () => {\r\n        setIsSaving(false);\r\n      })();\r\n    }\r\n  }, [isSaving]);\r\n\r\n  const _showAlert = useCallback(\r\n    (status, msg) => {\r\n      toast.show({\r\n        placement: \"top\",\r\n        render: () => {\r\n          let bg = \"red.300\";\r\n          if (status === \"error\") {\r\n            bg = \"red.300\";\r\n          } else if (status === \"success\") {\r\n            bg = \"green.300\";\r\n          } else if (status === \"info\") {\r\n            bg = \"blueGray.300\";\r\n          } else if (status === \"warning\") {\r\n            bg = \"orange.300\";\r\n          }\r\n          return (\r\n            <Text\r\n              style={{\r\n                fontSize: vw(12),\r\n                fontFamily: \"Poppins_medium\",\r\n                color: \"#33214B\",\r\n              }}\r\n              p={2}\r\n              bg={bg}\r\n              rounded={\"full\"}\r\n            >\r\n              {msg}\r\n            </Text>\r\n          );\r\n        },\r\n      });\r\n    },\r\n    [toast]\r\n  );\r\n\r\n  const saveHandler = async (data) => {\r\n    let postdata = {\r\n      name: data.name,\r\n      templatetype: data.templatetype,\r\n      subject: data.subject,\r\n      emailcontent: data.emailcontent,\r\n      signature: data.signature,\r\n      includeinbody: data.includeinbody,\r\n    };\r\n\r\n    const cs = signatures.find((s) => s._id === data.signature);\r\n    if (cs && !cs.smtp && data.templatetype === \"email\") {\r\n      _showAlert(\r\n        \"error\",\r\n        \"Cannot save template. Selected signature does not have an SMTP configured and cannot be used to send emails.\"\r\n      );\r\n      setIsSaving(false);\r\n      return;\r\n    }\r\n\r\n    if (data.templatetype === \"postcard\") {\r\n      postdata = {\r\n        name: data.name,\r\n        templatetype: data.templatetype,\r\n        // mailer: \"61e42f37e0afaefe143e78ff\", //formState.inputValues.templatemailer_id,\r\n        style_id: templateStyle,\r\n        // data.style_id === \"\" ? templateStyles[0].id : parseInt(data.style_id),\r\n        section_a: data.section_a,\r\n        section_b: data.section_b,\r\n        section_c: data.section_c,\r\n        section_d: \"\", //formState.inputValues.section_d,\r\n        primarycolor: data.primarycolor,\r\n        secondarycolor: data.secondarycolor,\r\n        fontfamily: data.fontfamily === \"\" ? fontsList[0] : data.fontfamily,\r\n        signature: data.signature,\r\n      };\r\n    }\r\n\r\n    if (currentTemplate && currentTemplate._id) {\r\n      postdata[\"_id\"] = currentTemplate._id;\r\n    }\r\n\r\n    // console.log(\"postdata:\",postdata)\r\n\r\n    const action = templateActions.saveTemplate(postdata);\r\n    // setIsSaving(true);\r\n    const msg = !postdata._id\r\n      ? \"Template created successfully.\"\r\n      : \"Template updated successfully.\";\r\n    try {\r\n      await dispatch(action);\r\n      _showAlert(\"success\", msg);\r\n      setIsAlertOpen(false);\r\n      setIsOpen(false);\r\n    } catch (err) {\r\n      //console.log('Created Error', err);\r\n      _showAlert(\"error\", err.message);\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  const deleteHandler = async () => {\r\n    if (currentTemplate._id) {\r\n      setIsLoading(true);\r\n      try {\r\n        const action = templateActions.deleteTemplate(currentTemplate._id);\r\n        const success = await dispatch(action);\r\n        if (success) {\r\n          _showAlert(\"success\", \"Template deleted successfully.\");\r\n          setIsAlertOpen(false);\r\n          setIsOpen(false);\r\n          setRefresh((r) => !r);\r\n        }\r\n      } catch (err) {\r\n        _showAlert(\"error\", err.message);\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return isLoading ? (\r\n    <Center bg={\"white\"} flex={1}>\r\n      <Spinner size={\"small\"} color={Colors.primary} />\r\n    </Center>\r\n  ) : (\r\n    <>\r\n      <VStack bg={\"white\"} mb={20}>\r\n        <ShadowModal\r\n          size='xl'\r\n          // height={\r\n          //   sz === \"base\" || sz === \"sm\"\r\n          //     ? window.screen.height - 20\r\n          //     : window.screen.height - 100\r\n          // }\r\n          // bodyHeight={\r\n          //   sz === \"base\" || sz === \"sm\"\r\n          //     ? window.screen.height - 100\r\n          //     : window.screen.height - 200\r\n          // }\r\n          header={\r\n            currentTemplate && currentTemplate._id\r\n              ? \"Edit Template\"\r\n              : \"Create Template\"\r\n          }\r\n          isOpen={isOpen}\r\n          close={() => {\r\n            onClose();\r\n          }}\r\n          isLoading={isSaving}\r\n          save={() => {\r\n            if (Object.keys(errors).length === 0) {\r\n              setIsSaving(true);\r\n            }\r\n          }}\r\n          // width={sz === \"base\" || sz === \"sm\" ? \"99vw\" : vw(650)}\r\n          buttons={\r\n            <HStack space={2}>\r\n              {currentTemplate && currentTemplate._id && (\r\n                <ShadowButton\r\n                  space={2}\r\n                  variant='outline'\r\n                  label={\"Delete\"}\r\n                  style={{ height: vh(36), background: \"rgba(255, 0, 0, 0.4)\" }}\r\n                  onPress={() => {\r\n                    if (\r\n                      currentTemplate &&\r\n                      currentTemplate.campaigns &&\r\n                      currentTemplate.campaigns.length > 0\r\n                    ) {\r\n                      setAlertConfig({\r\n                        header: \"Sorry!\",\r\n                        desc: \"Cannot delete template, found associated campaigns\",\r\n                        nolabel: \"Okay\",\r\n                        yeslabel: \"\",\r\n                        yes: () => {},\r\n                        no: onAlertClose,\r\n                      });\r\n                      setIsAlertOpen(true);\r\n                      return;\r\n                    }\r\n\r\n                    setAlertConfig({\r\n                      header: \"Delete!\",\r\n                      desc: \"Are you sure you want to delete this template?\",\r\n                      nolabel: \"No\",\r\n                      yeslabel: \"Yes\",\r\n                      yes: deleteHandler,\r\n                      no: onAlertClose,\r\n                    });\r\n                    setIsAlertOpen(true);\r\n                    return;\r\n                  }}\r\n                />\r\n              )}\r\n              <ShadowButton\r\n                space={2}\r\n                color='#7D2BE9'\r\n                variant='outline'\r\n                style={{ height: vh(36) }}\r\n                label={\"Cancel\"}\r\n                onPress={() => {\r\n                  onClose();\r\n                }}\r\n              />\r\n              <ShadowButton\r\n                space={3}\r\n                label={\"Save\"}\r\n                isLoading={isSaving}\r\n                style={{ height: vh(36) }}\r\n                onPress={() => {\r\n                  if (Object.keys(errors).length === 0) {\r\n                    setIsSaving(true);\r\n                  }\r\n                }}\r\n              />\r\n            </HStack>\r\n          }\r\n        >\r\n          <VStack style={{ zoom: \"90%\" }}>\r\n            <HStack\r\n              space={4}\r\n              style={{\r\n                width: sz === \"base\" || sz === \"sm\" ? \"94vw\" : vw(612),\r\n                justifyContent: \"space-between\",\r\n                // marginHorizontal: vw(20),\r\n                marginBottom: vh(20),\r\n              }}\r\n            >\r\n              <ShadowInput\r\n                control={control}\r\n                isRequired\r\n                name='name'\r\n                label='Template Name '\r\n                placeholder='Enter template name'\r\n                invalid={errors.name ? true : false}\r\n                error={errors.name ? errors.name.message : \"\"}\r\n                rules={{\r\n                  required: {\r\n                    value: true,\r\n                    message: \"Please enter template name.\",\r\n                  },\r\n                }}\r\n              />\r\n            </HStack>\r\n            <HStack\r\n              space={3}\r\n              style={{\r\n                width: sz === \"base\" || sz === \"sm\" ? \"45.5vw\" : vw(300),\r\n                justifyContent: \"space-between\",\r\n                // marginHorizontal: vw(20),\r\n                marginVertical: vh(20),\r\n                zIndex: 9999,\r\n              }}\r\n            >\r\n              <ShadowSelect\r\n                control={control}\r\n                items={templatetypeOptions}\r\n                name='templatetype'\r\n                label='Select template type '\r\n                placeholder='Select type'\r\n                onChange={(v) => {\r\n                  console.log(v);\r\n                  trigger(\"templatetype\");\r\n                  // setValue(\"signature\", \"\");\r\n                  // trigger(\"signature\");\r\n                }}\r\n                invalid={errors.templatetype ? true : false}\r\n                error={errors.templatetype ? errors.templatetype.message : \"\"}\r\n                rules={{\r\n                  required: {\r\n                    value: true,\r\n                    message: \"Please select a template type.\",\r\n                  },\r\n                }}\r\n              />\r\n              <ShadowSelect\r\n                ref={sRef}\r\n                control={control}\r\n                items={signatureOptions}\r\n                name='signature'\r\n                label='Select signature '\r\n                placeholder='Select a signature'\r\n                onChange={(v) => {\r\n                  console.log(\"onChange fired\", v);\r\n                  const cs = signatures.find((s) => s._id === v);\r\n                  console.log(cs && !cs.smtp, getValues(\"templatetype\"));\r\n                  if (cs && !cs.smtp && getValues(\"templatetype\") === \"email\") {\r\n                    console.log(\"No Smtp found\");\r\n                    setAlertConfig({\r\n                      header: \"Attention!\",\r\n                      desc: \"Selected signature does not have an SMTP configured and cannot be used to send emails\",\r\n                      nolabel: \"Not Now\",\r\n                      yeslabel: \"Configure Now\",\r\n                      yes: async () => {\r\n                        if (cs.createdby !== user._id) {\r\n                          return;\r\n                        }\r\n                        await dispatch({\r\n                          type: events.SET_CURRENT_SIGNATURE,\r\n                          data: cs,\r\n                        });\r\n                        setEditSignature(true);\r\n                      },\r\n                      no: () => {\r\n                        setValue(\"signature\", \"\");\r\n                        trigger(\"signature\");\r\n                        onAlertClose();\r\n                      },\r\n                    });\r\n\r\n                    setIsAlertOpen(true);\r\n                    return;\r\n                  }\r\n                  setValue(\"signature\", v);\r\n                  trigger(\"signature\");\r\n                }}\r\n                invalid={errors.signature ? true : false}\r\n                error={errors.signature ? errors.signature.message : \"\"}\r\n                rules={{\r\n                  required: {\r\n                    value: true,\r\n                    message: \"Please select signature.\",\r\n                  },\r\n                }}\r\n              />\r\n            </HStack>\r\n            {getValues(\"templatetype\") === \"postcard\" ? (\r\n              <>\r\n                <HStack\r\n                  space={4}\r\n                  style={{\r\n                    width: vw(612),\r\n                    justifyContent: \"space-between\",\r\n                    // marginHorizontal: vw(20),\r\n                    marginVertical: vh(20),\r\n                    zIndex: 9999,\r\n                  }}\r\n                >\r\n                  <FormControl>\r\n                    <FormControl.Label>\r\n                      Select template style{\" \"}\r\n                    </FormControl.Label>\r\n                    <ScrollView horizontal width={\"94vw\"}>\r\n                      {[1, 2, 3, 4].map((s, idx) => (\r\n                        <Pressable\r\n                          key={\"t-\" + idx}\r\n                          onPress={() => {\r\n                            setTemplateStyle(s);\r\n                          }}\r\n                          style={{\r\n                            marginRight: vw(20),\r\n                          }}\r\n                        >\r\n                          <Center>\r\n                            {s === 1 && <Template1 />}\r\n                            {s === 2 && <Template2 />}\r\n                            {s === 3 && <Template3 />}\r\n                            {s === 4 && <Template4 />}\r\n                            <Text\r\n                              color={\r\n                                templateStyle === s ? Colors.primary : \"black\"\r\n                              }\r\n                              style={{\r\n                                fontFamily: \"Poppins\",\r\n                                fontSize: vw(13),\r\n                                marginTop: vh(10),\r\n                              }}\r\n                            >\r\n                              Style {s}\r\n                            </Text>\r\n                          </Center>\r\n                        </Pressable>\r\n                      ))}\r\n                    </ScrollView>\r\n                  </FormControl>\r\n                </HStack>\r\n                <HStack\r\n                  space={4}\r\n                  style={{\r\n                    width: sz === \"base\" || sz === \"sm\" ? \"94vw\" : vw(612),\r\n                    justifyContent: \"space-between\",\r\n                    // marginHorizontal: vw(20),\r\n                    marginBottom: vh(20),\r\n                    zIndex: 9999,\r\n                  }}\r\n                >\r\n                  <ShadowInput\r\n                    control={control}\r\n                    // multiline\r\n                    // numberOfLines={4}\r\n                    name='section_a'\r\n                    id='section_a'\r\n                    label={`Frontside heading (${secA}/34) `}\r\n                    placeholder='Enter frontside heading'\r\n                    setCharCount={setSecA}\r\n                    minLength={1}\r\n                    maxLength={34}\r\n                    invalid={errors.section_a ? true : false}\r\n                    error={errors.section_a ? errors.section_a.message : \"\"}\r\n                    rules={{\r\n                      required: {\r\n                        value: getValues(\"templatetype\") === \"postcard\",\r\n                        message: \"Please enter details.\",\r\n                      },\r\n                    }}\r\n                  />\r\n                </HStack>\r\n                <VStack\r\n                  style={{\r\n                    width: sz === \"base\" || sz === \"sm\" ? \"94vw\" : vw(612),\r\n                    marginTop: vh(20),\r\n                    marginBottom: vh(50),\r\n                    zIndex: 9999,\r\n                  }}\r\n                >\r\n                  {getValues(\"section_b\") !== \"\" && (\r\n                    <Pressable\r\n                      onPress={() => {\r\n                        setSecB(0);\r\n                        setValue(\"section_b\", \"\");\r\n                        trigger(\"section_b\");\r\n                      }}\r\n                      // leftIcon={<Ionicons name='trash' color='#4C7AD6' size={16} />}\r\n                      _text={{ color: \"#4C7AD6\" }}\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        right: 0,\r\n                        top: vh(5),\r\n                      }}\r\n                      bg='transparent'\r\n                    >\r\n                      <Text>Clear</Text>\r\n                    </Pressable>\r\n                  )}\r\n                  <ShadowInput\r\n                    control={control}\r\n                    multiline\r\n                    numberOfLines={2}\r\n                    name='section_b'\r\n                    id='section_b'\r\n                    label={`Frontside text (${secB}/169) `}\r\n                    placeholder='Enter frontside text'\r\n                    setCharCount={setSecB}\r\n                    minLength={1}\r\n                    maxLength={169}\r\n                    height={vh(80)}\r\n                    invalid={errors.section_b ? true : false}\r\n                    error={errors.section_b ? errors.section_b.message : \"\"}\r\n                    rules={{\r\n                      required: {\r\n                        value: getValues(\"templatetype\") === \"postcard\",\r\n                        message: \"Please enter details.\",\r\n                      },\r\n                    }}\r\n                  />\r\n                </VStack>\r\n                <VStack\r\n                  style={{\r\n                    width: sz === \"base\" || sz === \"sm\" ? \"94vw\" : vw(612),\r\n                    marginVertical: vh(30),\r\n                    zIndex: 9999,\r\n                  }}\r\n                >\r\n                  {getValues(\"section_c\") !== \"\" && (\r\n                    <Pressable\r\n                      onPress={() => {\r\n                        setSecC(0);\r\n                        setValue(\"section_c\", \"\");\r\n                        trigger(\"section_c\");\r\n                      }}\r\n                      // leftIcon={<Ionicons name='trash' color='#4C7AD6' size={16} />}\r\n                      _text={{ color: \"#4C7AD6\" }}\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        right: 0,\r\n                        top: vh(5),\r\n                      }}\r\n                      bg='transparent'\r\n                    >\r\n                      <Text>Clear</Text>\r\n                    </Pressable>\r\n                  )}\r\n                  <ShadowInput\r\n                    control={control}\r\n                    multiline\r\n                    numberOfLines={2}\r\n                    name='section_c'\r\n                    id='section_c'\r\n                    label={`Backside text (${secC}/88) `}\r\n                    placeholder='Enter backside text'\r\n                    minLength={1}\r\n                    maxLength={88}\r\n                    height={vh(70)}\r\n                    setCharCount={setSecC}\r\n                    invalid={errors.section_c ? true : false}\r\n                    error={errors.section_c ? errors.section_c.message : \"\"}\r\n                    rules={{\r\n                      required: {\r\n                        value: getValues(\"templatetype\") === \"postcard\",\r\n                        message: \"Please enter details.\",\r\n                      },\r\n                    }}\r\n                  />\r\n                </VStack>\r\n                <HStack\r\n                  space={4}\r\n                  style={{\r\n                    width: sz === \"base\" || sz === \"sm\" ? \"94vw\" : vw(612),\r\n                    justifyContent: \"space-between\",\r\n                    // marginHorizontal: vw(20),\r\n                    marginVertical: vh(40),\r\n                    zIndex: 9999,\r\n                  }}\r\n                >\r\n                  <VStack\r\n                    style={{\r\n                      width: sz === \"base\" || sz === \"sm\" ? \"45vw\" : vw(300),\r\n                      zIndex: 1,\r\n                    }}\r\n                  >\r\n                    <Center\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        right: 0,\r\n                        top: vh(5),\r\n                        zIndex: 2,\r\n                      }}\r\n                    >\r\n                      <Pressable\r\n                        onPress={() => {\r\n                          setShowPicker(!showPicker);\r\n                          setColorFor(\"p\");\r\n                        }}\r\n                      >\r\n                        <Text>Pick</Text>\r\n                      </Pressable>\r\n                    </Center>\r\n\r\n                    <ShadowInput\r\n                      control={control}\r\n                      isRequired\r\n                      name='primarycolor'\r\n                      id='primarycolor'\r\n                      label='Background Color '\r\n                      placeholder='#000000'\r\n                      maxLength={7}\r\n                      invalid={errors.primarycolor ? true : false}\r\n                      error={\r\n                        errors.primarycolor ? errors.primarycolor.message : \"\"\r\n                      }\r\n                      rightIcon={\r\n                        <Center marginRight={vw(10)}>\r\n                          <CircleIcon\r\n                            size={22}\r\n                            color={getValues(\"primarycolor\")}\r\n                          />\r\n                        </Center>\r\n                      }\r\n                      rules={{\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Please enter or pick background color.\",\r\n                        },\r\n                      }}\r\n                    />\r\n                  </VStack>\r\n\r\n                  <VStack\r\n                    style={{\r\n                      width: sz === \"base\" || sz === \"sm\" ? \"45vw\" : vw(300),\r\n                      zIndex: 1,\r\n                    }}\r\n                  >\r\n                    <Center\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        right: 0,\r\n                        top: vh(5),\r\n                        zIndex: 2,\r\n                      }}\r\n                    >\r\n                      <Pressable\r\n                        onPress={() => {\r\n                          setColorFor(\"f\");\r\n                          setShowPicker(!showPicker);\r\n                        }}\r\n                      >\r\n                        <Text>Pick</Text>\r\n                      </Pressable>\r\n                    </Center>\r\n                    <ShadowInput\r\n                      control={control}\r\n                      isRequired\r\n                      name='secondarycolor'\r\n                      id='secondarycolor'\r\n                      label='Font Color '\r\n                      placeholder='#000000'\r\n                      maxLength={7}\r\n                      invalid={errors.secondarycolor ? true : false}\r\n                      rightIcon={\r\n                        <Center marginRight={vw(10)}>\r\n                          <CircleIcon\r\n                            size={22}\r\n                            color={getValues(\"secondarycolor\")}\r\n                          />\r\n                        </Center>\r\n                      }\r\n                      error={\r\n                        errors.secondarycolor\r\n                          ? errors.secondarycolor.message\r\n                          : \"\"\r\n                      }\r\n                      rules={{\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Please enter or pick font color.\",\r\n                        },\r\n                      }}\r\n                    />\r\n                  </VStack>\r\n                </HStack>\r\n                <HStack\r\n                  space={4}\r\n                  style={{\r\n                    width: sz === \"base\" || sz === \"sm\" ? \"94vw\" : vw(300),\r\n                    justifyContent: \"space-between\",\r\n                    // marginHorizontal: vw(20),\r\n                    marginBottom: vh(20),\r\n                  }}\r\n                >\r\n                  <ShadowSelect\r\n                    control={control}\r\n                    items={fontOptions}\r\n                    name='fontfamily'\r\n                    id='fontfamily'\r\n                    label='Select a font '\r\n                    placeholder='Select a font'\r\n                    invalid={errors.fontfamily ? true : false}\r\n                    error={errors.fontfamily ? errors.fontfamily.message : \"\"}\r\n                    rules={{\r\n                      required: {\r\n                        value: getValues(\"templatetype\") === \"postcard\",\r\n                        message: \"Please select fontfamily.\",\r\n                      },\r\n                    }}\r\n                  />\r\n                </HStack>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <HStack\r\n                  space={4}\r\n                  style={{\r\n                    // width: sz === \"base\" || sz === \"sm\" ? \"94vw\" : vw(300),\r\n                    justifyContent: \"space-between\",\r\n                    // marginHorizontal: vw(20),\r\n                    marginBottom: vh(20),\r\n                    zIndex: 9999,\r\n                  }}\r\n                >\r\n                  <ShadowInput\r\n                    control={control}\r\n                    name='subject'\r\n                    id='subject'\r\n                    label={`Subject `}\r\n                    placeholder='Enter email subject'\r\n                    // setCharCount={setSecA}\r\n                    // minLength={1}\r\n                    // maxLength={34}\r\n                    invalid={errors.subject ? true : false}\r\n                    error={errors.subject ? errors.subject_a.message : \"\"}\r\n                    rules={{\r\n                      required: {\r\n                        value: true,\r\n                        message: \"Please enter email subject.\",\r\n                      },\r\n                    }}\r\n                  />\r\n                </HStack>\r\n                <VStack\r\n                  style={{\r\n                    // width: sz === \"base\" || sz === \"sm\" ? \"94vw\" : vw(300),\r\n                    marginTop: vh(20),\r\n                    marginBottom: vh(30),\r\n                    zIndex: 9999,\r\n                  }}\r\n                >\r\n                  {getValues(\"emailcontent\") !== \"\" && (\r\n                    <Pressable\r\n                      onPress={() => {\r\n                        setValue(\"emailcontent\", \"\");\r\n                        trigger(\"emailcontent\");\r\n                      }}\r\n                      // leftIcon={<Ionicons name='trash' color='#4C7AD6' size={16} />}\r\n                      _text={{ color: \"#4C7AD6\" }}\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        right: 0,\r\n                        top: vh(5),\r\n                        zIndex: 3,\r\n                      }}\r\n                      bg='transparent'\r\n                    >\r\n                      <Text>Clear</Text>\r\n                    </Pressable>\r\n                  )}\r\n                  <ShadowInput\r\n                    control={control}\r\n                    multiline\r\n                    numberOfLines={6}\r\n                    name='emailcontent'\r\n                    id='emailcontent'\r\n                    label={`Email Body `}\r\n                    placeholder='Enter email body'\r\n                    height={vh(300)}\r\n                    // setCharCount={setSecB}\r\n                    // minLength={1}\r\n                    // maxLength={169}\r\n                    invalid={errors.emailcontent ? true : false}\r\n                    error={\r\n                      errors.emailcontent ? errors.emailcontent.message : \"\"\r\n                    }\r\n                    rules={{\r\n                      required: {\r\n                        value: getValues(\"templatetype\") === \"email\",\r\n                        message: \"Please enter email body\",\r\n                      },\r\n                    }}\r\n                  />\r\n                </VStack>\r\n              </>\r\n            )}\r\n          </VStack>\r\n        </ShadowModal>\r\n      </VStack>\r\n\r\n      {showPicker && (\r\n        <ShadowModal\r\n          size={\"sm\"}\r\n          header={\"Pick Color\"}\r\n          isOpen={showPicker}\r\n          cancel={() => {\r\n            setShowPicker(false);\r\n          }}\r\n          buttons={\r\n            <ShadowButton\r\n              space={2}\r\n              variant='outline'\r\n              label={\"Close\"}\r\n              onPress={() => {\r\n                setShowPicker(false);\r\n              }}\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n          }\r\n        >\r\n          <Center>\r\n            <SketchPicker\r\n              color={pickerColor}\r\n              onChangeComplete={(color) => {\r\n                if (colorFor === \"p\") {\r\n                  setValue(\"primarycolor\", color.hex);\r\n                  trigger(\"primarycolor\");\r\n                } else {\r\n                  setValue(\"secondarycolor\", color.hex);\r\n                  trigger(\"secondarycolor\");\r\n                }\r\n              }}\r\n              onChange={(color) => {\r\n                setPickerColor(color);\r\n              }}\r\n            />\r\n          </Center>\r\n        </ShadowModal>\r\n      )}\r\n\r\n      <ShadowModal\r\n        size={\"md\"}\r\n        isOpen={isAlertOpen}\r\n        close={() => {\r\n          setIsAlertOpen(false);\r\n        }}\r\n        header={alertConfig.header}\r\n        buttons={\r\n          <HStack space={2}>\r\n            {alertConfig.yeslabel === \"\" ? (\r\n              <ShadowButton\r\n                space={4}\r\n                onPress={() => {\r\n                  setIsAlertOpen(false);\r\n                }}\r\n                color='rgba(0,0,0, 0.5)'\r\n                variant='outline'\r\n                label='Okay'\r\n                style={{\r\n                  height: vh(32),\r\n                }}\r\n              />\r\n            ) : (\r\n              <HStack space={2}>\r\n                <ShadowButton\r\n                  space={4}\r\n                  onPress={() => {\r\n                    setIsAlertOpen(false);\r\n                  }}\r\n                  color='rgba(0,0,0, 0.5)'\r\n                  variant='outline'\r\n                  label={alertConfig.nolabel}\r\n                  style={{\r\n                    height: vh(32),\r\n                  }}\r\n                />\r\n                <ShadowButton\r\n                  space={4}\r\n                  isLoading={isDeleting}\r\n                  onPress={alertConfig.yes}\r\n                  color='white'\r\n                  label={alertConfig.yeslabel}\r\n                  style={{\r\n                    height: vh(32),\r\n                  }}\r\n                />\r\n              </HStack>\r\n            )}\r\n          </HStack>\r\n        }\r\n      >\r\n        <Text\r\n          style={{\r\n            fontFamily: \"Poppins_medium\",\r\n            fontSize: vw(15),\r\n            color: \"rgba(0,0,0,0.8)\",\r\n          }}\r\n        >\r\n          {alertConfig.desc}\r\n        </Text>\r\n      </ShadowModal>\r\n      {editSignature && (\r\n        <AddSignature\r\n          isOpen={editSignature}\r\n          setIsOpen={setEditSignature}\r\n          _showAlert={_showAlert}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTemplate;\r\n","import React from \"react\";\r\n// import createDOMPurify from \"dompurify\";\r\n// import { JSDOM } from \"jsdom\";\r\n\r\n// const window = new JSDOM(\"\").window;\r\n// const DOMPurify = createDOMPurify(window);\r\n\r\nconst HtmlPreview = ({html}) => {\r\n  return (\r\n    <div>\r\n      {\r\n        <div\r\n          dangerouslySetInnerHTML={{ __html: html }}\r\n        />\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HtmlPreview;\r\n","import React, { useState } from \"react\";\r\nimport { VStack, Box, Button, HStack, Image, Text, Center } from \"native-base\";\r\n\r\nimport HtmlPreview from \"./HtmlPreview\";\r\nimport { CDN } from \"../../../constants/Config\";\r\nimport { vw, formatPhoneNumber } from \"../../../util\";\r\n\r\nconst Preview = ({ templateOption }) => {\r\n  const [side, setSide] = useState(\"f\");\r\n\r\n  if (!templateOption.signature) {\r\n    return null;\r\n  }\r\n\r\n  const name = templateOption.signature.name;\r\n  const email = templateOption.signature.email;\r\n  const phone = templateOption.signature.phone;\r\n  const logo = templateOption.signature.company_logo;\r\n  const photo = templateOption.signature.image;\r\n\r\n  const sid = templateOption.style_id && templateOption.style_id;\r\n  const sectiona = templateOption.section_a && templateOption.section_a;\r\n  const sectionb = templateOption.section_b && templateOption.section_b;\r\n  const sectionc = templateOption.section_c && templateOption.section_c;\r\n  const mls = templateOption.signature.disclosure;\r\n  const fontFamily = templateOption.fontfamily;\r\n  const color = templateOption.secondarycolor;\r\n  const bg = templateOption.primarycolor;\r\n  const propertyUri = `${CDN}/preview/property.jpg`;\r\n  const logoUri = `${CDN}/signatures/${logo}`;\r\n  const photoUri = `${CDN}/signatures/${photo}`;\r\n\r\n  return templateOption.templatetype === \"email\" ? (\r\n    <HtmlPreview html={templateOption.emailcontent} />\r\n  ) : (\r\n    <VStack\r\n      style={{\r\n        width: \"100%\",\r\n        marginVertical: vw(20),\r\n        backgroundColor: \"white\",\r\n      }}\r\n    >\r\n      <Box flex={1} style={{ justifyContent: \"flex-end\" }}>\r\n        <Button\r\n          onPress={() => {\r\n            setSide((s) => (s === \"f\" ? \"b\" : \"f\"));\r\n          }}\r\n          variant={\"unstyled\"}\r\n          my={1}\r\n          style={{ position: \"absolute\", right: 0 }}\r\n        >\r\n          {side === \"f\" ? \"Back Side\" : \"Front Side\"}\r\n        </Button>\r\n      </Box>\r\n      {side === \"f\" ? (\r\n        <VStack\r\n          style={{\r\n            width: \"100%\",\r\n            height: 200,\r\n            borderWidth: 0,\r\n            borderColor: \"#ccc\",\r\n          }}\r\n        >\r\n          {sid === 3 && (\r\n            <HStack\r\n              style={{\r\n                // bottom: sid === 1 || sid === 2 ? 0 : 200,\r\n                justifyContent: \"space-between\",\r\n                height: 60,\r\n              }}\r\n            >\r\n              {logo !== \"0\" && (\r\n                <Center style={{ width: 80, backgroundColor: bg }}>\r\n                  <Image\r\n                    resizeMethod='resize'\r\n                    style={{\r\n                      width: 80,\r\n                      height: 60,\r\n                      margin: 10,\r\n                      position: \"absolute\",\r\n                    }}\r\n                    source={{\r\n                      uri: logoUri,\r\n                    }}\r\n                  />\r\n                </Center>\r\n              )}\r\n              <VStack\r\n                style={{\r\n                  backgroundColor: bg,\r\n                  paddingHorizontal: 5,\r\n                  width: logo !== \"0\" ? \"79%\" : \"100%\",\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    fontFamily,\r\n                    color,\r\n                    fontSize: 13,\r\n                    // fontWeight: \"bold\",\r\n                  }}\r\n                >\r\n                  {sectiona}\r\n                </Text>\r\n                <Text\r\n                  style={{\r\n                    fontFamily,\r\n                    color,\r\n                    fontSize: 10,\r\n                    padding: 2,\r\n                    lineHeight: 11,\r\n                    flex: 1,\r\n                    flexWrap: \"wrap\",\r\n                  }}\r\n                >\r\n                  {sectionb}\r\n                </Text>\r\n              </VStack>\r\n            </HStack>\r\n          )}\r\n          {sid === 4 && (\r\n            <HStack\r\n              style={{\r\n                // bottom: sid === 1 || sid === 2 ? 0 : 200,\r\n                justifyContent: \"space-between\",\r\n                height: 60,\r\n              }}\r\n            >\r\n              <VStack\r\n                style={{\r\n                  backgroundColor: bg,\r\n                  paddingHorizontal: 5,\r\n                  width: logo !== \"0\" ? \"79%\" : \"100%\",\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    fontFamily,\r\n                    color,\r\n                    fontSize: 13,\r\n                    // fontWeight: \"bold\",\r\n                  }}\r\n                >\r\n                  {sectiona}\r\n                </Text>\r\n                <Text\r\n                  style={{\r\n                    fontFamily,\r\n                    color,\r\n                    fontSize: 10,\r\n                    padding: 2,\r\n                    lineHeight: 11,\r\n                    flex: 1,\r\n                    flexWrap: \"wrap\",\r\n                  }}\r\n                >\r\n                  {sectionb}\r\n                </Text>\r\n              </VStack>\r\n              {logo !== \"0\" && (\r\n                <Center style={{ width: 80, backgroundColor: bg }}>\r\n                  <Image\r\n                    resizeMethod='resize'\r\n                    style={{\r\n                      width: 80,\r\n                      height: 60,\r\n                      margin: 10,\r\n                      position: \"absolute\",\r\n                    }}\r\n                    source={{\r\n                      uri: logoUri,\r\n                    }}\r\n                  />\r\n                </Center>\r\n              )}\r\n            </HStack>\r\n          )}\r\n          <Center style={{ height: 140 }}>\r\n            <Image\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                position: \"absolute\",\r\n              }}\r\n              source={{\r\n                uri: propertyUri,\r\n              }}\r\n            />\r\n          </Center>\r\n          {sid === 1 && (\r\n            <HStack\r\n              style={{\r\n                // bottom: sid === 1 || sid === 2 ? 0 : 200,\r\n                justifyContent: \"space-between\",\r\n                height: 60,\r\n              }}\r\n            >\r\n              {logo !== \"0\" && (\r\n                <Center\r\n                  style={{ width: 80, backgroundColor: bg, borderWidth: 0 }}\r\n                >\r\n                  <Image\r\n                    resizeMethod='resize'\r\n                    style={{\r\n                      width: 80,\r\n                      height: 60,\r\n                      margin: 10,\r\n                      position: \"absolute\",\r\n                    }}\r\n                    source={{\r\n                      uri: logoUri,\r\n                    }}\r\n                  />\r\n                </Center>\r\n              )}\r\n              <VStack\r\n                style={{\r\n                  backgroundColor: bg,\r\n                  paddingHorizontal: 5,\r\n                  width: logo !== \"0\" ? \"79%\" : \"100%\",\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    fontFamily,\r\n                    color,\r\n                    fontSize: 13,\r\n                    // fontWeight: \"bold\",\r\n                  }}\r\n                >\r\n                  {sectiona}\r\n                </Text>\r\n                <Text\r\n                  style={{\r\n                    fontFamily,\r\n                    color,\r\n                    fontSize: 10,\r\n                    padding: 2,\r\n                    lineHeight: 11,\r\n                    flex: 1,\r\n                    flexWrap: \"wrap\",\r\n                  }}\r\n                >\r\n                  {sectionb}\r\n                </Text>\r\n              </VStack>\r\n            </HStack>\r\n          )}\r\n          {sid === 2 && (\r\n            <HStack\r\n              style={{\r\n                // bottom: sid === 1 || sid === 2 ? 0 : 200,\r\n                justifyContent: \"space-between\",\r\n                height: 60,\r\n              }}\r\n            >\r\n              <VStack\r\n                style={{\r\n                  backgroundColor: bg,\r\n                  paddingHorizontal: 5,\r\n                  width: logo !== \"0\" ? \"79%\" : \"100%\",\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    fontFamily,\r\n                    color,\r\n                    fontSize: 13,\r\n                    // fontWeight: \"bold\",\r\n                  }}\r\n                >\r\n                  {sectiona}\r\n                </Text>\r\n                <Text\r\n                  style={{\r\n                    fontFamily,\r\n                    color,\r\n                    fontSize: 10,\r\n                    padding: 2,\r\n                    lineHeight: 11,\r\n                    flex: 1,\r\n                    flexWrap: \"wrap\",\r\n                  }}\r\n                >\r\n                  {sectionb}\r\n                </Text>\r\n              </VStack>\r\n              {logo !== \"0\" && (\r\n                <Center style={{ width: 80, backgroundColor: bg }}>\r\n                  <Image\r\n                    resizeMethod='resize'\r\n                    style={{\r\n                      width: 80,\r\n                      height: 60,\r\n                      margin: 10,\r\n                      position: \"absolute\",\r\n                    }}\r\n                    source={{\r\n                      uri: logoUri,\r\n                    }}\r\n                  />\r\n                </Center>\r\n              )}\r\n            </HStack>\r\n          )}\r\n        </VStack>\r\n      ) : (\r\n        <HStack\r\n          space={2}\r\n          style={{\r\n            bottom: 0,\r\n            justifyContent: \"space-between\",\r\n            height: 200,\r\n            borderColor: \"#ccc\",\r\n            borderWidth: 1,\r\n          }}\r\n        >\r\n          <VStack\r\n            style={{\r\n              height: \"100%\",\r\n              backgroundColor: bg,\r\n              width: \"35%\",\r\n              padding: 2,\r\n            }}\r\n          >\r\n            {photo !== \"0\" && (\r\n              <Center style={{ width: \"100%\", backgroundColor: bg }}>\r\n                <Image\r\n                  style={{\r\n                    width: \"100%\",\r\n                    height: 100,\r\n                  }}\r\n                  source={{\r\n                    uri: photoUri,\r\n                  }}\r\n                />\r\n              </Center>\r\n            )}\r\n            <Box\r\n              style={{\r\n                borderWidth: 1,\r\n                borderColor: \"#ccc\",\r\n                backgroundColor: \"white\",\r\n                height: 40,\r\n                margin: 5,\r\n                borderRadius: 5,\r\n                flexDirection: \"row\",\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  lineHeight: 10,\r\n                  fontFamily,\r\n                  color: \"black\",\r\n                  fontSize: 8,\r\n                  flexWrap: \"wrap\",\r\n                  textAlign: \"center\",\r\n                  flex: 1,\r\n                }}\r\n              >\r\n                {sectionc}\r\n              </Text>\r\n            </Box>\r\n            <VStack style={{ marginTop: 5 }} space={1}>\r\n              <Text\r\n                style={{\r\n                  fontFamily,\r\n                  color,\r\n                  fontSize: 9,\r\n                  marginHorizontal: 10,\r\n                  lineHeight: 10,\r\n                  // fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                {name}\r\n              </Text>\r\n              <Text\r\n                style={{\r\n                  fontFamily,\r\n                  color,\r\n                  fontSize: 8,\r\n                  marginHorizontal: 10,\r\n                  lineHeight: 8,\r\n                }}\r\n              >\r\n                {formatPhoneNumber(phone)}\r\n              </Text>\r\n              <Text\r\n                style={{\r\n                  fontFamily,\r\n                  color,\r\n                  fontSize: 8,\r\n                  marginHorizontal: 10,\r\n                  lineHeight: 8,\r\n                }}\r\n              >\r\n                {email}\r\n              </Text>\r\n            </VStack>\r\n          </VStack>\r\n          <VStack style={{ height: \"100%\", width: \"65%\" }}>\r\n            <HStack style={{ justifyContent: \"space-between\" }}>\r\n              <Text\r\n                style={{\r\n                  lineHeight: 10,\r\n                  fontFamily,\r\n                  color: \"black\",\r\n                  fontSize: 8,\r\n                  flexWrap: \"wrap\",\r\n                  textAlign: \"center\",\r\n                  width: \"50%\",\r\n                  marginTop: 20,\r\n                }}\r\n              >\r\n                {\"MLS: \" + mls}\r\n              </Text>\r\n              {logo !== \"0\" && (\r\n                <Box\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    width: 80,\r\n                    top: 10,\r\n                    right: 20,\r\n                  }}\r\n                >\r\n                  <Image\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: 64,\r\n                    }}\r\n                    source={{\r\n                      uri: logoUri,\r\n                    }}\r\n                  />\r\n                </Box>\r\n              )}\r\n            </HStack>\r\n          </VStack>\r\n        </HStack>\r\n      )}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n","/**\r\n *\r\n * Templates List Screen\r\n * Author:Justin Antony\r\n * last modified on 04/nov/2021\r\n *\r\n */\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  Button,\r\n  Text,\r\n  FlatList,\r\n  Center,\r\n  useToast,\r\n  Spinner,\r\n  HStack,\r\n  Pressable,\r\n  VStack,\r\n  Hidden,\r\n} from \"native-base\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { vw, vh } from \"../../../util\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport * as signatureActions from \"../../../store/actions/signatures\";\r\nimport * as templateActions from \"../../../store/actions/templates\";\r\nimport VerticalItem from \"./VerticalItem\";\r\n// import NavListIcon from \"../../../components/svg/NavListIcon\";\r\n// import AddIcon from \"../../../components/svg/AddIcon\";\r\n// import AcreIcon from \"../../../components/svg/AcreIcon\";\r\nimport { getUser } from \"../../../constants/Config\";\r\nimport NavBar from \"../home/NavBar\";\r\nimport AddTemplate from \"./AddTemplate\";\r\nimport * as events from \"../../../store/events\";\r\nimport ShadowPagination from \"../../../components/ShadowPagination\";\r\nimport Preview from \"./Preview\";\r\nimport ShadowModal from \"../../../components/ShadowModal\";\r\nimport ShadowButton from \"../../../components/ShadowButton\";\r\n\r\nconst PageHeader = ({\r\n  listStyle,\r\n  setListStyle,\r\n  navigate,\r\n  setIsOpen,\r\n  dispatch,\r\n  _showAlert,\r\n  signatures,\r\n}) => {\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  return (\r\n    <VStack\r\n      style={{\r\n        marginTop: vh(-10),\r\n        marginHorizontal: vw(20),\r\n        borderBottomColor: \"rgba(0,0,0,0.15)\",\r\n        borderBottomWidth: 1,\r\n      }}\r\n    >\r\n      <HStack justifyContent={\"space-between\"}>\r\n        <Text\r\n          style={{\r\n            fontSize: vw(24),\r\n            paddingTop: vh(30),\r\n            width: vw(300),\r\n            color: \"#303030\",\r\n            fontFamily: \"Poppins_medium\",\r\n          }}\r\n        >\r\n          {\"Templates\"}\r\n        </Text>\r\n        <Hidden only={[\"sm\", \"base\"]}>\r\n          <HStack alignSelf={\"center\"}>\r\n            <Pressable\r\n              onPress={() => {\r\n                navigate(\"/campaigns\");\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  fontSize: vw(15),\r\n                  paddingTop: vh(40),\r\n                  paddingHorizontal: 10,\r\n                  color: \"#303030\",\r\n                  fontFamily: \"Poppins_medium\",\r\n                  marginHorizontal: vw(25),\r\n                  paddingBottom: vh(13),\r\n                  borderBottomWidth: vh(0),\r\n                  borderBottomColor: \"rgba(125, 43, 233, 1)\",\r\n                }}\r\n              >\r\n                Campaigns\r\n              </Text>\r\n            </Pressable>\r\n            <Pressable\r\n              onPress={() => {\r\n                navigate(\"/templates\");\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  fontSize: vw(15),\r\n                  paddingTop: vh(40),\r\n                  paddingHorizontal: 10,\r\n                  color: Colors.primary,\r\n                  fontFamily: \"Poppins_medium\",\r\n                  marginHorizontal: vw(25),\r\n                  paddingBottom: vh(13),\r\n                  borderBottomWidth: vh(4),\r\n                  borderBottomColor: \"rgba(125, 43, 233, 1)\",\r\n                }}\r\n              >\r\n                Templates\r\n              </Text>\r\n            </Pressable>\r\n            <Pressable\r\n              onPress={() => {\r\n                navigate(\"/signatures\");\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  fontSize: vw(15),\r\n                  paddingTop: vh(40),\r\n                  paddingHorizontal: 10,\r\n                  color: \"#303030\",\r\n                  fontFamily: \"Poppins_medium\",\r\n                  marginHorizontal: vw(25),\r\n                  paddingBottom: vh(13),\r\n                  borderBottomWidth: vh(0),\r\n                  borderBottomColor: \"rgba(125, 43, 233, 1)\",\r\n                }}\r\n              >\r\n                Signatures\r\n              </Text>\r\n            </Pressable>\r\n          </HStack>\r\n        </Hidden>\r\n        <HStack\r\n          style={{ marginTop: vh(20), width: vw(300) }}\r\n          alignItems={\"center\"}\r\n          justifyContent={\"flex-end\"}\r\n          space={2}\r\n        >\r\n          <ShadowButton\r\n            onPress={async () => {\r\n              if (signatures && signatures.length === 0) {\r\n                setIsAlertOpen(true);\r\n              } else {\r\n                try {\r\n                  await dispatch({\r\n                    type: events.SET_CURRENT_TEMPLATE,\r\n                    data: null,\r\n                  });\r\n                  setIsOpen(true);\r\n                } catch (err) {\r\n                  _showAlert(\"error\", err.message);\r\n                }\r\n              }\r\n            }}\r\n            label={\"+ Create\"}\r\n            style={{ height: vh(36) }}\r\n          />\r\n        </HStack>\r\n      </HStack>\r\n      <Hidden from='md'>\r\n        <HStack alignSelf={\"center\"}>\r\n          <Pressable\r\n            onPress={() => {\r\n              navigate(\"/campaigns\");\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontSize: vw(15),\r\n                paddingTop: vh(20),\r\n                paddingHorizontal: 10,\r\n                color: \"#303030\",\r\n                fontFamily: \"Poppins_medium\",\r\n                marginHorizontal: vw(10),\r\n                paddingBottom: vh(13),\r\n                borderBottomWidth: vh(0),\r\n                borderBottomColor: \"rgba(125, 43, 233, 1)\",\r\n              }}\r\n            >\r\n              Campaigns\r\n            </Text>\r\n          </Pressable>\r\n          <Pressable\r\n            onPress={() => {\r\n              navigate(\"/templates\");\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontSize: vw(15),\r\n                paddingTop: vh(20),\r\n                paddingHorizontal: 10,\r\n                color: Colors.primary,\r\n                fontFamily: \"Poppins_medium\",\r\n                marginHorizontal: vw(10),\r\n                paddingBottom: vh(13),\r\n                borderBottomWidth: vh(4),\r\n                borderBottomColor: \"rgba(125, 43, 233, 1)\",\r\n              }}\r\n            >\r\n              Templates\r\n            </Text>\r\n          </Pressable>\r\n          <Pressable\r\n            onPress={() => {\r\n              navigate(\"/signatures\");\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontSize: vw(15),\r\n                paddingTop: vh(20),\r\n                paddingHorizontal: 10,\r\n                color: \"#303030\",\r\n                fontFamily: \"Poppins_medium\",\r\n                marginHorizontal: vw(10),\r\n                paddingBottom: vh(13),\r\n                borderBottomWidth: vh(0),\r\n                borderBottomColor: \"rgba(125, 43, 233, 1)\",\r\n              }}\r\n            >\r\n              Signatures\r\n            </Text>\r\n          </Pressable>\r\n        </HStack>\r\n      </Hidden>\r\n      <ShadowModal\r\n        size='md'\r\n        isOpen={isAlertOpen}\r\n        header={\"Attention!\"}\r\n        close={() => {\r\n          setIsAlertOpen(false);\r\n        }}\r\n        buttons={\r\n          <>\r\n            <ShadowButton\r\n              space={2}\r\n              onPress={() => {\r\n                setIsAlertOpen(false);\r\n              }}\r\n              label='Cancel'\r\n              variant='outline'\r\n              color={Colors.primary}\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n            <ShadowButton\r\n              space={2}\r\n              onPress={() => {\r\n                navigate(\"/signatures\");\r\n              }}\r\n              label='Add Signature'\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n          </>\r\n        }\r\n      >\r\n        <Text\r\n          style={{\r\n            fontFamily: \"Poppins\",\r\n            fontSize: vw(15),\r\n            color: \"rgba(0,0,0,0.8)\",\r\n          }}\r\n        >\r\n          You need a signature to add a template\r\n        </Text>\r\n      </ShadowModal>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nconst Index = ({ user, setLogout }) => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const toast = useToast();\r\n  const [limit, setLimit] = useState(50);\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  // const onClose = () => setIsOpen(false);\r\n  const [listStyle, setListStyle] = useState(\"vertical\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isRefreshing, setIsRefreshing] = useState(false);\r\n  const [showPreview, setShowPreview] = useState(false);\r\n  const [refresh, setRefresh] = useState(false);\r\n  // const [error, setError] = useState();\r\n  const [page, setPage] = useState(1);\r\n  const {\r\n    userTemplates: templates,\r\n    // templateStyles,\r\n    total,\r\n  } = useSelector((state) => state.templates);\r\n  const signatures = useSelector((state) => state.signatures.userSignatures);\r\n\r\n  const [templateOption, setTemplateOptions] = useState({});\r\n  const profile = getUser();\r\n\r\n  const _showAlert = useCallback(\r\n    (status, msg) => {\r\n      toast.show({\r\n        placement: \"top\",\r\n        render: () => {\r\n          let bg = \"red.300\";\r\n          if (status === \"error\") {\r\n            bg = \"red.300\";\r\n          } else if (status === \"success\") {\r\n            bg = \"green.300\";\r\n          } else if (status === \"info\") {\r\n            bg = \"blueGray.300\";\r\n          } else if (status === \"warning\") {\r\n            bg = \"orange.300\";\r\n          }\r\n          return (\r\n            <Text\r\n              style={{\r\n                fontSize: vw(12),\r\n                fontFamily: \"Poppins_medium\",\r\n                color: \"#33214B\",\r\n              }}\r\n              p={2}\r\n              bg={bg}\r\n              rounded={\"full\"}\r\n            >\r\n              {msg}\r\n            </Text>\r\n          );\r\n        },\r\n      });\r\n    },\r\n    [toast]\r\n  );\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await dispatch(signatureActions.fetchSignatures(1, 1000));\r\n    })();\r\n  }, [dispatch]);\r\n\r\n  const loadTemplates = useCallback(async () => {\r\n    // setIsRefreshing(true);\r\n    try {\r\n      await dispatch(templateActions.fetchTemplates(page, limit));\r\n    } catch (err) {\r\n      _showAlert(\"error\", err.message);\r\n    }\r\n    // setIsRefreshing(false);\r\n  }, [dispatch, _showAlert, page, limit, refresh]);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    loadTemplates().then(() => {\r\n      setIsLoading(false);\r\n    });\r\n    return () => {\r\n      setIsLoading(false);\r\n      setIsRefreshing(false);\r\n    };\r\n  }, [dispatch, loadTemplates, refresh, page, limit]);\r\n\r\n  // if (error) {\r\n  //   console.log(error);\r\n  //   return (\r\n  //     <Center>\r\n  //       <Text>An error occurred!</Text>\r\n  //       <Button\r\n  //         style={{ color: Colors.primary, margin: 5, paddingHorizontal: 5 }}\r\n  //         onPress={loadTemplates}\r\n  //       >\r\n  //         <Text style={{ color: \"white\" }}>Try Again</Text>\r\n  //       </Button>\r\n  //     </Center>\r\n  //   );\r\n  // }\r\n\r\n  const NoItemsFound = () => {\r\n    return (\r\n      <Center mt={250} flex={1}>\r\n        <Text>No items found.</Text>\r\n      </Center>\r\n    );\r\n  };\r\n\r\n  const filteredTemplates = templates.filter(\r\n    (f) => f.createdby === profile._id\r\n  );\r\n\r\n  const ph = 100 - parseFloat(vh(70)) + \"vh\";\r\n\r\n  const cardwidth = 250;\r\n  let cols = Math.floor(window.screen.width / cardwidth);\r\n  if (cols === 0) {\r\n    cols = 1;\r\n  }\r\n\r\n  return (\r\n    <VStack minHeight={\"100vh\"} bg={\"white\"} flex={1}>\r\n      <NavBar user={user} setLogout={setLogout} />\r\n      <VStack height={ph}>\r\n        <PageHeader\r\n          navigate={navigate}\r\n          setListStyle={setListStyle}\r\n          listStyle={listStyle}\r\n          setIsOpen={setIsOpen}\r\n          dispatch={dispatch}\r\n          _showAlert={_showAlert}\r\n          signatures={signatures}\r\n        />\r\n        {isLoading ? (\r\n          <Center flex={1}>\r\n            <Spinner size={\"small\"} color={Colors.primary} />\r\n          </Center>\r\n        ) : (\r\n          <>\r\n            {cols === 1 ? (\r\n              <FlatList\r\n                key={\"list-\" + cols}\r\n                contentContainerStyle={{ paddingBottom: 20 }}\r\n                ListEmptyComponent={<NoItemsFound />}\r\n                // refreshing={isRefreshing}\r\n                removeClippedSubviews={true}\r\n                data={filteredTemplates}\r\n                keyExtractor={(item) => item._id}\r\n                renderItem={({ item }) => {\r\n                  return (\r\n                    <VerticalItem\r\n                      cols={cols}\r\n                      item={item}\r\n                      setIsOpen={setIsOpen}\r\n                      setShowPreview={setShowPreview}\r\n                      setTemplateOptions={setTemplateOptions}\r\n                    />\r\n                  );\r\n                }}\r\n              />\r\n            ) : (\r\n              <FlatList\r\n                key={\"list-\" + cols}\r\n                contentContainerStyle={{ paddingBottom: 20 }}\r\n                ListEmptyComponent={<NoItemsFound />}\r\n                // refreshing={isRefreshing}\r\n                removeClippedSubviews={true}\r\n                data={filteredTemplates}\r\n                keyExtractor={(item) => item._id}\r\n                renderItem={({ item }) => {\r\n                  return (\r\n                    <VerticalItem\r\n                      cols={cols}\r\n                      item={item}\r\n                      setIsOpen={setIsOpen}\r\n                      setShowPreview={setShowPreview}\r\n                      setTemplateOptions={setTemplateOptions}\r\n                    />\r\n                  );\r\n                }}\r\n                columnWrapperStyle={{\r\n                  justifyContent:\r\n                    filteredTemplates.length > 5\r\n                      ? \"space-between\"\r\n                      : \"flex-start\",\r\n                }}\r\n                numColumns={5}\r\n              />\r\n            )}\r\n            {total > limit && (\r\n              <ShadowPagination\r\n                limit={limit}\r\n                total={total}\r\n                page={page}\r\n                setPage={setPage}\r\n                setIsLoading={setIsLoading}\r\n                setLimit={setLimit}\r\n              />\r\n            )}\r\n          </>\r\n        )}\r\n        {isOpen && (\r\n          <AddTemplate\r\n            refresh={refresh}\r\n            setRefresh={setRefresh}\r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n          />\r\n        )}\r\n        {showPreview && (\r\n          <ShadowModal\r\n            size='md'\r\n            // height={450}\r\n            header={\"Preview\"}\r\n            isOpen={showPreview}\r\n            close={() => {\r\n              setShowPreview(false);\r\n            }}\r\n            // cancel={() => {\r\n            //   setShowPreview(false);\r\n            // }}\r\n            // width={vw(450)}\r\n            buttons={\r\n              <ShadowButton\r\n                space={2}\r\n                style={{ height: vh(36) }}\r\n                color={Colors.primary}\r\n                variant='outline'\r\n                label={\"Close\"}\r\n                onPress={() => {\r\n                  setShowPreview(false);\r\n                }}\r\n              />\r\n            }\r\n          >\r\n            <Preview templateOption={templateOption} />\r\n          </ShadowModal>\r\n        )}\r\n      </VStack>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","import { API_URL, getUser } from \"../../constants/Config\";\r\nimport * as events from \"../events\";\r\n\r\nexport const fetchTemplates = (page = 1, limit = 50) => {\r\n  return async (dispatch, getState) => {\r\n    const { team, token } = getUser();\r\n    const { userCampaigns } = getState().campaigns;\r\n\r\n    const ownerCampaign =\r\n      userCampaigns &&\r\n      userCampaigns.length > 0 &&\r\n      userCampaigns.find((t) => t.createdUser._id === team);\r\n\r\n    const body = {\r\n      skip: page === 1 ? 0 : (page - 1) * limit,\r\n      limit,\r\n    };\r\n    if (ownerCampaign) {\r\n      const templates = [];\r\n      ownerCampaign &&\r\n        ownerCampaign.steps &&\r\n        ownerCampaign.steps.map((s) => {\r\n          if (s.emailtemplate) {\r\n            templates.push(s.emailtemplate);\r\n          }\r\n          if (s.postcardtemplate) {\r\n            templates.push(s.postcardtemplate);\r\n          }\r\n          return s;\r\n        });\r\n\r\n      if (templates.length > 0) {\r\n        body[\"filter\"] = { templates };\r\n      }\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${API_URL}/templates/get`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorResData = await response.json();\r\n        console.log(errorResData);\r\n        // throw new Error(\"Something went wrong!\");\r\n      }\r\n\r\n      const resData = await response.json();\r\n\r\n      dispatch({\r\n        type: events.SET_TEMPLATES,\r\n        data: resData.data ? resData.data : [],\r\n        total: resData.count ? resData.count : 0\r\n      });\r\n    } catch (err) {\r\n      // send to custom analytics server\r\n      console.log(\"Error \", err);\r\n      throw err;\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteTemplate = (_id) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const { token } = getUser();\r\n      let templates = getState().templates.userTemplates;\r\n      const response = await fetch(`${API_URL}/templates/${_id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n        body: JSON.stringify({ active: false }),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n      const resData = await response.json();\r\n      if (resData.data) {\r\n        if (templates && templates.length > 0) {\r\n          templates = templates.filter((f) => f._id !== resData.data._id);\r\n        }\r\n        await dispatch({\r\n          type: events.SET_TEMPLATES,\r\n          data: templates,\r\n        });\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    } catch (err) {\r\n      console.log(err);\r\n      throw new Error(err.message);\r\n    }\r\n  };\r\n};\r\n\r\nexport const saveTemplate = (data) => {\r\n  return async (dispatch, getState) => {\r\n    // any async code you want!\r\n    const { token } = getUser();\r\n    let templates = getState().templates.userTemplates;\r\n    const { _id } = data;\r\n    let url = `${API_URL}/templates/add`;\r\n    let method = \"POST\";\r\n    if (_id) {\r\n      url = `${API_URL}/templates/${_id}`;\r\n      delete data._id;\r\n      method = \"PATCH\";\r\n    }\r\n    try {\r\n      const response = await fetch(url, {\r\n        method,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorRes = await response.json();\r\n        let message = \"Something went wrong!\";\r\n        if (errorRes && errorRes.error) {\r\n          message = errorRes.error;\r\n        }\r\n        throw new Error(message);\r\n      }\r\n\r\n      const resData = await response.json();\r\n\r\n      if (resData.data) {\r\n        if (_id) {\r\n          templates = templates.map((f) => {\r\n            if (f._id === resData.data._id) {\r\n              f = resData.data;\r\n            }\r\n            return f;\r\n          });\r\n        } else {\r\n          templates = [...templates, resData.data];\r\n        }\r\n\r\n        dispatch({\r\n          type: events.SET_TEMPLATES,\r\n          data: templates,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      throw new Error(err.message);\r\n    }\r\n  };\r\n};\r\n"],"names":["ShadowPagination","total","limit","setLimit","setPage","page","style","setIsLoading","view","pageCount","Math","ceil","MyPaginate","styled","ReactPaginate","attrs","activeClassName","vw","HStack","boxShadow","justifyContent","alignItems","height","vh","backgroundColor","paddingHorizontal","Text","fontFamily","fontSize","color","marginRight","Select","outlineColor","outlineStyle","borderWidth","variant","selectedValue","parseInt","width","onValueChange","v","dropdownIcon","DropDownIcon","label","value","marginLeft","breakLabel","nextLabel","onPageChange","p","selected","pageRangeDisplayed","marginPagesDisplayed","previousLabel","renderOnZeroPageCount","forcePage","React","props","xmlns","viewBox","G","fill","Path","d","opacity","stroke","strokeLinecap","strokeLinejoin","strokeWidth","Util","id","transform","Rect","rx","isEnd","item","setIsOpen","setShowPreview","setTemplateOptions","cols","dispatch","useDispatch","Pressable","onPress","type","events","data","VStack","marginHorizontal","marginVertical","borderRadius","flex","Center","style_id","templatetype","EmailIcon","marginTop","Colors","textAlign","name","marginBottom","fontsList","isOpen","setRefresh","sRef","useRef","user","getUser","toast","useToast","useState","editSignature","setEditSignature","currentTemplate","useSelector","state","templates","sz","useBreakpointValue","base","sm","lg","md","xl","signatures","userSignatures","isLoading","isSaving","setIsSaving","isDeleting","showPicker","setShowPicker","pickerColor","setPickerColor","colorFor","setColorFor","templateStyle","setTemplateStyle","onClose","isAlertOpen","setIsAlertOpen","onAlertClose","header","desc","nolabel","yeslabel","yes","no","alertConfig","setAlertConfig","section_a","length","secA","setSecA","section_b","secB","setSecB","section_c","secC","setSecC","signatureOptions","map","sign","_id","fontOptions","f","templatetypeOptions","useForm","mode","defaultValues","_","emailcontent","subject","primarycolor","secondarycolor","fontfamily","signature","includeinbody","control","handleSubmit","errors","formState","getValues","setValue","trigger","useEffect","saveHandler","_showAlert","useCallback","status","msg","show","placement","render","bg","rounded","postdata","cs","find","s","smtp","section_d","action","templateActions","message","deleteHandler","r","Spinner","size","mb","ShadowModal","close","save","Object","keys","buttons","space","ShadowButton","background","campaigns","zoom","ShadowInput","isRequired","placeholder","invalid","error","rules","required","zIndex","ShadowSelect","items","onChange","console","log","ref","createdby","FormControl","ScrollView","horizontal","idx","setCharCount","minLength","maxLength","_text","position","right","top","multiline","numberOfLines","rightIcon","Circle","subject_a","cancel","onChangeComplete","hex","AddSignature","html","dangerouslySetInnerHTML","__html","templateOption","side","setSide","email","phone","logo","company_logo","photo","image","sid","sectiona","sectionb","sectionc","mls","disclosure","propertyUri","CDN","logoUri","photoUri","Box","Button","my","borderColor","Image","resizeMethod","margin","source","uri","padding","lineHeight","flexWrap","bottom","flexDirection","formatPhoneNumber","PageHeader","listStyle","setListStyle","navigate","borderBottomColor","borderBottomWidth","paddingTop","Hidden","only","alignSelf","paddingBottom","from","setLogout","useNavigate","setIsRefreshing","showPreview","refresh","userTemplates","profile","signatureActions","loadTemplates","then","NoItemsFound","mt","filteredTemplates","filter","ph","parseFloat","floor","window","screen","minHeight","NavBar","FlatList","contentContainerStyle","ListEmptyComponent","removeClippedSubviews","keyExtractor","renderItem","columnWrapperStyle","numColumns","fetchTemplates","getState","team","token","userCampaigns","ownerCampaign","t","createdUser","body","skip","steps","emailtemplate","push","postcardtemplate","fetch","API_URL","method","headers","Authorization","JSON","stringify","response","ok","json","errorResData","resData","count","deleteTemplate","active","Error","saveTemplate","url","errorRes"],"sourceRoot":""}