{"version":3,"file":"static/js/3010.91bb55bd.chunk.js","mappings":"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","sources":["components/svg/EmailIcon.js","pages/private/templates/assets/Template1.js","pages/private/templates/assets/Template2.js","pages/private/templates/assets/Template3.js","pages/private/templates/assets/Template4.js","pages/private/templates/VerticalItem.js","pages/private/templates/AddTemplate.js","pages/private/templates/HtmlPreview.js","pages/private/templates/Preview.js","pages/private/templates/index.js"],"sourcesContent":["import * as React from \"react\";\r\nimport Svg, { G, Path } from \"react-native-svg\";\r\n\r\nconst EmailIcon = (props) => (\r\n  <Svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    viewBox='0 0 24 24'\r\n    width={24}\r\n    height={24}\r\n    {...props}\r\n  >\r\n    <G fill={\"none\"}>\r\n      <Path data-name='Rectangle 287' d='M0 0h24v24H0z' />\r\n      <G\r\n        opacity={0.5}\r\n        stroke={props.fill || \"#000\"}\r\n        strokeLinecap='round'\r\n        strokeLinejoin='round'\r\n        strokeWidth={1.5}\r\n      >\r\n        <Path\r\n          data-name='Stroke 1'\r\n          d='m16.964 9.392-3.762 3.059a1.945 1.945 0 0 1-2.421 0L6.987 9.392'\r\n        />\r\n        <Path\r\n          data-name='Stroke 3'\r\n          d='M16.122 19.677c2.575.007 4.31-2.108 4.31-4.708V9.154a4.407 4.407 0 0 0-4.31-4.716H7.81A4.407 4.407 0 0 0 3.5 9.154v5.814c0 2.6 1.735 4.716 4.31 4.708Z'\r\n        />\r\n      </G>\r\n    </G>\r\n  </Svg>\r\n);\r\n\r\nexport default EmailIcon;\r\n","import React from \"react\";\r\nimport Svg, { G, Rect } from \"react-native-svg\";\r\n/* SVGR has dropped some elements not supported by react-native-svg: style */\r\nimport Util from \"../../../../util\";\r\nconst { vw, vh } = Util;\r\n\r\nconst Template1 = (props) => (\r\n  <Svg\r\n    viewBox='0 0 94 94'\r\n    width={props.width || vw(94)}\r\n    height={props.height || vh(94)}\r\n    {...props}\r\n  >\r\n    <G id='Group_1225' data-name='Group 1225' transform='translate(-8942 543)'>\r\n      <Rect\r\n        id='Rectangle_1573'\r\n        data-name='Rectangle 1573'\r\n        width='94'\r\n        height='94'\r\n        transform='translate(8942 -543)'\r\n        fill='#e4e4e4'\r\n      />\r\n      <G id='Group_1224' data-name='Group 1224' transform='translate(0 -1)'>\r\n        <Rect\r\n          id='Rectangle_1577'\r\n          data-name='Rectangle 1577'\r\n          width='28'\r\n          height='22'\r\n          rx='3'\r\n          transform='translate(8950 -481)'\r\n          fill='#ccc'\r\n        />\r\n        <Rect\r\n          id='Rectangle_1579'\r\n          data-name='Rectangle 1579'\r\n          width='31'\r\n          height='4'\r\n          rx='2'\r\n          transform='translate(8997 -475)'\r\n          fill='#ccc'\r\n        />\r\n        <Rect\r\n          id='Rectangle_1580'\r\n          data-name='Rectangle 1580'\r\n          width='31'\r\n          height='4'\r\n          rx='2'\r\n          transform='translate(8997 -468)'\r\n          fill='#ccc'\r\n        />\r\n        <Rect\r\n          id='Rectangle_1581'\r\n          data-name='Rectangle 1581'\r\n          width='78'\r\n          height='40'\r\n          rx='3'\r\n          transform='translate(8950 -530)'\r\n          fill='#ccc'\r\n        />\r\n      </G>\r\n    </G>\r\n  </Svg>\r\n);\r\n\r\nexport default Template1;\r\n","import React from 'react';\r\nimport Svg, { G, Rect } from 'react-native-svg';\r\n/* SVGR has dropped some elements not supported by react-native-svg: style */\r\n\r\nimport Util from \"../../../../util\";\r\nconst { vw, vh } = Util;\r\n\r\nconst Template2 = (props) => (\r\n  <Svg\r\n    viewBox='0 0 94 94'\r\n    width={props.width || vw(94)}\r\n    height={props.height || vh(94)}\r\n    {...props}\r\n  >\r\n    <G id='Group_1226' data-name='Group 1226' transform='translate(-8942 543)'>\r\n      <Rect\r\n        id='Rectangle_1573'\r\n        data-name='Rectangle 1573'\r\n        width='94'\r\n        height='94'\r\n        transform='translate(8942 -543)'\r\n        fill='#e4e4e4'\r\n      />\r\n      <G\r\n        id='Group_1224'\r\n        data-name='Group 1224'\r\n        transform='translate(8950 -531)'>\r\n        <Rect\r\n          id='Rectangle_1577'\r\n          data-name='Rectangle 1577'\r\n          width='28'\r\n          height='22'\r\n          rx='3'\r\n          transform='translate(50 49)'\r\n          fill='#ccc'\r\n        />\r\n        <Rect\r\n          id='Rectangle_1579'\r\n          data-name='Rectangle 1579'\r\n          width='31'\r\n          height='4'\r\n          rx='2'\r\n          transform='translate(0 55)'\r\n          fill='#ccc'\r\n        />\r\n        <Rect\r\n          id='Rectangle_1580'\r\n          data-name='Rectangle 1580'\r\n          width='31'\r\n          height='4'\r\n          rx='2'\r\n          transform='translate(0 62)'\r\n          fill='#ccc'\r\n        />\r\n        <Rect\r\n          id='Rectangle_1581'\r\n          data-name='Rectangle 1581'\r\n          width='78'\r\n          height='40'\r\n          rx='3'\r\n          fill='#ccc'\r\n        />\r\n      </G>\r\n    </G>\r\n  </Svg>\r\n);\r\n\r\nexport default Template2;\r\n","import React from 'react';\r\nimport Svg, {  G, Rect } from 'react-native-svg';\r\n/* SVGR has dropped some elements not supported by react-native-svg: style */\r\n\r\nimport Util from \"../../../../util\";\r\nconst { vw, vh } = Util;\r\n\r\nconst Template3 = (props) => (\r\n  <Svg\r\n    viewBox='0 0 94 94'\r\n    width={props.width || vw(94)}\r\n    height={props.height || vh(94)}\r\n    {...props}\r\n  >\r\n    <G id='Group_1227' data-name='Group 1227' transform='translate(-8942 543)'>\r\n      <Rect\r\n        id='Rectangle_1573'\r\n        data-name='Rectangle 1573'\r\n        width='94'\r\n        height='94'\r\n        transform='translate(8942 -543)'\r\n        fill='#e4e4e4'\r\n      />\r\n      <G\r\n        id='Group_1224'\r\n        data-name='Group 1224'\r\n        transform='translate(8950 -531)'>\r\n        <Rect\r\n          id='Rectangle_1577'\r\n          data-name='Rectangle 1577'\r\n          width='28'\r\n          height='22'\r\n          rx='3'\r\n          fill='#ccc'\r\n        />\r\n        <Rect\r\n          id='Rectangle_1579'\r\n          data-name='Rectangle 1579'\r\n          width='31'\r\n          height='4'\r\n          rx='2'\r\n          transform='translate(47 12)'\r\n          fill='#ccc'\r\n        />\r\n        <Rect\r\n          id='Rectangle_1580'\r\n          data-name='Rectangle 1580'\r\n          width='31'\r\n          height='4'\r\n          rx='2'\r\n          transform='translate(47 5)'\r\n          fill='#ccc'\r\n        />\r\n        <Rect\r\n          id='Rectangle_1581'\r\n          data-name='Rectangle 1581'\r\n          width='78'\r\n          height='40'\r\n          rx='3'\r\n          transform='translate(0 31)'\r\n          fill='#ccc'\r\n        />\r\n      </G>\r\n    </G>\r\n  </Svg>\r\n);\r\n\r\nexport default Template3;\r\n","import React from \"react\";\r\nimport Svg, { G, Rect } from \"react-native-svg\";\r\n/* SVGR has dropped some elements not supported by react-native-svg: style */\r\n\r\nimport Util from \"../../../../util\";\r\nconst { vw, vh } = Util;\r\n\r\nconst Template4 = (props) => (\r\n  <Svg\r\n    viewBox='0 0 94 94'\r\n    width={props.width || vw(94)}\r\n    height={props.height || vh(94)}\r\n    {...props}\r\n  >\r\n    <Rect\r\n      id='Rectangle_1573'\r\n      data-name='Rectangle 1573'\r\n      width='94'\r\n      height='94'\r\n      fill='#e4e4e4'\r\n    />\r\n    <G id='Group_1224' data-name='Group 1224' transform='translate(8 12)'>\r\n      <Rect\r\n        id='Rectangle_1577'\r\n        data-name='Rectangle 1577'\r\n        width='28'\r\n        height='22'\r\n        rx='3'\r\n        transform='translate(50)'\r\n        fill='#ccc'\r\n      />\r\n      <Rect\r\n        id='Rectangle_1579'\r\n        data-name='Rectangle 1579'\r\n        width='31'\r\n        height='4'\r\n        rx='2'\r\n        transform='translate(0 12)'\r\n        fill='#ccc'\r\n      />\r\n      <Rect\r\n        id='Rectangle_1580'\r\n        data-name='Rectangle 1580'\r\n        width='31'\r\n        height='4'\r\n        rx='2'\r\n        transform='translate(0 5)'\r\n        fill='#ccc'\r\n      />\r\n      <Rect\r\n        id='Rectangle_1581'\r\n        data-name='Rectangle 1581'\r\n        width='78'\r\n        height='40'\r\n        rx='3'\r\n        transform='translate(0 31)'\r\n        fill='#ccc'\r\n      />\r\n    </G>\r\n  </Svg>\r\n);\r\n\r\nexport default Template4;\r\n","import React from \"react\";\r\nimport { VStack, Text, Center, Pressable, HStack } from \"native-base\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { vw, vh } from \"../../../util\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport * as events from \"../../../store/events\";\r\nimport Template1 from \"./assets/Template1\";\r\nimport Template2 from \"./assets/Template2\";\r\nimport Template3 from \"./assets/Template3\";\r\nimport Template4 from \"./assets/Template4\";\r\nimport EmailIcon from \"../../../components/svg/EmailIcon\";\r\n\r\nconst VerticalItem = ({\r\n  isEnd,\r\n  item,\r\n  setIsOpen,\r\n  setShowPreview,\r\n  setTemplateOptions,\r\n  cols,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Pressable\r\n      onPress={async () => {\r\n        await dispatch({ type: events.SET_CURRENT_TEMPLATE, data: item });\r\n        setIsOpen(true);\r\n      }}\r\n    >\r\n      <VStack\r\n        style={{\r\n          boxShadow: \"0px 3px 10px #0000001A\",\r\n          width: cols === 1 ? \"88%\" : vw(250),\r\n          height: vh(280),\r\n          marginHorizontal: vw(20),\r\n          marginVertical: vh(20),\r\n          borderRadius: vw(10),\r\n          flex: 1,\r\n        }}\r\n      >\r\n        <Center\r\n          style={{\r\n            backgroundColor: \"#F2F4F8\",\r\n            height: vh(200),\r\n            borderRadius: vw(10),\r\n            width: cols === 1 ? \"100%\" : vw(250),\r\n          }}\r\n        >\r\n          {item.style_id === 1 && (\r\n            <Template1 width={vw(230)} height={vh(180)} />\r\n          )}\r\n          {item.style_id === 2 && <Template2 />}\r\n          {item.style_id === 3 && <Template3 />}\r\n          {item.style_id === 4 && <Template4 />}\r\n          {item.templatetype === \"email\" && (\r\n            <EmailIcon\r\n              width={vw(100)}\r\n              height={vw(100)}\r\n              fill={\"rgba(0,0,0,0.15)\"}\r\n            />\r\n          )}\r\n        </Center>\r\n\r\n        <Text\r\n          style={{\r\n            marginTop: 10,\r\n            color: Colors.primary,\r\n            fontFamily: \"Poppins_medium\",\r\n            fontSize: vw(15),\r\n            textAlign: \"left\",\r\n            marginLeft: vw(20)\r\n          }}\r\n        >\r\n          {item.name}\r\n        </Text>\r\n\r\n        <HStack\r\n          style={{ marginTop: vh(6), marginHorizontal: vw(20), marginBottom: vh(10) }}\r\n          justifyContent={\"space-between\"}\r\n        >\r\n          <Text\r\n            style={{\r\n              color: \"#686868\",\r\n              fontFamily: \"Poppins\",\r\n              fontSize: vw(13),\r\n            }}\r\n          >\r\n            {item.templatetype === \"email\" ? \"Email\" : \"Mail\"}\r\n          </Text>\r\n          <Pressable\r\n            onPress={() => {\r\n              setTemplateOptions(item);\r\n              setShowPreview(true);\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontSize: vw(13),\r\n                fontFamily: \"Poppins\",\r\n                color: Colors.primary,\r\n              }}\r\n            >\r\n              Preview\r\n            </Text>\r\n          </Pressable>\r\n        </HStack>\r\n      </VStack>\r\n    </Pressable>\r\n  );\r\n};\r\n\r\nexport default VerticalItem;\r\n","/**\r\n *\r\n * Add Signature Screen\r\n * Author:Justin Antony\r\n * last modified on 04/nov/2021\r\n *\r\n */\r\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport {\r\n  Pressable,\r\n  Text,\r\n  VStack,\r\n  Center,\r\n  Spinner,\r\n  useToast,\r\n  HStack,\r\n  ScrollView,\r\n  FormControl,\r\n  CircleIcon,\r\n  useBreakpointValue,\r\n} from \"native-base\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport _ from \"lodash\";\r\nimport { SketchPicker } from \"react-color\";\r\n\r\nimport { vw, vh } from \"../../../util\";\r\nimport * as templateActions from \"../../../store/actions/templates\";\r\nimport ShadowInput from \"../../../components/ShadowInput\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport ShadowModal from \"../../../components/ShadowModal\";\r\nimport ShadowButton from \"../../../components/ShadowButton\";\r\nimport ShadowSelect from \"../../../components/ShadowSelect\";\r\nimport Template1 from \"./assets/Template1\";\r\nimport Template2 from \"./assets/Template2\";\r\nimport Template3 from \"./assets/Template3\";\r\nimport Template4 from \"./assets/Template4\";\r\nimport { getUser } from \"../../../constants/Config\";\r\nimport * as events from \"../../../store/events\";\r\nimport AddSignature from \"../signatures/AddSignature\";\r\n\r\nconst fontsList = [\r\n  \"Roboto\",\r\n  //'SourceSansPro',\r\n  //'LiuJianMaoCao',\r\n  \"Quicksand\",\r\n  \"Lobster\",\r\n  // 'Pacifico',\r\n  //'DancingScript',\r\n  //'ShadowsIntoLight',\r\n  //'AmaticSC',\r\n  \"Satisfy\",\r\n  \"Caveat\",\r\n  \"Courgette\",\r\n];\r\n\r\nconst AddTemplate = ({ isOpen, setIsOpen, setRefresh }) => {\r\n  const dispatch = useDispatch();\r\n  const sRef = useRef();\r\n  const user = getUser();\r\n  const toast = useToast();\r\n  const [editSignature, setEditSignature] = useState(false);\r\n  const currentTemplate = useSelector(\r\n    (state) => state.templates.currentTemplate\r\n  );\r\n  const sz = useBreakpointValue({\r\n    base: \"base\",\r\n    sm: \"sm\",\r\n    lg: \"lg\",\r\n    md: \"md\",\r\n    xl: \"xl\",\r\n  });\r\n\r\n  const signatures = useSelector((state) => state.signatures.userSignatures);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [showPicker, setShowPicker] = useState(false);\r\n  const [pickerColor, setPickerColor] = useState(Colors.primary);\r\n  const [colorFor, setColorFor] = useState(\"p\");\r\n  const [templateStyle, setTemplateStyle] = useState(1);\r\n  // const [error, setError] = useState();\r\n  // const [openSmtp, setOpenSmtp] = useState();\r\n\r\n  const onClose = () => setIsOpen(false);\r\n  const [isSmtpOpen, setIsSmtpOpen] = React.useState(false);\r\n  const onSmtpClose = () => setIsSmtpOpen(false);\r\n  const [isAlertOpen, setIsAlertOpen] = React.useState(false);\r\n  const onAlertClose = () => setIsAlertOpen(false);\r\n  const cancelRef = React.useRef(null);\r\n  const [alertConfig, setAlertConfig] = useState({\r\n    header: \"\",\r\n    desc: \"\",\r\n    nolabel: \"No\",\r\n    yeslabel: \"Yes\",\r\n    yes: () => {},\r\n    no: onAlertClose,\r\n  });\r\n\r\n  const [secA, setSecA] = useState(\r\n    currentTemplate && currentTemplate.section_a\r\n      ? currentTemplate.section_a.length\r\n      : 0\r\n  );\r\n  const [secB, setSecB] = useState(\r\n    currentTemplate && currentTemplate.section_b\r\n      ? currentTemplate.section_b.length\r\n      : 0\r\n  );\r\n  const [secC, setSecC] = useState(\r\n    currentTemplate && currentTemplate.section_a\r\n      ? currentTemplate.section_c.length\r\n      : 0\r\n  );\r\n\r\n  const signatureOptions = [\r\n    // { label: \"Select Signature\", _id: \"\" },\r\n    ...signatures,\r\n  ].map((sign) => {\r\n    return {\r\n      label: sign.label,\r\n      value: sign._id,\r\n    };\r\n  });\r\n\r\n  // signatureOptions.unshift({\r\n  //   label: \"Select a signature\",\r\n  //   value: \"\",\r\n  // });\r\n\r\n  const fontOptions = fontsList.map((f) => ({\r\n    label: f,\r\n    value: f,\r\n  }));\r\n\r\n  const templatetypeOptions = [\"postcard\", \"email\"].map((f) => ({\r\n    label: f === \"postcard\" ? \"Mail\" : f === \"email\" ? \"E-mail\" : \"\",\r\n    value: f,\r\n  }));\r\n\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    getValues,\r\n    setValue,\r\n    trigger,\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n    defaultValues: _.isEmpty(currentTemplate)\r\n      ? {\r\n          name: \"\",\r\n          templatetype: \"postcard\",\r\n          emailcontent: ``,\r\n          subject: \"\",\r\n          // templatemailer_id: 0,\r\n          // style_id: \"\",\r\n          section_a: \"\",\r\n          section_b:\r\n            \"\",\r\n          section_c:\r\n            \"\",\r\n          // section_d: '',\r\n          primarycolor: \"#ffffff\",\r\n          secondarycolor: \"#000000\",\r\n          fontfamily: \"Roboto\",\r\n          signature: \"\",\r\n          includeinbody: false,\r\n        }\r\n      : {\r\n          name: currentTemplate.name,\r\n          templatetype: currentTemplate.templatetype\r\n            ? currentTemplate.templatetype\r\n            : \"postcard\",\r\n          emailcontent: currentTemplate.emailcontent\r\n            ? currentTemplate.emailcontent\r\n            : ``,\r\n          subject: currentTemplate.subject\r\n            ? currentTemplate.subject\r\n            : \"\",\r\n          // templatemailer_id: currentTemplate.templatemailer_id,\r\n          // style_id: currentTemplate.style_id.toString(),\r\n          section_a: currentTemplate.section_a ? currentTemplate.section_a : \"\",\r\n          section_b: currentTemplate.section_b ? currentTemplate.section_b : \"\",\r\n          section_c: currentTemplate.section_c ? currentTemplate.section_c : \"\",\r\n          // section_d: currentTemplate.section_d,\r\n          primarycolor: currentTemplate.primarycolor\r\n            ? currentTemplate.primarycolor\r\n            : \"#ffffff\",\r\n          secondarycolor: currentTemplate.secondarycolor\r\n            ? currentTemplate.secondarycolor\r\n            : \"#000000\",\r\n          fontfamily: currentTemplate.fontfamily\r\n            ? currentTemplate.fontfamily\r\n            : \"Roboto\",\r\n          signature: currentTemplate.signature\r\n            ? currentTemplate.signature._id\r\n            : \"\",\r\n          includeinbody: currentTemplate.includeinbody\r\n            ? currentTemplate.includeinbody\r\n            : false,\r\n        },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (isSaving) {\r\n      handleSubmit(saveHandler, () => {\r\n        setIsSaving(false);\r\n      })();\r\n    }\r\n  }, [isSaving]);\r\n\r\n  const _showAlert = useCallback(\r\n    (status, msg) => {\r\n      toast.show({\r\n        placement: \"top\",\r\n        render: () => {\r\n          let bg = \"red.300\";\r\n          if (status === \"error\") {\r\n            bg = \"red.300\";\r\n          } else if (status === \"success\") {\r\n            bg = \"green.300\";\r\n          } else if (status === \"info\") {\r\n            bg = \"blueGray.300\";\r\n          } else if (status === \"warning\") {\r\n            bg = \"orange.300\";\r\n          }\r\n          return (\r\n            <Text\r\n              style={{\r\n                fontSize: vw(12),\r\n                fontFamily: \"Poppins_medium\",\r\n                color: \"#33214B\",\r\n              }}\r\n              p={2}\r\n              bg={bg}\r\n              rounded={\"full\"}\r\n            >\r\n              {msg}\r\n            </Text>\r\n          );\r\n        },\r\n      });\r\n    },\r\n    [toast]\r\n  );\r\n\r\n  const saveHandler = async (data) => {\r\n    let postdata = {\r\n      name: data.name,\r\n      templatetype: data.templatetype,\r\n      subject: data.subject,\r\n      emailcontent: data.emailcontent,\r\n      signature: data.signature,\r\n      includeinbody: data.includeinbody,\r\n    };\r\n\r\n    const cs = signatures.find((s) => s._id === data.signature);\r\n    if (cs && !cs.smtp && data.templatetype === \"email\") {\r\n      _showAlert(\r\n        \"error\",\r\n        \"Cannot save template. Selected signature does not have an SMTP configured and cannot be used to send emails.\"\r\n      );\r\n      setIsSaving(false);\r\n      return;\r\n    }\r\n\r\n    if (data.templatetype === \"postcard\") {\r\n      postdata = {\r\n        name: data.name,\r\n        templatetype: data.templatetype,\r\n        // mailer: \"61e42f37e0afaefe143e78ff\", //formState.inputValues.templatemailer_id,\r\n        style_id: templateStyle,\r\n        // data.style_id === \"\" ? templateStyles[0].id : parseInt(data.style_id),\r\n        section_a: data.section_a,\r\n        section_b: data.section_b,\r\n        section_c: data.section_c,\r\n        section_d: \"\", //formState.inputValues.section_d,\r\n        primarycolor: data.primarycolor,\r\n        secondarycolor: data.secondarycolor,\r\n        fontfamily: data.fontfamily === \"\" ? fontsList[0] : data.fontfamily,\r\n        signature: data.signature,\r\n      };\r\n    }\r\n\r\n    if (currentTemplate && currentTemplate._id) {\r\n      postdata[\"_id\"] = currentTemplate._id;\r\n    }\r\n\r\n    // console.log(\"postdata:\",postdata)\r\n\r\n    const action = templateActions.saveTemplate(postdata);\r\n    // setIsSaving(true);\r\n    const msg = !postdata._id\r\n      ? \"Template created successfully.\"\r\n      : \"Template updated successfully.\";\r\n    try {\r\n      await dispatch(action);\r\n      _showAlert(\"success\", msg);\r\n      setIsAlertOpen(false);\r\n      setIsOpen(false);\r\n    } catch (err) {\r\n      //console.log('Created Error', err);\r\n      _showAlert(\"error\", err.message);\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  const deleteHandler = async () => {\r\n    if (currentTemplate._id) {\r\n      setIsLoading(true);\r\n      try {\r\n        const action = templateActions.deleteTemplate(currentTemplate._id);\r\n        const success = await dispatch(action);\r\n        if (success) {\r\n          _showAlert(\"success\", \"Template deleted successfully.\");\r\n          setIsAlertOpen(false);\r\n          setIsOpen(false);\r\n          setRefresh((r) => !r);\r\n        }\r\n      } catch (err) {\r\n        _showAlert(\"error\", err.message);\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return isLoading ? (\r\n    <Center bg={\"white\"} flex={1}>\r\n      <Spinner size={\"small\"} color={Colors.primary} />\r\n    </Center>\r\n  ) : (\r\n    <>\r\n      <VStack bg={\"white\"} mb={20}>\r\n        <ShadowModal\r\n          size='xl'\r\n          // height={\r\n          //   sz === \"base\" || sz === \"sm\"\r\n          //     ? window.screen.height - 20\r\n          //     : window.screen.height - 100\r\n          // }\r\n          // bodyHeight={\r\n          //   sz === \"base\" || sz === \"sm\"\r\n          //     ? window.screen.height - 100\r\n          //     : window.screen.height - 200\r\n          // }\r\n          header={\r\n            currentTemplate && currentTemplate._id\r\n              ? \"Edit Template\"\r\n              : \"Create Template\"\r\n          }\r\n          isOpen={isOpen}\r\n          close={() => {\r\n            onClose();\r\n          }}\r\n          isLoading={isSaving}\r\n          save={() => {\r\n            if (Object.keys(errors).length === 0) {\r\n              setIsSaving(true);\r\n            }\r\n          }}\r\n          // width={sz === \"base\" || sz === \"sm\" ? \"99vw\" : vw(650)}\r\n          buttons={\r\n            <HStack space={2}>\r\n              {currentTemplate && currentTemplate._id && (\r\n                <ShadowButton\r\n                  space={2}\r\n                  variant='outline'\r\n                  label={\"Delete\"}\r\n                  style={{ height: vh(36), background: \"rgba(255, 0, 0, 0.4)\" }}\r\n                  onPress={() => {\r\n                    if (\r\n                      currentTemplate &&\r\n                      currentTemplate.campaigns &&\r\n                      currentTemplate.campaigns.length > 0\r\n                    ) {\r\n                      setAlertConfig({\r\n                        header: \"Sorry!\",\r\n                        desc: \"Cannot delete template, found associated campaigns\",\r\n                        nolabel: \"Okay\",\r\n                        yeslabel: \"\",\r\n                        yes: () => {},\r\n                        no: onAlertClose,\r\n                      });\r\n                      setIsAlertOpen(true);\r\n                      return;\r\n                    }\r\n\r\n                    setAlertConfig({\r\n                      header: \"Delete!\",\r\n                      desc: \"Are you sure you want to delete this template?\",\r\n                      nolabel: \"No\",\r\n                      yeslabel: \"Yes\",\r\n                      yes: deleteHandler,\r\n                      no: onAlertClose,\r\n                    });\r\n                    setIsAlertOpen(true);\r\n                    return;\r\n                  }}\r\n                />\r\n              )}\r\n              <ShadowButton\r\n                space={2}\r\n                color='#7D2BE9'\r\n                variant='outline'\r\n                style={{ height: vh(36) }}\r\n                label={\"Cancel\"}\r\n                onPress={() => {\r\n                  onClose();\r\n                }}\r\n              />\r\n              <ShadowButton\r\n                space={3}\r\n                label={\"Save\"}\r\n                isLoading={isSaving}\r\n                style={{ height: vh(36) }}\r\n                onPress={() => {\r\n                  if (Object.keys(errors).length === 0) {\r\n                    setIsSaving(true);\r\n                  }\r\n                }}\r\n              />\r\n            </HStack>\r\n          }\r\n        >\r\n          <VStack style={{ zoom: \"90%\" }}>\r\n            <HStack\r\n              space={4}\r\n              style={{\r\n                width: sz === \"base\" || sz === \"sm\" ? \"94vw\" : vw(612),\r\n                justifyContent: \"space-between\",\r\n                // marginHorizontal: vw(20),\r\n                marginBottom: vh(20),\r\n              }}\r\n            >\r\n              <ShadowInput\r\n                control={control}\r\n                isRequired\r\n                name='name'\r\n                label='Template Name '\r\n                placeholder='Enter template name'\r\n                invalid={errors.name ? true : false}\r\n                error={errors.name ? errors.name.message : \"\"}\r\n                rules={{\r\n                  required: {\r\n                    value: true,\r\n                    message: \"Please enter template name.\",\r\n                  },\r\n                }}\r\n              />\r\n            </HStack>\r\n            <HStack\r\n              space={3}\r\n              style={{\r\n                width: sz === \"base\" || sz === \"sm\" ? \"45.5vw\" : vw(300),\r\n                justifyContent: \"space-between\",\r\n                // marginHorizontal: vw(20),\r\n                marginVertical: vh(20),\r\n                zIndex: 9999,\r\n              }}\r\n            >\r\n              <ShadowSelect\r\n                control={control}\r\n                items={templatetypeOptions}\r\n                name='templatetype'\r\n                label='Select template type '\r\n                placeholder='Select type'\r\n                onChange={(v) => {\r\n                  console.log(v);\r\n                  trigger(\"templatetype\");\r\n                  // setValue(\"signature\", \"\");\r\n                  // trigger(\"signature\");\r\n                }}\r\n                invalid={errors.templatetype ? true : false}\r\n                error={errors.templatetype ? errors.templatetype.message : \"\"}\r\n                rules={{\r\n                  required: {\r\n                    value: true,\r\n                    message: \"Please select a template type.\",\r\n                  },\r\n                }}\r\n              />\r\n              <ShadowSelect\r\n                ref={sRef}\r\n                control={control}\r\n                items={signatureOptions}\r\n                name='signature'\r\n                label='Select signature '\r\n                placeholder='Select a signature'\r\n                onChange={(v) => {\r\n                  console.log(\"onChange fired\", v);\r\n                  const cs = signatures.find((s) => s._id === v);\r\n                  console.log(cs && !cs.smtp, getValues(\"templatetype\"));\r\n                  if (cs && !cs.smtp && getValues(\"templatetype\") === \"email\") {\r\n                    console.log(\"No Smtp found\");\r\n                    setAlertConfig({\r\n                      header: \"Attention!\",\r\n                      desc: \"Selected signature does not have an SMTP configured and cannot be used to send emails\",\r\n                      nolabel: \"Not Now\",\r\n                      yeslabel: \"Configure Now\",\r\n                      yes: async () => {\r\n                        if (cs.createdby !== user._id) {\r\n                          return;\r\n                        }\r\n                        await dispatch({\r\n                          type: events.SET_CURRENT_SIGNATURE,\r\n                          data: cs,\r\n                        });\r\n                        setEditSignature(true);\r\n                      },\r\n                      no: () => {\r\n                        setValue(\"signature\", \"\");\r\n                        trigger(\"signature\");\r\n                        onAlertClose();\r\n                      },\r\n                    });\r\n\r\n                    setIsAlertOpen(true);\r\n                    return;\r\n                  }\r\n                  setValue(\"signature\", v);\r\n                  trigger(\"signature\");\r\n                }}\r\n                invalid={errors.signature ? true : false}\r\n                error={errors.signature ? errors.signature.message : \"\"}\r\n                rules={{\r\n                  required: {\r\n                    value: true,\r\n                    message: \"Please select signature.\",\r\n                  },\r\n                }}\r\n              />\r\n            </HStack>\r\n            {getValues(\"templatetype\") === \"postcard\" ? (\r\n              <>\r\n                <HStack\r\n                  space={4}\r\n                  style={{\r\n                    width: vw(612),\r\n                    justifyContent: \"space-between\",\r\n                    // marginHorizontal: vw(20),\r\n                    marginVertical: vh(20),\r\n                    zIndex: 9999,\r\n                  }}\r\n                >\r\n                  <FormControl>\r\n                    <FormControl.Label>\r\n                      Select template style{\" \"}\r\n                    </FormControl.Label>\r\n                    <ScrollView horizontal width={\"94vw\"}>\r\n                      {[1, 2, 3, 4].map((s, idx) => (\r\n                        <Pressable\r\n                          key={\"t-\" + idx}\r\n                          onPress={() => {\r\n                            setTemplateStyle(s);\r\n                          }}\r\n                          style={{\r\n                            marginRight: vw(20),\r\n                          }}\r\n                        >\r\n                          <Center>\r\n                            {s === 1 && <Template1 />}\r\n                            {s === 2 && <Template2 />}\r\n                            {s === 3 && <Template3 />}\r\n                            {s === 4 && <Template4 />}\r\n                            <Text\r\n                              color={\r\n                                templateStyle === s ? Colors.primary : \"black\"\r\n                              }\r\n                              style={{\r\n                                fontFamily: \"Poppins\",\r\n                                fontSize: vw(13),\r\n                                marginTop: vh(10),\r\n                              }}\r\n                            >\r\n                              Style {s}\r\n                            </Text>\r\n                          </Center>\r\n                        </Pressable>\r\n                      ))}\r\n                    </ScrollView>\r\n                  </FormControl>\r\n                </HStack>\r\n                <HStack\r\n                  space={4}\r\n                  style={{\r\n                    width: sz === \"base\" || sz === \"sm\" ? \"94vw\" : vw(612),\r\n                    justifyContent: \"space-between\",\r\n                    // marginHorizontal: vw(20),\r\n                    marginBottom: vh(20),\r\n                    zIndex: 9999,\r\n                  }}\r\n                >\r\n                  <ShadowInput\r\n                    control={control}\r\n                    // multiline\r\n                    // numberOfLines={4}\r\n                    name='section_a'\r\n                    id='section_a'\r\n                    label={`Frontside heading (${secA}/34) `}\r\n                    placeholder='Enter frontside heading'\r\n                    setCharCount={setSecA}\r\n                    minLength={1}\r\n                    maxLength={34}\r\n                    invalid={errors.section_a ? true : false}\r\n                    error={errors.section_a ? errors.section_a.message : \"\"}\r\n                    rules={{\r\n                      required: {\r\n                        value: getValues(\"templatetype\") === \"postcard\",\r\n                        message: \"Please enter details.\",\r\n                      },\r\n                    }}\r\n                  />\r\n                </HStack>\r\n                <VStack\r\n                  style={{\r\n                    width: sz === \"base\" || sz === \"sm\" ? \"94vw\" : vw(612),\r\n                    marginTop: vh(20),\r\n                    marginBottom: vh(50),\r\n                    zIndex: 9999,\r\n                  }}\r\n                >\r\n                  {getValues(\"section_b\") !== \"\" && (\r\n                    <Pressable\r\n                      onPress={() => {\r\n                        setSecB(0);\r\n                        setValue(\"section_b\", \"\");\r\n                        trigger(\"section_b\");\r\n                      }}\r\n                      // leftIcon={<Ionicons name='trash' color='#4C7AD6' size={16} />}\r\n                      _text={{ color: \"#4C7AD6\" }}\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        right: 0,\r\n                        top: vh(5),\r\n                      }}\r\n                      bg='transparent'\r\n                    >\r\n                      <Text>Clear</Text>\r\n                    </Pressable>\r\n                  )}\r\n                  <ShadowInput\r\n                    control={control}\r\n                    multiline\r\n                    numberOfLines={2}\r\n                    name='section_b'\r\n                    id='section_b'\r\n                    label={`Frontside text (${secB}/169) `}\r\n                    placeholder='Enter frontside text'\r\n                    setCharCount={setSecB}\r\n                    minLength={1}\r\n                    maxLength={169}\r\n                    height={vh(80)}\r\n                    invalid={errors.section_b ? true : false}\r\n                    error={errors.section_b ? errors.section_b.message : \"\"}\r\n                    rules={{\r\n                      required: {\r\n                        value: getValues(\"templatetype\") === \"postcard\",\r\n                        message: \"Please enter details.\",\r\n                      },\r\n                    }}\r\n                  />\r\n                </VStack>\r\n                <VStack\r\n                  style={{\r\n                    width: sz === \"base\" || sz === \"sm\" ? \"94vw\" : vw(612),\r\n                    marginVertical: vh(30),\r\n                    zIndex: 9999,\r\n                  }}\r\n                >\r\n                  {getValues(\"section_c\") !== \"\" && (\r\n                    <Pressable\r\n                      onPress={() => {\r\n                        setSecC(0);\r\n                        setValue(\"section_c\", \"\");\r\n                        trigger(\"section_c\");\r\n                      }}\r\n                      // leftIcon={<Ionicons name='trash' color='#4C7AD6' size={16} />}\r\n                      _text={{ color: \"#4C7AD6\" }}\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        right: 0,\r\n                        top: vh(5),\r\n                      }}\r\n                      bg='transparent'\r\n                    >\r\n                      <Text>Clear</Text>\r\n                    </Pressable>\r\n                  )}\r\n                  <ShadowInput\r\n                    control={control}\r\n                    multiline\r\n                    numberOfLines={2}\r\n                    name='section_c'\r\n                    id='section_c'\r\n                    label={`Backside text (${secC}/88) `}\r\n                    placeholder='Enter backside text'\r\n                    minLength={1}\r\n                    maxLength={88}\r\n                    height={vh(70)}\r\n                    setCharCount={setSecC}\r\n                    invalid={errors.section_c ? true : false}\r\n                    error={errors.section_c ? errors.section_c.message : \"\"}\r\n                    rules={{\r\n                      required: {\r\n                        value: getValues(\"templatetype\") === \"postcard\",\r\n                        message: \"Please enter details.\",\r\n                      },\r\n                    }}\r\n                  />\r\n                </VStack>\r\n                <HStack\r\n                  space={4}\r\n                  style={{\r\n                    width: sz === \"base\" || sz === \"sm\" ? \"94vw\" : vw(612),\r\n                    justifyContent: \"space-between\",\r\n                    // marginHorizontal: vw(20),\r\n                    marginVertical: vh(40),\r\n                    zIndex: 9999,\r\n                  }}\r\n                >\r\n                  <VStack\r\n                    style={{\r\n                      width: sz === \"base\" || sz === \"sm\" ? \"45vw\" : vw(300),\r\n                      zIndex: 1,\r\n                    }}\r\n                  >\r\n                    <Center\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        right: 0,\r\n                        top: vh(5),\r\n                        zIndex: 2,\r\n                      }}\r\n                    >\r\n                      <Pressable\r\n                        onPress={() => {\r\n                          setShowPicker(!showPicker);\r\n                          setColorFor(\"p\");\r\n                        }}\r\n                      >\r\n                        <Text>Pick</Text>\r\n                      </Pressable>\r\n                    </Center>\r\n\r\n                    <ShadowInput\r\n                      control={control}\r\n                      isRequired\r\n                      name='primarycolor'\r\n                      id='primarycolor'\r\n                      label='Background Color '\r\n                      placeholder='#000000'\r\n                      maxLength={7}\r\n                      invalid={errors.primarycolor ? true : false}\r\n                      error={\r\n                        errors.primarycolor ? errors.primarycolor.message : \"\"\r\n                      }\r\n                      rightIcon={\r\n                        <Center marginRight={vw(10)}>\r\n                          <CircleIcon\r\n                            size={22}\r\n                            color={getValues(\"primarycolor\")}\r\n                          />\r\n                        </Center>\r\n                      }\r\n                      rules={{\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Please enter or pick background color.\",\r\n                        },\r\n                      }}\r\n                    />\r\n                  </VStack>\r\n\r\n                  <VStack\r\n                    style={{\r\n                      width: sz === \"base\" || sz === \"sm\" ? \"45vw\" : vw(300),\r\n                      zIndex: 1,\r\n                    }}\r\n                  >\r\n                    <Center\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        right: 0,\r\n                        top: vh(5),\r\n                        zIndex: 2,\r\n                      }}\r\n                    >\r\n                      <Pressable\r\n                        onPress={() => {\r\n                          setColorFor(\"f\");\r\n                          setShowPicker(!showPicker);\r\n                        }}\r\n                      >\r\n                        <Text>Pick</Text>\r\n                      </Pressable>\r\n                    </Center>\r\n                    <ShadowInput\r\n                      control={control}\r\n                      isRequired\r\n                      name='secondarycolor'\r\n                      id='secondarycolor'\r\n                      label='Font Color '\r\n                      placeholder='#000000'\r\n                      maxLength={7}\r\n                      invalid={errors.secondarycolor ? true : false}\r\n                      rightIcon={\r\n                        <Center marginRight={vw(10)}>\r\n                          <CircleIcon\r\n                            size={22}\r\n                            color={getValues(\"secondarycolor\")}\r\n                          />\r\n                        </Center>\r\n                      }\r\n                      error={\r\n                        errors.secondarycolor\r\n                          ? errors.secondarycolor.message\r\n                          : \"\"\r\n                      }\r\n                      rules={{\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Please enter or pick font color.\",\r\n                        },\r\n                      }}\r\n                    />\r\n                  </VStack>\r\n                </HStack>\r\n                <HStack\r\n                  space={4}\r\n                  style={{\r\n                    width: sz === \"base\" || sz === \"sm\" ? \"94vw\" : vw(300),\r\n                    justifyContent: \"space-between\",\r\n                    // marginHorizontal: vw(20),\r\n                    marginBottom: vh(20),\r\n                  }}\r\n                >\r\n                  <ShadowSelect\r\n                    control={control}\r\n                    items={fontOptions}\r\n                    name='fontfamily'\r\n                    id='fontfamily'\r\n                    label='Select a font '\r\n                    placeholder='Select a font'\r\n                    invalid={errors.fontfamily ? true : false}\r\n                    error={errors.fontfamily ? errors.fontfamily.message : \"\"}\r\n                    rules={{\r\n                      required: {\r\n                        value: getValues(\"templatetype\") === \"postcard\",\r\n                        message: \"Please select fontfamily.\",\r\n                      },\r\n                    }}\r\n                  />\r\n                </HStack>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <HStack\r\n                  space={4}\r\n                  style={{\r\n                    // width: sz === \"base\" || sz === \"sm\" ? \"94vw\" : vw(300),\r\n                    justifyContent: \"space-between\",\r\n                    // marginHorizontal: vw(20),\r\n                    marginBottom: vh(20),\r\n                    zIndex: 9999,\r\n                  }}\r\n                >\r\n                  <ShadowInput\r\n                    control={control}\r\n                    name='subject'\r\n                    id='subject'\r\n                    label={`Subject `}\r\n                    placeholder='Enter email subject'\r\n                    // setCharCount={setSecA}\r\n                    // minLength={1}\r\n                    // maxLength={34}\r\n                    invalid={errors.subject ? true : false}\r\n                    error={errors.subject ? errors.subject_a.message : \"\"}\r\n                    rules={{\r\n                      required: {\r\n                        value: true,\r\n                        message: \"Please enter email subject.\",\r\n                      },\r\n                    }}\r\n                  />\r\n                </HStack>\r\n                <VStack\r\n                  style={{\r\n                    // width: sz === \"base\" || sz === \"sm\" ? \"94vw\" : vw(300),\r\n                    marginTop: vh(20),\r\n                    marginBottom: vh(30),\r\n                    zIndex: 9999,\r\n                  }}\r\n                >\r\n                  {getValues(\"emailcontent\") !== \"\" && (\r\n                    <Pressable\r\n                      onPress={() => {\r\n                        setValue(\"emailcontent\", \"\");\r\n                        trigger(\"emailcontent\");\r\n                      }}\r\n                      // leftIcon={<Ionicons name='trash' color='#4C7AD6' size={16} />}\r\n                      _text={{ color: \"#4C7AD6\" }}\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        right: 0,\r\n                        top: vh(5),\r\n                        zIndex: 3,\r\n                      }}\r\n                      bg='transparent'\r\n                    >\r\n                      <Text>Clear</Text>\r\n                    </Pressable>\r\n                  )}\r\n                  <ShadowInput\r\n                    control={control}\r\n                    multiline\r\n                    numberOfLines={6}\r\n                    name='emailcontent'\r\n                    id='emailcontent'\r\n                    label={`Email Body `}\r\n                    placeholder='Enter email body'\r\n                    height={vh(300)}\r\n                    // setCharCount={setSecB}\r\n                    // minLength={1}\r\n                    // maxLength={169}\r\n                    invalid={errors.emailcontent ? true : false}\r\n                    error={\r\n                      errors.emailcontent ? errors.emailcontent.message : \"\"\r\n                    }\r\n                    rules={{\r\n                      required: {\r\n                        value: getValues(\"templatetype\") === \"email\",\r\n                        message: \"Please enter email body\",\r\n                      },\r\n                    }}\r\n                  />\r\n                </VStack>\r\n              </>\r\n            )}\r\n          </VStack>\r\n        </ShadowModal>\r\n      </VStack>\r\n\r\n      {showPicker && (\r\n        <ShadowModal\r\n          size={\"sm\"}\r\n          header={\"Pick Color\"}\r\n          isOpen={showPicker}\r\n          cancel={() => {\r\n            setShowPicker(false);\r\n          }}\r\n          buttons={\r\n            <ShadowButton\r\n              space={2}\r\n              variant='outline'\r\n              label={\"Close\"}\r\n              onPress={() => {\r\n                setShowPicker(false);\r\n              }}\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n          }\r\n        >\r\n          <Center>\r\n            <SketchPicker\r\n              color={pickerColor}\r\n              onChangeComplete={(color) => {\r\n                if (colorFor === \"p\") {\r\n                  setValue(\"primarycolor\", color.hex);\r\n                  trigger(\"primarycolor\");\r\n                } else {\r\n                  setValue(\"secondarycolor\", color.hex);\r\n                  trigger(\"secondarycolor\");\r\n                }\r\n              }}\r\n              onChange={(color) => {\r\n                setPickerColor(color);\r\n              }}\r\n            />\r\n          </Center>\r\n        </ShadowModal>\r\n      )}\r\n\r\n      <ShadowModal\r\n        size={\"md\"}\r\n        isOpen={isAlertOpen}\r\n        close={() => {\r\n          setIsAlertOpen(false);\r\n        }}\r\n        header={alertConfig.header}\r\n        buttons={\r\n          <HStack space={2}>\r\n            {alertConfig.yeslabel === \"\" ? (\r\n              <ShadowButton\r\n                space={4}\r\n                onPress={() => {\r\n                  setIsAlertOpen(false);\r\n                }}\r\n                color='rgba(0,0,0, 0.5)'\r\n                variant='outline'\r\n                label='Okay'\r\n                style={{\r\n                  height: vh(32),\r\n                }}\r\n              />\r\n            ) : (\r\n              <HStack space={2}>\r\n                <ShadowButton\r\n                  space={4}\r\n                  onPress={() => {\r\n                    setIsAlertOpen(false);\r\n                  }}\r\n                  color='rgba(0,0,0, 0.5)'\r\n                  variant='outline'\r\n                  label={alertConfig.nolabel}\r\n                  style={{\r\n                    height: vh(32),\r\n                  }}\r\n                />\r\n                <ShadowButton\r\n                  space={4}\r\n                  isLoading={isDeleting}\r\n                  onPress={alertConfig.yes}\r\n                  color='white'\r\n                  label={alertConfig.yeslabel}\r\n                  style={{\r\n                    height: vh(32),\r\n                  }}\r\n                />\r\n              </HStack>\r\n            )}\r\n          </HStack>\r\n        }\r\n      >\r\n        <Text\r\n          style={{\r\n            fontFamily: \"Poppins_medium\",\r\n            fontSize: vw(15),\r\n            color: \"rgba(0,0,0,0.8)\",\r\n          }}\r\n        >\r\n          {alertConfig.desc}\r\n        </Text>\r\n      </ShadowModal>\r\n      {editSignature && (\r\n        <AddSignature\r\n          isOpen={editSignature}\r\n          setIsOpen={setEditSignature}\r\n          _showAlert={_showAlert}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTemplate;\r\n","import React from \"react\";\r\n// import createDOMPurify from \"dompurify\";\r\n// import { JSDOM } from \"jsdom\";\r\n\r\n// const window = new JSDOM(\"\").window;\r\n// const DOMPurify = createDOMPurify(window);\r\n\r\nconst HtmlPreview = ({html}) => {\r\n  return (\r\n    <div>\r\n      {\r\n        <div\r\n          dangerouslySetInnerHTML={{ __html: html }}\r\n        />\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HtmlPreview;\r\n","import React, { useState } from \"react\";\r\nimport { VStack, Box, Button, HStack, Image, Text, Center } from \"native-base\";\r\n\r\nimport HtmlPreview from \"./HtmlPreview\";\r\nimport { CDN } from \"../../../constants/Config\";\r\nimport { vw, formatPhoneNumber } from \"../../../util\";\r\n\r\nconst Preview = ({ templateOption }) => {\r\n  const [side, setSide] = useState(\"f\");\r\n\r\n  if (!templateOption.signature) {\r\n    return null;\r\n  }\r\n\r\n  const name = templateOption.signature.name;\r\n  const email = templateOption.signature.email;\r\n  const phone = templateOption.signature.phone;\r\n  const logo = templateOption.signature.company_logo;\r\n  const photo = templateOption.signature.image;\r\n\r\n  const sid = templateOption.style_id && templateOption.style_id;\r\n  const sectiona = templateOption.section_a && templateOption.section_a;\r\n  const sectionb = templateOption.section_b && templateOption.section_b;\r\n  const sectionc = templateOption.section_c && templateOption.section_c;\r\n  const mls = templateOption.signature.disclosure;\r\n  const fontFamily = templateOption.fontfamily;\r\n  const color = templateOption.secondarycolor;\r\n  const bg = templateOption.primarycolor;\r\n  const propertyUri = `${CDN}/preview/property.jpg`;\r\n  const logoUri = `${CDN}/signatures/${logo}`;\r\n  const photoUri = `${CDN}/signatures/${photo}`;\r\n\r\n  return templateOption.templatetype === \"email\" ? (\r\n    <HtmlPreview html={templateOption.emailcontent} />\r\n  ) : (\r\n    <VStack\r\n      style={{\r\n        width: \"100%\",\r\n        marginVertical: vw(20),\r\n        backgroundColor: \"white\",\r\n      }}\r\n    >\r\n      <Box flex={1} style={{ justifyContent: \"flex-end\" }}>\r\n        <Button\r\n          onPress={() => {\r\n            setSide((s) => (s === \"f\" ? \"b\" : \"f\"));\r\n          }}\r\n          variant={\"unstyled\"}\r\n          my={1}\r\n          style={{ position: \"absolute\", right: 0 }}\r\n        >\r\n          {side === \"f\" ? \"Back Side\" : \"Front Side\"}\r\n        </Button>\r\n      </Box>\r\n      {side === \"f\" ? (\r\n        <VStack\r\n          style={{\r\n            width: \"100%\",\r\n            height: 200,\r\n            borderWidth: 0,\r\n            borderColor: \"#ccc\",\r\n          }}\r\n        >\r\n          {sid === 3 && (\r\n            <HStack\r\n              style={{\r\n                // bottom: sid === 1 || sid === 2 ? 0 : 200,\r\n                justifyContent: \"space-between\",\r\n                height: 60,\r\n              }}\r\n            >\r\n              {logo !== \"0\" && (\r\n                <Center style={{ width: 80, backgroundColor: bg }}>\r\n                  <Image\r\n                    resizeMethod='resize'\r\n                    style={{\r\n                      width: 80,\r\n                      height: 60,\r\n                      margin: 10,\r\n                      position: \"absolute\",\r\n                    }}\r\n                    source={{\r\n                      uri: logoUri,\r\n                    }}\r\n                  />\r\n                </Center>\r\n              )}\r\n              <VStack\r\n                style={{\r\n                  backgroundColor: bg,\r\n                  paddingHorizontal: 5,\r\n                  width: logo !== \"0\" ? \"79%\" : \"100%\",\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    fontFamily,\r\n                    color,\r\n                    fontSize: 13,\r\n                    // fontWeight: \"bold\",\r\n                  }}\r\n                >\r\n                  {sectiona}\r\n                </Text>\r\n                <Text\r\n                  style={{\r\n                    fontFamily,\r\n                    color,\r\n                    fontSize: 10,\r\n                    padding: 2,\r\n                    lineHeight: 11,\r\n                    flex: 1,\r\n                    flexWrap: \"wrap\",\r\n                  }}\r\n                >\r\n                  {sectionb}\r\n                </Text>\r\n              </VStack>\r\n            </HStack>\r\n          )}\r\n          {sid === 4 && (\r\n            <HStack\r\n              style={{\r\n                // bottom: sid === 1 || sid === 2 ? 0 : 200,\r\n                justifyContent: \"space-between\",\r\n                height: 60,\r\n              }}\r\n            >\r\n              <VStack\r\n                style={{\r\n                  backgroundColor: bg,\r\n                  paddingHorizontal: 5,\r\n                  width: logo !== \"0\" ? \"79%\" : \"100%\",\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    fontFamily,\r\n                    color,\r\n                    fontSize: 13,\r\n                    // fontWeight: \"bold\",\r\n                  }}\r\n                >\r\n                  {sectiona}\r\n                </Text>\r\n                <Text\r\n                  style={{\r\n                    fontFamily,\r\n                    color,\r\n                    fontSize: 10,\r\n                    padding: 2,\r\n                    lineHeight: 11,\r\n                    flex: 1,\r\n                    flexWrap: \"wrap\",\r\n                  }}\r\n                >\r\n                  {sectionb}\r\n                </Text>\r\n              </VStack>\r\n              {logo !== \"0\" && (\r\n                <Center style={{ width: 80, backgroundColor: bg }}>\r\n                  <Image\r\n                    resizeMethod='resize'\r\n                    style={{\r\n                      width: 80,\r\n                      height: 60,\r\n                      margin: 10,\r\n                      position: \"absolute\",\r\n                    }}\r\n                    source={{\r\n                      uri: logoUri,\r\n                    }}\r\n                  />\r\n                </Center>\r\n              )}\r\n            </HStack>\r\n          )}\r\n          <Center style={{ height: 140 }}>\r\n            <Image\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                position: \"absolute\",\r\n              }}\r\n              source={{\r\n                uri: propertyUri,\r\n              }}\r\n            />\r\n          </Center>\r\n          {sid === 1 && (\r\n            <HStack\r\n              style={{\r\n                // bottom: sid === 1 || sid === 2 ? 0 : 200,\r\n                justifyContent: \"space-between\",\r\n                height: 60,\r\n              }}\r\n            >\r\n              {logo !== \"0\" && (\r\n                <Center\r\n                  style={{ width: 80, backgroundColor: bg, borderWidth: 0 }}\r\n                >\r\n                  <Image\r\n                    resizeMethod='resize'\r\n                    style={{\r\n                      width: 80,\r\n                      height: 60,\r\n                      margin: 10,\r\n                      position: \"absolute\",\r\n                    }}\r\n                    source={{\r\n                      uri: logoUri,\r\n                    }}\r\n                  />\r\n                </Center>\r\n              )}\r\n              <VStack\r\n                style={{\r\n                  backgroundColor: bg,\r\n                  paddingHorizontal: 5,\r\n                  width: logo !== \"0\" ? \"79%\" : \"100%\",\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    fontFamily,\r\n                    color,\r\n                    fontSize: 13,\r\n                    // fontWeight: \"bold\",\r\n                  }}\r\n                >\r\n                  {sectiona}\r\n                </Text>\r\n                <Text\r\n                  style={{\r\n                    fontFamily,\r\n                    color,\r\n                    fontSize: 10,\r\n                    padding: 2,\r\n                    lineHeight: 11,\r\n                    flex: 1,\r\n                    flexWrap: \"wrap\",\r\n                  }}\r\n                >\r\n                  {sectionb}\r\n                </Text>\r\n              </VStack>\r\n            </HStack>\r\n          )}\r\n          {sid === 2 && (\r\n            <HStack\r\n              style={{\r\n                // bottom: sid === 1 || sid === 2 ? 0 : 200,\r\n                justifyContent: \"space-between\",\r\n                height: 60,\r\n              }}\r\n            >\r\n              <VStack\r\n                style={{\r\n                  backgroundColor: bg,\r\n                  paddingHorizontal: 5,\r\n                  width: logo !== \"0\" ? \"79%\" : \"100%\",\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    fontFamily,\r\n                    color,\r\n                    fontSize: 13,\r\n                    // fontWeight: \"bold\",\r\n                  }}\r\n                >\r\n                  {sectiona}\r\n                </Text>\r\n                <Text\r\n                  style={{\r\n                    fontFamily,\r\n                    color,\r\n                    fontSize: 10,\r\n                    padding: 2,\r\n                    lineHeight: 11,\r\n                    flex: 1,\r\n                    flexWrap: \"wrap\",\r\n                  }}\r\n                >\r\n                  {sectionb}\r\n                </Text>\r\n              </VStack>\r\n              {logo !== \"0\" && (\r\n                <Center style={{ width: 80, backgroundColor: bg }}>\r\n                  <Image\r\n                    resizeMethod='resize'\r\n                    style={{\r\n                      width: 80,\r\n                      height: 60,\r\n                      margin: 10,\r\n                      position: \"absolute\",\r\n                    }}\r\n                    source={{\r\n                      uri: logoUri,\r\n                    }}\r\n                  />\r\n                </Center>\r\n              )}\r\n            </HStack>\r\n          )}\r\n        </VStack>\r\n      ) : (\r\n        <HStack\r\n          space={2}\r\n          style={{\r\n            bottom: 0,\r\n            justifyContent: \"space-between\",\r\n            height: 200,\r\n            borderColor: \"#ccc\",\r\n            borderWidth: 1,\r\n          }}\r\n        >\r\n          <VStack\r\n            style={{\r\n              height: \"100%\",\r\n              backgroundColor: bg,\r\n              width: \"35%\",\r\n              padding: 2,\r\n            }}\r\n          >\r\n            {photo !== \"0\" && (\r\n              <Center style={{ width: \"100%\", backgroundColor: bg }}>\r\n                <Image\r\n                  style={{\r\n                    width: \"100%\",\r\n                    height: 100,\r\n                  }}\r\n                  source={{\r\n                    uri: photoUri,\r\n                  }}\r\n                />\r\n              </Center>\r\n            )}\r\n            <Box\r\n              style={{\r\n                borderWidth: 1,\r\n                borderColor: \"#ccc\",\r\n                backgroundColor: \"white\",\r\n                height: 40,\r\n                margin: 5,\r\n                borderRadius: 5,\r\n                flexDirection: \"row\",\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  lineHeight: 10,\r\n                  fontFamily,\r\n                  color: \"black\",\r\n                  fontSize: 8,\r\n                  flexWrap: \"wrap\",\r\n                  textAlign: \"center\",\r\n                  flex: 1,\r\n                }}\r\n              >\r\n                {sectionc}\r\n              </Text>\r\n            </Box>\r\n            <VStack style={{ marginTop: 5 }} space={1}>\r\n              <Text\r\n                style={{\r\n                  fontFamily,\r\n                  color,\r\n                  fontSize: 9,\r\n                  marginHorizontal: 10,\r\n                  lineHeight: 10,\r\n                  // fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                {name}\r\n              </Text>\r\n              <Text\r\n                style={{\r\n                  fontFamily,\r\n                  color,\r\n                  fontSize: 8,\r\n                  marginHorizontal: 10,\r\n                  lineHeight: 8,\r\n                }}\r\n              >\r\n                {formatPhoneNumber(phone)}\r\n              </Text>\r\n              <Text\r\n                style={{\r\n                  fontFamily,\r\n                  color,\r\n                  fontSize: 8,\r\n                  marginHorizontal: 10,\r\n                  lineHeight: 8,\r\n                }}\r\n              >\r\n                {email}\r\n              </Text>\r\n            </VStack>\r\n          </VStack>\r\n          <VStack style={{ height: \"100%\", width: \"65%\" }}>\r\n            <HStack style={{ justifyContent: \"space-between\" }}>\r\n              <Text\r\n                style={{\r\n                  lineHeight: 10,\r\n                  fontFamily,\r\n                  color: \"black\",\r\n                  fontSize: 8,\r\n                  flexWrap: \"wrap\",\r\n                  textAlign: \"center\",\r\n                  width: \"50%\",\r\n                  marginTop: 20,\r\n                }}\r\n              >\r\n                {\"MLS: \" + mls}\r\n              </Text>\r\n              {logo !== \"0\" && (\r\n                <Box\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    width: 80,\r\n                    top: 10,\r\n                    right: 20,\r\n                  }}\r\n                >\r\n                  <Image\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: 64,\r\n                    }}\r\n                    source={{\r\n                      uri: logoUri,\r\n                    }}\r\n                  />\r\n                </Box>\r\n              )}\r\n            </HStack>\r\n          </VStack>\r\n        </HStack>\r\n      )}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n","/**\r\n *\r\n * Templates List Screen\r\n * Author:Justin Antony\r\n * last modified on 04/nov/2021\r\n *\r\n */\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  Button,\r\n  Text,\r\n  FlatList,\r\n  Center,\r\n  useToast,\r\n  Spinner,\r\n  HStack,\r\n  Pressable,\r\n  VStack,\r\n  Hidden,\r\n} from \"native-base\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { vw, vh } from \"../../../util\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport * as signatureActions from \"../../../store/actions/signatures\";\r\nimport * as templateActions from \"../../../store/actions/templates\";\r\nimport VerticalItem from \"./VerticalItem\";\r\n// import NavListIcon from \"../../../components/svg/NavListIcon\";\r\n// import AddIcon from \"../../../components/svg/AddIcon\";\r\n// import AcreIcon from \"../../../components/svg/AcreIcon\";\r\nimport { getUser } from \"../../../constants/Config\";\r\nimport NavBar from \"../home/NavBar\";\r\nimport AddTemplate from \"./AddTemplate\";\r\nimport * as events from \"../../../store/events\";\r\nimport ShadowPagination from \"../../../components/ShadowPagination\";\r\nimport Preview from \"./Preview\";\r\nimport ShadowModal from \"../../../components/ShadowModal\";\r\nimport ShadowButton from \"../../../components/ShadowButton\";\r\n\r\nconst PageHeader = ({\r\n  listStyle,\r\n  setListStyle,\r\n  navigate,\r\n  setIsOpen,\r\n  dispatch,\r\n  _showAlert,\r\n  signatures,\r\n}) => {\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  return (\r\n    <VStack\r\n      style={{\r\n        marginTop: vh(-10),\r\n        marginHorizontal: vw(20),\r\n        borderBottomColor: \"rgba(0,0,0,0.15)\",\r\n        borderBottomWidth: 1,\r\n      }}\r\n    >\r\n      <HStack justifyContent={\"space-between\"}>\r\n        <Text\r\n          style={{\r\n            fontSize: vw(24),\r\n            paddingTop: vh(30),\r\n            width: vw(300),\r\n            color: \"#303030\",\r\n            fontFamily: \"Poppins_medium\",\r\n          }}\r\n        >\r\n          {\"Templates\"}\r\n        </Text>\r\n        <Hidden only={[\"sm\", \"base\"]}>\r\n          <HStack alignSelf={\"center\"}>\r\n            <Pressable\r\n              onPress={() => {\r\n                navigate(\"/campaigns\");\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  fontSize: vw(15),\r\n                  paddingTop: vh(40),\r\n                  paddingHorizontal: 10,\r\n                  color: \"#303030\",\r\n                  fontFamily: \"Poppins_medium\",\r\n                  marginHorizontal: vw(25),\r\n                  paddingBottom: vh(13),\r\n                  borderBottomWidth: vh(0),\r\n                  borderBottomColor: \"rgba(125, 43, 233, 1)\",\r\n                }}\r\n              >\r\n                Campaigns\r\n              </Text>\r\n            </Pressable>\r\n            <Pressable\r\n              onPress={() => {\r\n                navigate(\"/templates\");\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  fontSize: vw(15),\r\n                  paddingTop: vh(40),\r\n                  paddingHorizontal: 10,\r\n                  color: Colors.primary,\r\n                  fontFamily: \"Poppins_medium\",\r\n                  marginHorizontal: vw(25),\r\n                  paddingBottom: vh(13),\r\n                  borderBottomWidth: vh(4),\r\n                  borderBottomColor: \"rgba(125, 43, 233, 1)\",\r\n                }}\r\n              >\r\n                Templates\r\n              </Text>\r\n            </Pressable>\r\n            <Pressable\r\n              onPress={() => {\r\n                navigate(\"/signatures\");\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  fontSize: vw(15),\r\n                  paddingTop: vh(40),\r\n                  paddingHorizontal: 10,\r\n                  color: \"#303030\",\r\n                  fontFamily: \"Poppins_medium\",\r\n                  marginHorizontal: vw(25),\r\n                  paddingBottom: vh(13),\r\n                  borderBottomWidth: vh(0),\r\n                  borderBottomColor: \"rgba(125, 43, 233, 1)\",\r\n                }}\r\n              >\r\n                Signatures\r\n              </Text>\r\n            </Pressable>\r\n          </HStack>\r\n        </Hidden>\r\n        <HStack\r\n          style={{ marginTop: vh(20), width: vw(300) }}\r\n          alignItems={\"center\"}\r\n          justifyContent={\"flex-end\"}\r\n          space={2}\r\n        >\r\n          <ShadowButton\r\n            onPress={async () => {\r\n              if (signatures && signatures.length === 0) {\r\n                setIsAlertOpen(true);\r\n              } else {\r\n                try {\r\n                  await dispatch({\r\n                    type: events.SET_CURRENT_TEMPLATE,\r\n                    data: null,\r\n                  });\r\n                  setIsOpen(true);\r\n                } catch (err) {\r\n                  _showAlert(\"error\", err.message);\r\n                }\r\n              }\r\n            }}\r\n            label={\"+ Create\"}\r\n            style={{ height: vh(36) }}\r\n          />\r\n        </HStack>\r\n      </HStack>\r\n      <Hidden from='md'>\r\n        <HStack alignSelf={\"center\"}>\r\n          <Pressable\r\n            onPress={() => {\r\n              navigate(\"/campaigns\");\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontSize: vw(15),\r\n                paddingTop: vh(20),\r\n                paddingHorizontal: 10,\r\n                color: \"#303030\",\r\n                fontFamily: \"Poppins_medium\",\r\n                marginHorizontal: vw(10),\r\n                paddingBottom: vh(13),\r\n                borderBottomWidth: vh(0),\r\n                borderBottomColor: \"rgba(125, 43, 233, 1)\",\r\n              }}\r\n            >\r\n              Campaigns\r\n            </Text>\r\n          </Pressable>\r\n          <Pressable\r\n            onPress={() => {\r\n              navigate(\"/templates\");\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontSize: vw(15),\r\n                paddingTop: vh(20),\r\n                paddingHorizontal: 10,\r\n                color: Colors.primary,\r\n                fontFamily: \"Poppins_medium\",\r\n                marginHorizontal: vw(10),\r\n                paddingBottom: vh(13),\r\n                borderBottomWidth: vh(4),\r\n                borderBottomColor: \"rgba(125, 43, 233, 1)\",\r\n              }}\r\n            >\r\n              Templates\r\n            </Text>\r\n          </Pressable>\r\n          <Pressable\r\n            onPress={() => {\r\n              navigate(\"/signatures\");\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontSize: vw(15),\r\n                paddingTop: vh(20),\r\n                paddingHorizontal: 10,\r\n                color: \"#303030\",\r\n                fontFamily: \"Poppins_medium\",\r\n                marginHorizontal: vw(10),\r\n                paddingBottom: vh(13),\r\n                borderBottomWidth: vh(0),\r\n                borderBottomColor: \"rgba(125, 43, 233, 1)\",\r\n              }}\r\n            >\r\n              Signatures\r\n            </Text>\r\n          </Pressable>\r\n        </HStack>\r\n      </Hidden>\r\n      <ShadowModal\r\n        size='md'\r\n        isOpen={isAlertOpen}\r\n        header={\"Attention!\"}\r\n        close={() => {\r\n          setIsAlertOpen(false);\r\n        }}\r\n        buttons={\r\n          <>\r\n            <ShadowButton\r\n              space={2}\r\n              onPress={() => {\r\n                setIsAlertOpen(false);\r\n              }}\r\n              label='Cancel'\r\n              variant='outline'\r\n              color={Colors.primary}\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n            <ShadowButton\r\n              space={2}\r\n              onPress={() => {\r\n                navigate(\"/signatures\");\r\n              }}\r\n              label='Add Signature'\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n          </>\r\n        }\r\n      >\r\n        <Text\r\n          style={{\r\n            fontFamily: \"Poppins\",\r\n            fontSize: vw(15),\r\n            color: \"rgba(0,0,0,0.8)\",\r\n          }}\r\n        >\r\n          You need a signature to add a template\r\n        </Text>\r\n      </ShadowModal>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nconst Index = ({ user, setLogout }) => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const toast = useToast();\r\n  const [limit, setLimit] = useState(50);\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  // const onClose = () => setIsOpen(false);\r\n  const [listStyle, setListStyle] = useState(\"vertical\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isRefreshing, setIsRefreshing] = useState(false);\r\n  const [showPreview, setShowPreview] = useState(false);\r\n  const [refresh, setRefresh] = useState(false);\r\n  // const [error, setError] = useState();\r\n  const [page, setPage] = useState(1);\r\n  const {\r\n    userTemplates: templates,\r\n    // templateStyles,\r\n    total,\r\n  } = useSelector((state) => state.templates);\r\n  const signatures = useSelector((state) => state.signatures.userSignatures);\r\n\r\n  const [templateOption, setTemplateOptions] = useState({});\r\n  const profile = getUser();\r\n\r\n  const _showAlert = useCallback(\r\n    (status, msg) => {\r\n      toast.show({\r\n        placement: \"top\",\r\n        render: () => {\r\n          let bg = \"red.300\";\r\n          if (status === \"error\") {\r\n            bg = \"red.300\";\r\n          } else if (status === \"success\") {\r\n            bg = \"green.300\";\r\n          } else if (status === \"info\") {\r\n            bg = \"blueGray.300\";\r\n          } else if (status === \"warning\") {\r\n            bg = \"orange.300\";\r\n          }\r\n          return (\r\n            <Text\r\n              style={{\r\n                fontSize: vw(12),\r\n                fontFamily: \"Poppins_medium\",\r\n                color: \"#33214B\",\r\n              }}\r\n              p={2}\r\n              bg={bg}\r\n              rounded={\"full\"}\r\n            >\r\n              {msg}\r\n            </Text>\r\n          );\r\n        },\r\n      });\r\n    },\r\n    [toast]\r\n  );\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await dispatch(signatureActions.fetchSignatures(1, 1000));\r\n    })();\r\n  }, [dispatch]);\r\n\r\n  const loadTemplates = useCallback(async () => {\r\n    // setIsRefreshing(true);\r\n    try {\r\n      await dispatch(templateActions.fetchTemplates(page, limit));\r\n    } catch (err) {\r\n      _showAlert(\"error\", err.message);\r\n    }\r\n    // setIsRefreshing(false);\r\n  }, [dispatch, _showAlert, page, limit, refresh]);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    loadTemplates().then(() => {\r\n      setIsLoading(false);\r\n    });\r\n    return () => {\r\n      setIsLoading(false);\r\n      setIsRefreshing(false);\r\n    };\r\n  }, [dispatch, loadTemplates, refresh, page, limit]);\r\n\r\n  // if (error) {\r\n  //   console.log(error);\r\n  //   return (\r\n  //     <Center>\r\n  //       <Text>An error occurred!</Text>\r\n  //       <Button\r\n  //         style={{ color: Colors.primary, margin: 5, paddingHorizontal: 5 }}\r\n  //         onPress={loadTemplates}\r\n  //       >\r\n  //         <Text style={{ color: \"white\" }}>Try Again</Text>\r\n  //       </Button>\r\n  //     </Center>\r\n  //   );\r\n  // }\r\n\r\n  const NoItemsFound = () => {\r\n    return (\r\n      <Center mt={250} flex={1}>\r\n        <Text>No items found.</Text>\r\n      </Center>\r\n    );\r\n  };\r\n\r\n  const filteredTemplates = templates.filter(\r\n    (f) => f.createdby === profile._id\r\n  );\r\n\r\n  const ph = 100 - parseFloat(vh(70)) + \"vh\";\r\n\r\n  const cardwidth = 250;\r\n  let cols = Math.floor(window.screen.width / cardwidth);\r\n  if (cols === 0) {\r\n    cols = 1;\r\n  }\r\n\r\n  return (\r\n    <VStack minHeight={\"100vh\"} bg={\"white\"} flex={1}>\r\n      <NavBar user={user} setLogout={setLogout} />\r\n      <VStack height={ph}>\r\n        <PageHeader\r\n          navigate={navigate}\r\n          setListStyle={setListStyle}\r\n          listStyle={listStyle}\r\n          setIsOpen={setIsOpen}\r\n          dispatch={dispatch}\r\n          _showAlert={_showAlert}\r\n          signatures={signatures}\r\n        />\r\n        {isLoading ? (\r\n          <Center flex={1}>\r\n            <Spinner size={\"small\"} color={Colors.primary} />\r\n          </Center>\r\n        ) : (\r\n          <>\r\n            {cols === 1 ? (\r\n              <FlatList\r\n                key={\"list-\" + cols}\r\n                contentContainerStyle={{ paddingBottom: 20 }}\r\n                ListEmptyComponent={<NoItemsFound />}\r\n                // refreshing={isRefreshing}\r\n                removeClippedSubviews={true}\r\n                data={filteredTemplates}\r\n                keyExtractor={(item) => item._id}\r\n                renderItem={({ item }) => {\r\n                  return (\r\n                    <VerticalItem\r\n                      cols={cols}\r\n                      item={item}\r\n                      setIsOpen={setIsOpen}\r\n                      setShowPreview={setShowPreview}\r\n                      setTemplateOptions={setTemplateOptions}\r\n                    />\r\n                  );\r\n                }}\r\n              />\r\n            ) : (\r\n              <FlatList\r\n                key={\"list-\" + cols}\r\n                contentContainerStyle={{ paddingBottom: 20 }}\r\n                ListEmptyComponent={<NoItemsFound />}\r\n                // refreshing={isRefreshing}\r\n                removeClippedSubviews={true}\r\n                data={filteredTemplates}\r\n                keyExtractor={(item) => item._id}\r\n                renderItem={({ item }) => {\r\n                  return (\r\n                    <VerticalItem\r\n                      cols={cols}\r\n                      item={item}\r\n                      setIsOpen={setIsOpen}\r\n                      setShowPreview={setShowPreview}\r\n                      setTemplateOptions={setTemplateOptions}\r\n                    />\r\n                  );\r\n                }}\r\n                columnWrapperStyle={{\r\n                  justifyContent:\r\n                    filteredTemplates.length > 5\r\n                      ? \"space-between\"\r\n                      : \"flex-start\",\r\n                }}\r\n                numColumns={5}\r\n              />\r\n            )}\r\n            {total > limit && (\r\n              <ShadowPagination\r\n                limit={limit}\r\n                total={total}\r\n                page={page}\r\n                setPage={setPage}\r\n                setIsLoading={setIsLoading}\r\n                setLimit={setLimit}\r\n              />\r\n            )}\r\n          </>\r\n        )}\r\n        {isOpen && (\r\n          <AddTemplate\r\n            refresh={refresh}\r\n            setRefresh={setRefresh}\r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n          />\r\n        )}\r\n        {showPreview && (\r\n          <ShadowModal\r\n            size='md'\r\n            // height={450}\r\n            header={\"Preview\"}\r\n            isOpen={showPreview}\r\n            close={() => {\r\n              setShowPreview(false);\r\n            }}\r\n            // cancel={() => {\r\n            //   setShowPreview(false);\r\n            // }}\r\n            // width={vw(450)}\r\n            buttons={\r\n              <ShadowButton\r\n                space={2}\r\n                style={{ height: vh(36) }}\r\n                color={Colors.primary}\r\n                variant='outline'\r\n                label={\"Close\"}\r\n                onPress={() => {\r\n                  setShowPreview(false);\r\n                }}\r\n              />\r\n            }\r\n          >\r\n            <Preview templateOption={templateOption} />\r\n          </ShadowModal>\r\n        )}\r\n      </VStack>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"],"names":["props","xmlns","viewBox","width","height","G","fill","Path","d","opacity","stroke","strokeLinecap","strokeLinejoin","strokeWidth","vw","Util","vh","id","transform","Rect","rx","isEnd","item","setIsOpen","setShowPreview","setTemplateOptions","cols","dispatch","useDispatch","Pressable","onPress","type","events","data","VStack","style","boxShadow","marginHorizontal","marginVertical","borderRadius","flex","Center","backgroundColor","style_id","templatetype","EmailIcon","Text","marginTop","color","Colors","fontFamily","fontSize","textAlign","marginLeft","name","HStack","marginBottom","justifyContent","fontsList","isOpen","setRefresh","sRef","useRef","user","getUser","toast","useToast","useState","editSignature","setEditSignature","currentTemplate","useSelector","state","templates","sz","useBreakpointValue","base","sm","lg","md","xl","signatures","userSignatures","isLoading","setIsLoading","isSaving","setIsSaving","isDeleting","showPicker","setShowPicker","pickerColor","setPickerColor","colorFor","setColorFor","templateStyle","setTemplateStyle","onClose","React","isAlertOpen","setIsAlertOpen","onAlertClose","header","desc","nolabel","yeslabel","yes","no","alertConfig","setAlertConfig","section_a","length","secA","setSecA","section_b","secB","setSecB","section_c","secC","setSecC","signatureOptions","map","sign","label","value","_id","fontOptions","f","templatetypeOptions","useForm","mode","defaultValues","_","emailcontent","subject","primarycolor","secondarycolor","fontfamily","signature","includeinbody","control","handleSubmit","errors","formState","getValues","setValue","trigger","useEffect","saveHandler","_showAlert","useCallback","status","msg","show","placement","render","bg","p","rounded","postdata","cs","find","s","smtp","section_d","action","templateActions","message","deleteHandler","r","Spinner","size","mb","ShadowModal","close","save","Object","keys","buttons","space","ShadowButton","variant","background","campaigns","zoom","ShadowInput","isRequired","placeholder","invalid","error","rules","required","zIndex","ShadowSelect","items","onChange","v","console","log","ref","createdby","FormControl","ScrollView","horizontal","idx","marginRight","setCharCount","minLength","maxLength","_text","position","right","top","multiline","numberOfLines","rightIcon","Circle","subject_a","cancel","onChangeComplete","hex","AddSignature","html","dangerouslySetInnerHTML","__html","templateOption","side","setSide","email","phone","logo","company_logo","photo","image","sid","sectiona","sectionb","sectionc","mls","disclosure","propertyUri","CDN","logoUri","photoUri","Box","Button","my","borderWidth","borderColor","Image","resizeMethod","margin","source","uri","paddingHorizontal","padding","lineHeight","flexWrap","bottom","flexDirection","formatPhoneNumber","PageHeader","listStyle","setListStyle","navigate","borderBottomColor","borderBottomWidth","paddingTop","Hidden","only","alignSelf","paddingBottom","alignItems","from","setLogout","useNavigate","limit","setLimit","setIsRefreshing","showPreview","refresh","page","setPage","userTemplates","total","profile","signatureActions","loadTemplates","then","NoItemsFound","mt","filteredTemplates","filter","ph","parseFloat","Math","floor","window","screen","minHeight","NavBar","FlatList","contentContainerStyle","ListEmptyComponent","removeClippedSubviews","keyExtractor","renderItem","columnWrapperStyle","numColumns","ShadowPagination"],"sourceRoot":""}