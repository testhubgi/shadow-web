{"version":3,"file":"static/js/4220.20568b36.chunk.js","mappings":"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","sources":["pages/private/account/Analytics.js","pages/private/account/PageHeader.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { HStack, VStack, Text, Pressable, Box } from \"native-base\";\r\nimport moment from \"moment-timezone\";\r\nimport {\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  AreaChart,\r\n  Area,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport _ from \"lodash\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport PageHeader from \"./PageHeader\";\r\nimport { percentDiff, vh, vw } from \"../../../util\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport { API_URL } from \"../../../constants/Config\";\r\nimport { useRef } from \"react\";\r\n\r\nconst h = window.screen.height * (35 / 100);\r\n\r\nconst PlotChart = ({ type, range, id, role, fromdate, todate }) => {\r\n  const [chartData, setChartData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const result = await fetch(API_URL + \"/analytics/data\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            // Authorization: \"Bearer \" + token,\r\n          },\r\n          body: JSON.stringify({ type, range, id, role, fromdate, todate }),\r\n        });\r\n\r\n        const response = await result.json();\r\n        setChartData(response);\r\n        return response;\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n    };\r\n    (async () => {\r\n      await getData();\r\n    })();\r\n  }, [range, fromdate, todate, id, role, type]);\r\n\r\n  let label = \"\";\r\n  if (type === \"properties\") {\r\n    label = \"Properties Added\";\r\n  } else if (type === \"mailers\") {\r\n    label = \"Mails Sent\";\r\n  } else if (type === \"emails\") {\r\n    label = \"Emails Sent\";\r\n  } else if (type === \"investments\") {\r\n    label = \"Total Investments\";\r\n  } else if (type === \"milesdriven\") {\r\n    label = \"Miles Driven\";\r\n  } else if (type === \"timedriven\") {\r\n    label = \"Time Driven\";\r\n  }\r\n\r\n  const data = (chartData && chartData.data && chartData.data.data) || [];\r\n  const curr = chartData && chartData.data && chartData.data.curr;\r\n  const prev = chartData && chartData.data && chartData.data.prev;\r\n  // const percent = (chartData && chartData.data && chartData.data.percent) || 0;\r\n\r\n  const cdate = curr\r\n    ? moment(curr.start).format(\"MMM DD, YYYY\") +\r\n      \" - \" +\r\n      moment(curr.end).format(\"MMM DD, YYYY\")\r\n    : \"-\";\r\n  const pdate = prev\r\n    ? moment(prev.start).format(\"MMM DD, YYYY\") +\r\n      \" - \" +\r\n      moment(prev.end).format(\"MMM DD, YYYY\")\r\n    : \"-\";\r\n\r\n  let cTotal = (curr && curr.total) || 0;\r\n  let pTotal = (prev && prev.total) || 0;\r\n\r\n  let percent = 0;\r\n  if (cTotal === 0 || pTotal === 0) {\r\n    percent = 0;\r\n  } else if (cTotal !== pTotal) {\r\n    percent = percentDiff(pTotal, cTotal);\r\n  }\r\n\r\n  if (type === \"investments\") {\r\n    cTotal = cTotal.toFixed(2);\r\n    pTotal = pTotal.toFixed(2);\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      style={{\r\n        borderRadius: vw(10),\r\n        boxShadow: \"0px 3px 10px #0000001A\",\r\n        width: \"100%\",\r\n        height: h,\r\n        marginVertical: vh(20),\r\n        padding: vh(20),\r\n        backgroundColor: \"white\",\r\n      }}\r\n    >\r\n      <HStack\r\n        style={{ zIndex: -1, position: \"relative\" }}\r\n        justifyContent={\"space-between\"}\r\n      >\r\n        <Text\r\n          style={{\r\n            fontFamily: \"Poppins_medium\",\r\n            fontSize: vw(24),\r\n            color: \"#000000\",\r\n          }}\r\n        >\r\n          {label}\r\n        </Text>\r\n        <HStack justifyContent={\"flex-end\"}>\r\n          <Text\r\n            style={{\r\n              fontSize: 21,\r\n              marginTop: vh(-1),\r\n              fontFamily: \"Poppins_medium\",\r\n              color: percent >= 0 ? Colors.primary : \"rgba(0,0,0,0.8)\",\r\n            }}\r\n          >\r\n            {percent > 0\r\n              ? String.fromCharCode(8593)\r\n              : percent < 0\r\n              ? String.fromCharCode(8595)\r\n              : \"\"}\r\n          </Text>\r\n          <Text\r\n            style={{\r\n              fontSize: 24,\r\n              fontFamily: \"Poppins_medium\",\r\n              color: percent >= 0 ? Colors.primary : \"rgba(0,0,0,0.5)\",\r\n              marginLeft: vw(5),\r\n            }}\r\n          >\r\n            {percent + \"%\"}\r\n          </Text>\r\n        </HStack>\r\n      </HStack>\r\n      <HStack justifyContent={\"space-between\"}>\r\n        <Text\r\n          style={{\r\n            fontSize: vw(15),\r\n            fontFamily: \"Poppins_medium\",\r\n            color: Colors.primary,\r\n          }}\r\n        >\r\n          {cTotal}\r\n        </Text>\r\n        <Text\r\n          style={{\r\n            fontSize: vw(15),\r\n            fontFamily: \"Poppins_medium\",\r\n            color: \"rgba(0,0,0,0.5)\",\r\n          }}\r\n        >\r\n          {pTotal}\r\n        </Text>\r\n      </HStack>\r\n      <HStack\r\n        style={{ marginTop: vh(5), marginBottom: vh(10) }}\r\n        justifyContent={\"space-between\"}\r\n      >\r\n        <Text\r\n          style={{\r\n            fontSize: vw(13),\r\n            fontFamily: \"Poppins_medium\",\r\n            color: \"#919191\",\r\n          }}\r\n        >\r\n          {cdate}\r\n        </Text>\r\n        <Text\r\n          style={{\r\n            fontSize: vw(13),\r\n            fontFamily: \"Poppins_medium\",\r\n            color: \"#919191\",\r\n          }}\r\n        >\r\n          {pdate}\r\n        </Text>\r\n      </HStack>\r\n      <ResponsiveContainer width={\"100%\"} height={h - 130}>\r\n        <AreaChart\r\n          width={730}\r\n          height={550}\r\n          data={_.sortBy(\r\n            data.map((d) => {\r\n              if (type === \"investments\" && (d.curr || d.prev)) {\r\n                if (d.curr) {\r\n                  d.curr = parseFloat(d.curr).toFixed(2);\r\n                }\r\n                if (d.prev) {\r\n                  d.prev = parseFloat(d.prev).toFixed(2);\r\n                }\r\n              }\r\n              return d;\r\n            }),\r\n            \"date\"\r\n          )}\r\n          margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\r\n        >\r\n          <defs>\r\n            <linearGradient id='colorCurr' x1='0' y1='0' x2='0' y2='1'>\r\n              <stop offset='5%' stopColor={Colors.primary} stopOpacity={0.8} />\r\n              <stop offset='95%' stopColor={Colors.primary} stopOpacity={0} />\r\n            </linearGradient>\r\n            <linearGradient id='colorPrev' x1='0' y1='0' x2='0' y2='1'>\r\n              <stop offset='5%' stopColor='rgba(0,0,0,0.4)' stopOpacity={0.8} />\r\n              <stop offset='95%' stopColor='rgba(0,0,0,0.4)' stopOpacity={0} />\r\n            </linearGradient>\r\n          </defs>\r\n          <XAxis style={{ fontSize: vw(12) }} dataKey='date' />\r\n          <YAxis style={{ fontSize: vw(12) }} />\r\n          <CartesianGrid strokeDasharray='3 3' />\r\n          <Tooltip labelStyle={{ fontSize: vw(12) }} />\r\n          <Area\r\n            type='monotone'\r\n            dataKey='prev'\r\n            stroke='rgba(0,0,0,0.4)'\r\n            fillOpacity={1}\r\n            fill='url(#colorPrev)'\r\n          />\r\n          <Area\r\n            type='monotone'\r\n            dataKey='curr'\r\n            stroke={Colors.primary}\r\n            fillOpacity={1}\r\n            fill='url(#colorCurr)'\r\n          />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst Analytics = ({ profile }) => {\r\n  const dRef = useRef();\r\n  const [period, setPeriod] = useState(\"7d\");\r\n  const [fromDate, setFromDate] = useState(new Date());\r\n  const [toDate, setToDate] = useState(new Date());\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  // handle click outside\r\n  useEffect(() => {\r\n    function handleClickOutside(event) {\r\n      if (dRef.current && !dRef.current.contains(event.target)) {\r\n        // console.log(\"Click outside to close\");\r\n        setIsOpen(false);\r\n      }\r\n    }\r\n\r\n    // Bind the event listener\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      // Unbind the event listener on clean up\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [dRef]);\r\n\r\n  return (\r\n    <VStack>\r\n      <PageHeader\r\n        title='Analytics'\r\n        subtitle={\"Update your photo and personal details here\"}\r\n      />\r\n      <HStack\r\n        style={{\r\n          borderBottomColor: \"rgba(0,0,0, 0.15)\",\r\n          borderBottomWidth: vw(1.5),\r\n          justifyContent: \"space-between\",\r\n          zIndex: 9999,\r\n        }}\r\n      >\r\n        <HStack space={8}>\r\n          <Pressable\r\n            onPress={() => {\r\n              setPeriod(\"7d\");\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                color: period === \"7d\" ? Colors.primary : \"#666666\",\r\n                fontSize: vw(15),\r\n                fontFamily: \"Poppins_medium\",\r\n                paddingBottom: vh(15),\r\n                borderBottomColor: Colors.primary,\r\n                borderBottomWidth: period === \"7d\" ? vw(3) : 0,\r\n              }}\r\n            >\r\n              7 days\r\n            </Text>\r\n          </Pressable>\r\n          <Pressable\r\n            onPress={() => {\r\n              setPeriod(\"1m\");\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                color: period === \"1m\" ? Colors.primary : \"#666666\",\r\n                fontSize: vw(15),\r\n                fontFamily: \"Poppins_medium\",\r\n                paddingBottom: vh(15),\r\n                borderBottomColor: Colors.primary,\r\n                borderBottomWidth: period === \"1m\" ? vw(3) : 0,\r\n              }}\r\n            >\r\n              1 month\r\n            </Text>\r\n          </Pressable>\r\n          <Pressable\r\n            onPress={() => {\r\n              setPeriod(\"3m\");\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                color: period === \"3m\" ? Colors.primary : \"#666666\",\r\n                fontSize: vw(15),\r\n                fontFamily: \"Poppins_medium\",\r\n                paddingBottom: vh(15),\r\n                borderBottomColor: Colors.primary,\r\n                borderBottomWidth: period === \"3m\" ? vw(3) : 0,\r\n              }}\r\n            >\r\n              3 months\r\n            </Text>\r\n          </Pressable>\r\n          <Pressable\r\n            onPress={() => {\r\n              setPeriod(\"6m\");\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                color: period === \"6m\" ? Colors.primary : \"#666666\",\r\n                fontSize: vw(15),\r\n                fontFamily: \"Poppins_medium\",\r\n                paddingBottom: vh(15),\r\n                borderBottomColor: Colors.primary,\r\n                borderBottomWidth: period === \"6m\" ? vw(3) : 0,\r\n              }}\r\n            >\r\n              6 months\r\n            </Text>\r\n          </Pressable>\r\n          <Pressable\r\n            onPress={() => {\r\n              setPeriod(\"1y\");\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                color: period === \"1y\" ? Colors.primary : \"#666666\",\r\n                fontSize: vw(15),\r\n                fontFamily: \"Poppins_medium\",\r\n                paddingBottom: vh(15),\r\n                borderBottomColor: Colors.primary,\r\n                borderBottomWidth: period === \"1y\" ? vw(3) : 0,\r\n              }}\r\n            >\r\n              1 year\r\n            </Text>\r\n          </Pressable>\r\n        </HStack>\r\n        <VStack ref={dRef} zIndex={999}>\r\n          <Pressable\r\n            onPress={() => {\r\n              setPeriod(\"custom\");\r\n              setIsOpen((o) => !o);\r\n            }}\r\n            style={{\r\n              borderColor: \"rgba(0,0,0,0.15)\",\r\n              borderWidth: 1,\r\n              borderRadius: 100,\r\n              paddingHorizontal: vh(15),\r\n              marginTop: vh(-5),\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                color: period === \"custom\" ? Colors.primary : \"#666666\",\r\n                fontSize: vw(13),\r\n                fontFamily: \"Poppins_medium\",\r\n                lineHeight: vh(36),\r\n                height: vh(36),\r\n              }}\r\n            >\r\n              Custom Date\r\n            </Text>\r\n          </Pressable>\r\n          {isOpen && (\r\n            <HStack\r\n              space={8}\r\n              style={{\r\n                boxShadow: \"0px 3px 10px #0000001A\",\r\n                position: \"absolute\",\r\n                zIndex: 999999,\r\n                marginTop: 40,\r\n                justifyContent: \"flex-start\",\r\n                backgroundColor: \"white\",\r\n                width: vw(240),\r\n                padding: vw(10),\r\n                right: vw(0),\r\n                borderRadius: vw(10),\r\n                opacity: 1,\r\n              }}\r\n            >\r\n              <VStack space={1}>\r\n                <Text\r\n                  style={{\r\n                    fontFamily: \"Poppins\",\r\n                    fontSize: vw(13),\r\n                    color: \"rgba(0,0,0,0.15\",\r\n                    marginLeft: vw(10),\r\n                  }}\r\n                >\r\n                  From Date\r\n                </Text>\r\n                <DatePicker\r\n                  selected={fromDate ? fromDate : new Date()}\r\n                  onChange={(date) => {\r\n                    setFromDate(date);\r\n                  }}\r\n                  selectsStart\r\n                  startDate={fromDate ? fromDate : new Date()}\r\n                  endDate={toDate ? toDate : new Date()}\r\n                  minDate={new Date(profile.created)}\r\n                  maxDate={new Date()}\r\n                />\r\n              </VStack>\r\n              <VStack space={1}>\r\n                <Text\r\n                  style={{\r\n                    fontFamily: \"Poppins\",\r\n                    fontSize: vw(13),\r\n                    color: \"rgba(0,0,0,0.15\",\r\n                    marginLeft: vw(10),\r\n                  }}\r\n                >\r\n                  To Date\r\n                </Text>\r\n                <DatePicker\r\n                  selected={toDate ? toDate : new Date()}\r\n                  onChange={(date) => {\r\n                    setToDate(date);\r\n                  }}\r\n                  selectsEnd\r\n                  startDate={fromDate ? fromDate : new Date()}\r\n                  endDate={toDate ? toDate : new Date()}\r\n                  minDate={fromDate ? fromDate : new Date()}\r\n                  maxDate={new Date()}\r\n                />\r\n                {/* <ShadowButton\r\n                  onPress={() => {\r\n                    setFromDate()\r\n                  }}\r\n                  variant='outline'\r\n                  label='Clear Date Filter'\r\n                  color={Colors.primary}\r\n                  style={{ height: vh(32), right: vw(40) }}\r\n                /> */}\r\n              </VStack>\r\n            </HStack>\r\n          )}\r\n        </VStack>\r\n      </HStack>\r\n      <HStack justifyContent={\"space-between\"} flexWrap={\"wrap\"}>\r\n        {[\r\n          \"properties\",\r\n          \"mailers\",\r\n          \"emails\",\r\n          \"investments\",\r\n          \"milesdriven\",\r\n          \"timedriven\",\r\n        ].map((type) => {\r\n          return (\r\n            <PlotChart\r\n              key={\"chart-\" + type}\r\n              type={type}\r\n              range={period}\r\n              fromdate={moment(fromDate).format(\"YYYY-MM-DD\")}\r\n              todate={moment(toDate).format(\"YYYY-MM-DD\")}\r\n              id={profile.role === \"admin\" ? profile.team : profile._id}\r\n              role={profile.role}\r\n            />\r\n          );\r\n        })}\r\n      </HStack>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Analytics;\r\n","import React from \"react\";\r\nimport { HStack, VStack, Text } from \"native-base\";\r\nimport { vh, vw } from \"../../../util\";\r\n\r\nconst PageHeader = ({ title, subtitle, rightElement, noborder = false }) => {\r\n  let bottomBorder = {\r\n    borderBottomColor: \"rgba(0,0,0, 0.15)\",\r\n    borderBottomWidth: vw(1.5),\r\n    marginBottom: vh(20),\r\n  };\r\n  if (noborder) {\r\n    bottomBorder = {};\r\n  }\r\n  return (\r\n    <HStack\r\n      style={{ paddingBottom: vh(16), ...bottomBorder }}\r\n      justifyContent={\"space-between\"}\r\n    >\r\n      <VStack>\r\n        <Text\r\n          style={{\r\n            fontSize: vw(24),\r\n            color: \"#303030\",\r\n            fontFamily: \"Poppins_medium\",\r\n          }}\r\n        >\r\n          {title}\r\n        </Text>\r\n        <Text\r\n          style={{\r\n            fontSize: vw(13),\r\n            color: \"#666666\",\r\n            fontFamily: \"Poppins\",\r\n          }}\r\n        >\r\n          {subtitle}\r\n        </Text>\r\n      </VStack>\r\n      {rightElement}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n"],"names":["h","window","screen","height","PlotChart","type","range","id","role","fromdate","todate","useState","chartData","setChartData","useEffect","getData","fetch","API_URL","method","headers","body","JSON","stringify","result","json","response","console","log","message","label","data","curr","prev","cdate","moment","start","format","end","pdate","cTotal","total","pTotal","percent","percentDiff","toFixed","style","borderRadius","vw","boxShadow","width","marginVertical","vh","padding","backgroundColor","zIndex","position","justifyContent","fontFamily","fontSize","color","marginTop","Colors","String","fromCharCode","marginLeft","marginBottom","_","map","d","parseFloat","margin","top","right","left","bottom","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","strokeDasharray","labelStyle","stroke","fillOpacity","fill","profile","dRef","useRef","period","setPeriod","Date","fromDate","setFromDate","toDate","setToDate","isOpen","setIsOpen","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","title","subtitle","borderBottomColor","borderBottomWidth","space","onPress","paddingBottom","ref","o","borderColor","borderWidth","paddingHorizontal","lineHeight","opacity","selected","onChange","date","selectsStart","startDate","endDate","minDate","created","maxDate","selectsEnd","flexWrap","team","_id","rightElement","noborder","bottomBorder"],"sourceRoot":""}