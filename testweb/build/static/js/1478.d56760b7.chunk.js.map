{"version":3,"file":"static/js/1478.d56760b7.chunk.js","mappings":"kOAIQA,EAAWC,EAAAA,GAAAA,GAAPC,EAAOD,EAAAA,GAAAA,GAEbE,EAAkBC,EAAAA,YAAiB,SAACC,EAAOC,GAC/C,OAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,OACE,UAAC,KAAD,CACEC,UAAWL,EAAMM,MACjBC,OAAK,QACHC,OAAQX,EAAG,KACRG,EAAMO,OAJb,WAOE,SAAC,WAAD,CACEA,MAAO,CACLE,SAAUd,EAAG,IACbe,WAAY,iBACZC,MAAOX,EAAMM,MAAQ,UAAY,mBACjCM,WAAYjB,EAAG,IACfa,OAAQX,EAAG,IACXgB,WAAYhB,EAAG,IAPnB,SAUGM,EAAYH,EAAMc,MAAQ,MAG7B,SAAC,KAAD,CACEC,QAASf,EAAMe,QACfC,MAAOhB,EAAMgB,MACbC,KAAMjB,EAAMiB,KACZC,OAAQ,oBAAGC,MAASC,EAAZ,EAAYA,SAAkBC,GAA9B,EAAsBC,OAAtB,EAA8BD,OAA9B,OACN,SAAC,IAAD,WACE,SAAC,KAAD,CACEpB,IAAKA,EACLsB,SAAUvB,EAAMuB,SAChBC,aAAcxB,EAAMwB,cAAgB,MACpCC,UAAWzB,EAAMyB,YAAa,EAC9BC,KAAM1B,EAAM0B,MAAQ,OACpBC,QAAS,WACPvB,GAAa,EACd,EACDkB,OAAQ,WACQ,KAAVD,GAAiBA,GACnBjB,GAAa,EAEhB,EACDwB,WAAY5B,EAAM4B,WAClBC,aAAc,SAACR,GAAD,OAAWD,EAASC,EAApB,EACdA,MAAOA,GAAS,GAChBhB,UAAWL,EAAMM,MACjBwB,QAAS,aACTC,kBAAmB,cACnBC,oBAAqB,UACrBC,OAAQ,CACNC,kBAAmBvC,EAAG,KACtBwC,kBAAmBnC,EAAMM,MAAQ,UAAY,oBAE/C8B,OAAQ,CACNF,kBAAmBvC,EAAG,KACtBwC,kBAAmBnC,EAAMM,MAAQ,UAAY,oBAE/C+B,OAAQ,CAENC,YAAa,EACbf,SAAUvB,EAAMuB,UAAY,GAE9BgB,SAAU,CACR5B,MAAO,UACP6B,qBAAsB,UACtBN,kBAAmBvC,EAAG,KACtBwC,kBAAmB,WAErBM,KAAM,CACJjC,OAAQX,EAAG,IACX6C,MAAO/C,EAAGK,EAAM0C,OAAS,KACzBjC,SAAUd,EAAG,IACbe,WAAY,iBACZ4B,YAAa,EACbJ,kBAAmBvC,EAAG,KACtBwC,kBAAmB,qBAErBQ,iBAAkB3C,EAAM4C,UAAY,KACpCC,kBAAmB7C,EAAM8C,WAAa,KACtCC,YAAa5C,EAAY,GAAKH,EAAM+C,eArDlC,MA4Df,IAED,W","sources":["components/ShadowAuthInput.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Center, Input, FormControl } from \"native-base\";\r\nimport { Controller } from \"react-hook-form\";\r\nimport Util from \"../util\";\r\nconst { vw, vh } = Util;\r\n\r\nconst ShadowAuthInput = React.forwardRef((props, ref) => {\r\n  const [showLabel, setShowLabel] = useState(false);\r\n  return (\r\n    <FormControl\r\n      isInvalid={props.error}\r\n      style={{\r\n        height: vh(57),\r\n        ...props.style,\r\n      }}\r\n    >\r\n      <FormControl.Label\r\n        style={{\r\n          fontSize: vw(13),\r\n          fontFamily: \"Poppins_medium\",\r\n          color: props.error ? \"red.300\" : \"rgba(0,0,0, 0.5)\",\r\n          marginLeft: vw(49),\r\n          height: vh(19),\r\n          paddingTop: vh(8),\r\n        }}\r\n      >\r\n        {showLabel ? props.label : \"\"}\r\n      </FormControl.Label>\r\n\r\n      <Controller\r\n        control={props.control}\r\n        rules={props.rules}\r\n        name={props.name}\r\n        render={({ field: { onChange, onBlur, value } }) => (\r\n          <Center>\r\n            <Input\r\n              ref={ref}\r\n              tabIndex={props.tabIndex}\r\n              autoComplete={props.autoComplete || \"off\"}\r\n              autoFocus={props.autoFocus || false}\r\n              type={props.type || \"text\"}\r\n              onFocus={() => {\r\n                setShowLabel(true);\r\n              }}\r\n              onBlur={() => {\r\n                if (value === \"\" || !value) {\r\n                  setShowLabel(false);\r\n                }\r\n              }}\r\n              onKeyPress={props.onKeyPress}\r\n              onChangeText={(value) => onChange(value)}\r\n              value={value || \"\"}\r\n              isInvalid={props.error}\r\n              variant={\"underlined\"}\r\n              focusOutlineColor={\"transparent\"}\r\n              invalidOutlineColor={\"red.500\"}\r\n              _focus={{\r\n                borderBottomWidth: vw(1.5),\r\n                borderBottomColor: props.error ? \"red.500\" : \"rgba(0,0,0, 0.5)\",\r\n              }}\r\n              _hover={{\r\n                borderBottomWidth: vw(1.5),\r\n                borderBottomColor: props.error ? \"red.500\" : \"rgba(0,0,0, 0.5)\",\r\n              }}\r\n              _input={{\r\n                // color: \"rgba(0,0,0, 1)\",\r\n                borderWidth: 0,\r\n                tabIndex: props.tabIndex || 0,\r\n              }}\r\n              _invalid={{\r\n                color: \"red.500\",\r\n                placeholderTextColor: \"red.500\",\r\n                borderBottomWidth: vw(1.5),\r\n                borderBottomColor: \"red.500\",\r\n              }}\r\n              _web={{\r\n                height: vh(34),\r\n                width: vw(props.width || 320),\r\n                fontSize: vw(15),\r\n                fontFamily: \"Poppins_medium\",\r\n                borderWidth: 0,\r\n                borderBottomWidth: vw(1.5),\r\n                borderBottomColor: \"rgba(0,0,0, 0.15)\",\r\n              }}\r\n              InputLeftElement={props.leftIcon || null}\r\n              InputRightElement={props.rightIcon || null}\r\n              placeholder={showLabel ? \"\" : props.placeholder}\r\n            />\r\n          </Center>\r\n        )}\r\n      />\r\n    </FormControl>\r\n  );\r\n});\r\n\r\nexport default ShadowAuthInput;\r\n"],"names":["vw","Util","vh","ShadowAuthInput","React","props","ref","useState","showLabel","setShowLabel","isInvalid","error","style","height","fontSize","fontFamily","color","marginLeft","paddingTop","label","control","rules","name","render","field","onChange","value","onBlur","tabIndex","autoComplete","autoFocus","type","onFocus","onKeyPress","onChangeText","variant","focusOutlineColor","invalidOutlineColor","_focus","borderBottomWidth","borderBottomColor","_hover","_input","borderWidth","_invalid","placeholderTextColor","_web","width","InputLeftElement","leftIcon","InputRightElement","rightIcon","placeholder"],"sourceRoot":""}