{"version":3,"file":"static/js/9511.d539a198.chunk.js","mappings":"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","sources":["components/ShadowButton.js","components/ShadowInput.js","components/ShadowModal.js","components/svg/AddIcon.js","components/svg/CloseIcon.js","components/svg/EyeClosedIcon.js","pages/private/account/PageHeader.js","pages/private/account/ChangePassword.js","pages/private/account/Settings.js","pages/private/account/UserAvatar.js","pages/private/properties/Card.js","../node_modules/native-base/lib/module/components/primitives/Button/Button.tsx","../node_modules/native-base/lib/module/components/primitives/Button/ButtonGroup.tsx","../node_modules/native-base/lib/module/components/primitives/Button/index.tsx","../node_modules/native-base/lib/module/components/primitives/Image/index.tsx"],"sourcesContent":["import React, { useRef } from \"react\";\r\nimport { Button } from \"native-base\";\r\n\r\nimport { vw, vh } from \"../util\";\r\n\r\nconst ShadowButton = React.forwardRef((props, ref) => {\r\n  let dw = props.label.length * 10;\r\n  const space = props.space ? props.space * 10 : 10;\r\n  dw = dw + space;\r\n  return (\r\n    <Button\r\n      width={vw(dw || 100)}\r\n      rounded={\"full\"}\r\n      _text={{\r\n        color: props.variant ? \"rgba(0,0,0,0.5)\" : \"white\",\r\n        fontSize: vw(15),\r\n        fontFamily: \"Poppins\",\r\n      }}\r\n      _focus={{\r\n        height: vh(36),\r\n        width: vw(dw || 100),\r\n        _text: {\r\n          color: props.variant ? \"rgba(0,0,0,0.3)\" : \"white\",\r\n          fontFamily: \"Poppins\",\r\n          fontSize: vw(15),\r\n        },\r\n        _important: {\r\n          background:\r\n            \"transparent linear-gradient(124deg, rgba(186, 71, 243, 1) 0%, rgba(125, 43, 233, 1) 100%) 0% 0% no-repeat padding-box\",\r\n        },\r\n        background:\r\n          \"transparent linear-gradient(124deg, rgba(186, 71, 243, 1) 0%, rgba(125, 43, 233, 1) 100%) 0% 0% no-repeat padding-box\",\r\n        ...props._focus,\r\n      }}\r\n      _pressed={{\r\n        height: vh(36),\r\n        width: vw(dw || 100),\r\n        _text: {\r\n          color: props.variant ? \"rgba(0,0,0,0.3)\" : \"white\",\r\n          fontFamily: \"Poppins\",\r\n          fontSize: vw(15),\r\n        },\r\n        background: props.variant\r\n          ? \"white\"\r\n          : \"transparent linear-gradient(124deg, rgba(186, 71, 243, 1) 0%, rgba(125, 43, 233, 1) 100%) 0% 0% no-repeat padding-box\",\r\n        ...props._pressed,\r\n        // backgroundColor:\r\n        //   \"transparent linear-gradient(124deg, rgba(186, 71, 243, 1) 0%, rgba(125, 43, 233, 1) 100%) 0% 0% no-repeat padding-box\",\r\n      }}\r\n      size={\"md\"}\r\n      variant={\"unstyled\"}\r\n      {...props}\r\n      style={{\r\n        width: vw(dw || 100),\r\n        height: vh(36),\r\n        background: props.variant\r\n          ? \"white\"\r\n          : \"transparent linear-gradient(124deg, rgba(186, 71, 243, 1) 0%, rgba(125, 43, 233, 1) 100%) 0% 0% no-repeat padding-box\",\r\n        ...props.style,\r\n      }}\r\n    >\r\n      {props.label}\r\n    </Button>\r\n  );\r\n});\r\n\r\nexport default ShadowButton;\r\n","import React, { useState } from \"react\";\r\nimport { Input, FormControl } from \"native-base\";\r\nimport { Controller } from \"react-hook-form\";\r\nimport Util from \"../util\";\r\nconst { vw, vh } = Util;\r\n\r\nconst ShadowInput = React.forwardRef((props, ref) => {\r\n  return (\r\n    <FormControl\r\n      isRequired={props.isRequired}\r\n      isInvalid={props.invalid}\r\n      isReadOnly={props.isReadOnly || false}\r\n      style={{\r\n        height: vh(48),\r\n        ...props.style,\r\n      }}\r\n    >\r\n      {props.label && (\r\n        <FormControl.Label\r\n          style={{\r\n            fontSize: vw(13),\r\n            fontFamily: \"Poppins_medium\",\r\n            color: props.invalid ? \"red.500\" : \"rgba(102, 102, 102, 0.7)\",\r\n            height: vh(19),\r\n            ...props.labelstyle,\r\n          }}\r\n        >\r\n          {props.label}\r\n        </FormControl.Label>\r\n      )}\r\n\r\n      <Controller\r\n        control={props.control}\r\n        rules={props.rules}\r\n        name={props.name}\r\n        style={{\r\n          zIndex: 1,\r\n        }}\r\n        render={({ field: { onChange, onBlur, value } }) => (\r\n          <Input\r\n            isReadOnly={props.isReadOnly || false}\r\n            ref={ref}\r\n            size={props.size || \"lg\"}\r\n            multiline={props.multiline || false}\r\n            numberOfLines={props.numberOfLines || 1}\r\n            minLength={props.minLength || 1}\r\n            maxLength={props.maxLength || 255}\r\n            isInvalid={props.invalid}\r\n            autoComplete='off'\r\n            autoFocus={props.autoFocus || false}\r\n            type={props.type || \"text\"}\r\n            onSubmitEditing={props.onSubmitEditing}\r\n            onKeyPress={props.onKeyPress}\r\n            onChangeText={(value) => {\r\n              onChange(value);\r\n              if (props.onChangeText) {\r\n                props.onChangeText();\r\n              }\r\n            }}\r\n            value={value || \"\"}\r\n            variant={\"outline\"}\r\n            invalidOutlineColor={\"red.300\"}\r\n            focusOutlineColor={\"rgba(0, 0, 0, 0.15)\"}\r\n            _invalid={{\r\n              borderColor: \"red.300\",\r\n              borderWidth: \"1\",\r\n            }}\r\n            _light={{\r\n              borderWidth: \"1\",\r\n            }}\r\n            _dark={{\r\n              borderWidth: \"1\",\r\n            }}\r\n            _web={{\r\n              borderWidth: \"1\",\r\n            }}\r\n            style={{\r\n              fontSize: vw(15),\r\n              fontFamily: \"Poppins_medium\",\r\n              backgroundColor: \"white\",\r\n              zIndex: 1,\r\n              height: props.height || vh(36),\r\n            }}\r\n            InputLeftElement={props.leftIcon || null}\r\n            InputRightElement={props.rightIcon || null}\r\n            placeholder={props.placeholder}\r\n          />\r\n        )}\r\n      />\r\n      <FormControl.ErrorMessage style={{ marginTop: vh(-3) }}>\r\n        {props.error}\r\n      </FormControl.ErrorMessage>\r\n      <FormControl.HelperText style={{ marginTop: vh(-3) }}>\r\n        {props.help}\r\n      </FormControl.HelperText>\r\n    </FormControl>\r\n  );\r\n});\r\n\r\nexport default ShadowInput;\r\n","import React from \"react\";\r\nimport {\r\n  HStack,\r\n  Text,\r\n  Modal,\r\n  Pressable,\r\n  useBreakpointValue,\r\n  VStack,\r\n} from \"native-base\";\r\n\r\nimport ShadowButton from \"./ShadowButton\";\r\nimport CloseIcon from \"../components/svg/CloseIcon\";\r\n\r\nimport Util from \"../util\";\r\nconst { vw, vh } = Util;\r\n\r\nconst ShadowModal = React.forwardRef((props, ref) => {\r\n  const mw = useBreakpointValue({\r\n    base: \"90%\",\r\n    lg: 500,\r\n    xl: 500,\r\n    md: 500,\r\n    sm: \"90%\",\r\n  });\r\n\r\n  const styles = {\r\n    top: {\r\n      marginBottom: \"auto\",\r\n      marginTop: 100,\r\n    },\r\n    bottom: {\r\n      marginBottom: 5,\r\n      marginTop: \"auto\",\r\n    },\r\n    left: {\r\n      marginLeft: 0,\r\n      marginRight: \"auto\",\r\n    },\r\n    right: {\r\n      marginLeft: \"auto\",\r\n      marginRight: 0,\r\n    },\r\n    center: {},\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      size={props.size || \"full\"}\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      initialFocusRef={props.initialFocusRef}\r\n    >\r\n      <Modal.Content\r\n        style={{\r\n          ...props.style,\r\n          ...styles[props.placement || \"center\"],\r\n          borderRadius: vw(20),\r\n        }}\r\n      >\r\n        <Modal.Header\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            borderBottomWidth: 0,\r\n          }}\r\n        >\r\n          <HStack flex={1} justifyContent={\"space-between\"}>\r\n            <VStack style={{ width: \"80%\" }}>\r\n              <Text\r\n                style={{\r\n                  fontSize: vw(20),\r\n                  color: \"#303030\",\r\n                  fontFamily: \"Poppins_medium\",\r\n                }}\r\n              >\r\n                {props.header}\r\n              </Text>\r\n              {props.desc && (\r\n                <Text\r\n                  width={[\"60%\", \"100%\"]}\r\n                  style={{\r\n                    fontSize: vw(13),\r\n                    color: \"rgba(0,0,0, 0.5)\",\r\n                    fontFamily: \"Poppins\",\r\n                    flexWrap: \"wrap\",\r\n                    wordWrap: \"wrap\",\r\n                  }}\r\n                >\r\n                  {props.desc}\r\n                </Text>\r\n              )}\r\n            </VStack>\r\n\r\n            {props.close && (\r\n              <Pressable\r\n                zIndex={0}\r\n                onPress={props.close}\r\n                _focus={{\r\n                  width: vw(36),\r\n                  height: vh(36),\r\n                  marginTop: vh(-5),\r\n                  boxShadow: \"0px 2px 8px rgba(0, 0, 0, 0.1) !important\",\r\n                }}\r\n                style={{\r\n                  width: vw(36),\r\n                  height: vh(36),\r\n                  marginTop: vh(-5),\r\n                  boxShadow: \"0px 2px 8px rgba(0, 0, 0, 0.1)\",\r\n                }}\r\n                // shadow={2}\r\n                rounded={\"full\"}\r\n                justifyContent='center'\r\n                alignItems={\"center\"}\r\n              >\r\n                <CloseIcon />\r\n              </Pressable>\r\n            )}\r\n          </HStack>\r\n        </Modal.Header>\r\n        <Modal.Body\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            // width: props.width || mw,\r\n            // paddingHorizontal: vw(20),\r\n            minHeight: props.bodyHeight || vh(50),\r\n            // flex: 1,\r\n          }}\r\n        >\r\n          {props.children}\r\n        </Modal.Body>\r\n        {props.buttons && (\r\n          <Modal.Footer\r\n            paddingX={vw(40)}\r\n            borderTopWidth={0}\r\n            backgroundColor={\"white\"}\r\n            style={props.footerStyle}\r\n          >\r\n            {props.buttons ? (\r\n              props.buttons\r\n            ) : (\r\n              <>\r\n                <ShadowButton\r\n                  color='#7D2BE9'\r\n                  variant='outline'\r\n                  label={\"Cancel\"}\r\n                  onPress={props.cancel}\r\n                />\r\n                <ShadowButton\r\n                  label={\"Save\"}\r\n                  isLoading={props.isLoading}\r\n                  onPress={props.save}\r\n                />\r\n              </>\r\n            )}\r\n          </Modal.Footer>\r\n        )}\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n});\r\n\r\nexport default ShadowModal;\r\n","import * as React from \"react\"\r\nimport Svg, { Path } from \"react-native-svg\"\r\n\r\nconst AddIcon = ({fill, stroke}) => (\r\n  <Svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width={24} height={24} >\r\n    <Path data-name=\"Rectangle 37\" fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n    <Path\r\n      data-name=\"Path 10127\"\r\n      d=\"M17.1 12.52h-4.22v4.26H11.1v-4.26H6.9v-1.66h4.2V6.58h1.78v4.28h4.22Z\"\r\n      fill={fill || \"#fff\"}\r\n    />\r\n  </Svg>\r\n)\r\n\r\nexport default AddIcon\r\n","import * as React from \"react\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\n\r\nconst CloseIcon = ({ fill }) => (\r\n  <Svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    viewBox='0 0 24 24'\r\n    width={24}\r\n    height={24}\r\n  >\r\n    <Path data-name='Rectangle 391' fill='none' d='M0 0h24v24H0z' />\r\n    <Path\r\n      data-name='Path 10169'\r\n      d='M16.406 15.57a.318.318 0 0 1 .094.23.318.318 0 0 1-.094.234l-.891.867A.291.291 0 0 1 15.3 17a.318.318 0 0 1-.23-.094L12 13.836l-3.07 3.07a.291.291 0 0 1-.211.094.318.318 0 0 1-.234-.094l-.891-.867A.318.318 0 0 1 7.5 15.8a.318.318 0 0 1 .094-.234l3.094-3.066-3.094-3.047a.293.293 0 0 1 0-.469l.867-.891A.456.456 0 0 1 8.7 8a.318.318 0 0 1 .234.094L12 11.141l3.07-3.047A.456.456 0 0 1 15.3 8a.318.318 0 0 1 .234.094l.867.891a.27.27 0 0 1 0 .445l-3.088 3.047Z'\r\n      fill={fill || \"#303030\"}\r\n    />\r\n  </Svg>\r\n);\r\n\r\nexport default CloseIcon;\r\n","import * as React from \"react\"\r\nimport Svg, { Path } from \"react-native-svg\"\r\n\r\nconst EyeClosedIcon = (props) => (\r\n  <Svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width={24} height={24} {...props}>\r\n    <Path data-name=\"Rectangle 287\" fill={\"none\"} d=\"M0 0h24v24H0z\" />\r\n    <Path\r\n      data-name=\"Path 3977\"\r\n      d=\"M16.41 17.272a8.09 8.09 0 0 1-2.11.954 8.252 8.252 0 0 1-2.3.324 8.157 8.157 0 0 1-2.871-.513 8.1 8.1 0 0 1-2.434-1.418 8.287 8.287 0 0 1-1.814-2.146 8.373 8.373 0 0 1-1-2.673 8.17 8.17 0 0 1 .887-2.48 8.094 8.094 0 0 1 1.625-2.066L4.044 4.906l1.062-1.062 14.85 14.85-1.062 1.062ZM7.455 8.308A6.852 6.852 0 0 0 6.168 9.9a6.562 6.562 0 0 0-.747 1.9 6.611 6.611 0 0 0 1.368 2.79 6.678 6.678 0 0 0 2.479 1.881 6.666 6.666 0 0 0 3.06.572 6.687 6.687 0 0 0 2.993-.86l-1.521-1.53a3.277 3.277 0 0 1-1.426.5 3.42 3.42 0 0 1-1.485-.163 3.293 3.293 0 0 1-1.278-.8 3.293 3.293 0 0 1-.8-1.278 3.42 3.42 0 0 1-.167-1.485A3.342 3.342 0 0 1 9.138 10Zm5.229 5.238-2.43-2.43a1.8 1.8 0 0 0-.09 1.066 1.855 1.855 0 0 0 .513.941 1.855 1.855 0 0 0 .94.513 1.8 1.8 0 0 0 1.067-.09Zm5.922 1.7-1.071-1.08a6.6 6.6 0 0 0 1.044-2.366 6.668 6.668 0 0 0-1.125-2.475 6.667 6.667 0 0 0-2.012-1.832 6.691 6.691 0 0 0-2.569-.887 6.66 6.66 0 0 0-2.709.2L8.985 5.617A8.2 8.2 0 0 1 12 5.05a8.157 8.157 0 0 1 2.871.513 8.1 8.1 0 0 1 2.435 1.417 8.287 8.287 0 0 1 1.814 2.147 8.373 8.373 0 0 1 1 2.673 8.488 8.488 0 0 1-.562 1.809 8.41 8.41 0 0 1-.952 1.638Zm-6.813-6.812a3.331 3.331 0 0 1 1.4.211 3.332 3.332 0 0 1 1.193.769 3.332 3.332 0 0 1 .769 1.193 3.331 3.331 0 0 1 .212 1.4Z\"\r\n      opacity={0.5}\r\n    />\r\n  </Svg>\r\n)\r\n\r\nexport default EyeClosedIcon\r\n","import React from \"react\";\r\nimport { HStack, VStack, Text } from \"native-base\";\r\nimport { vh, vw } from \"../../../util\";\r\n\r\nconst PageHeader = ({ title, subtitle, rightElement, noborder = false }) => {\r\n  let bottomBorder = {\r\n    borderBottomColor: \"rgba(0,0,0, 0.15)\",\r\n    borderBottomWidth: vw(1.5),\r\n    marginBottom: vh(20),\r\n  };\r\n  if (noborder) {\r\n    bottomBorder = {};\r\n  }\r\n  return (\r\n    <HStack\r\n      style={{ paddingBottom: vh(16), ...bottomBorder }}\r\n      justifyContent={\"space-between\"}\r\n    >\r\n      <VStack>\r\n        <Text\r\n          style={{\r\n            fontSize: vw(24),\r\n            color: \"#303030\",\r\n            fontFamily: \"Poppins_medium\",\r\n          }}\r\n        >\r\n          {title}\r\n        </Text>\r\n        <Text\r\n          style={{\r\n            fontSize: vw(13),\r\n            color: \"#666666\",\r\n            fontFamily: \"Poppins\",\r\n          }}\r\n        >\r\n          {subtitle}\r\n        </Text>\r\n      </VStack>\r\n      {rightElement}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { HStack, Pressable, VStack } from \"native-base\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport ShadowModal from \"../../../components/ShadowModal\";\r\nimport ShadowButton from \"../../../components/ShadowButton\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport ShadowInput from \"../../../components/ShadowInput\";\r\nimport * as authActions from \"../../../store/actions/auth\";\r\nimport { vh, vw } from \"../../../util\";\r\nimport EyeClosedIcon from \"../../../components/svg/EyeClosedIcon\";\r\n\r\nconst ChangePassword = ({ _showAlert, profile, isOpen, setIsOpen }) => {\r\n  const fRef = useRef([]);\r\n  const dispatch = useDispatch();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showCurrentPassword, setShowCurrentPassword] = useState(false);\r\n  const [showNewPassword, setShowNewPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    getValues,\r\n    setValue,\r\n    trigger,\r\n    reset,\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n    defaultValues: {},\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (fRef.current && fRef.current[\"password\"]) {\r\n      fRef.current[\"password\"].focus();\r\n    }\r\n  }, [fRef]);\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      const action = authActions.updateProfile({\r\n        _id: profile._id,\r\n        // email: profile.email.trim(),\r\n        password: data.password.trim(),\r\n        newpassword: data.newpassword.trim(),\r\n        changePassword: true,\r\n      });\r\n\r\n      setIsLoading(true);\r\n      await dispatch(action);\r\n      setIsLoading(false);\r\n      _showAlert(\"success\", \"Password changed successfully.\");\r\n      setIsOpen(false);\r\n      reset();\r\n    } catch (err) {\r\n      _showAlert(\"error\", err.message);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack>\r\n      <ShadowModal\r\n        placement={\"top\"}\r\n        size='md'\r\n        ref={fRef.current[\"password\"]}\r\n        header='Change Password'\r\n        isOpen={isOpen}\r\n        close={() => {\r\n          reset();\r\n          setIsOpen(false);\r\n        }}\r\n        buttons={\r\n          <HStack space={2}>\r\n            <ShadowButton\r\n              space={2}\r\n              color={\"rgba(0,0,0, 0.5 )\"}\r\n              label='Cancel'\r\n              variant='outline'\r\n              onPress={() => {\r\n                reset();\r\n                setIsOpen(false);\r\n              }}\r\n            />\r\n            <ShadowButton\r\n              space={2}\r\n              isLoading={isLoading}\r\n              label='Change Password'\r\n              onPress={handleSubmit(onSubmit)}\r\n            />\r\n          </HStack>\r\n        }\r\n      >\r\n        <VStack\r\n          style={{ marginTop: vh(-20), }}\r\n        >\r\n          <HStack\r\n            style={{ marginVertical: vh(10) }}\r\n            justifyContent={\"space-between\"}\r\n          >\r\n            <ShadowInput\r\n              autoFocus\r\n              ref={(el) => (fRef.current[\"password\"] = el)}\r\n              onKeyPress={(e) => {\r\n                if (e.key === \"Tab\") {\r\n                  e.preventDefault();\r\n                  console.log(\"Tab\");\r\n                  fRef.current[\"newpassword\"].focus();\r\n                }\r\n              }}\r\n              isRequired\r\n              type={showCurrentPassword ? \"text\" : \"password\"}\r\n              name='password'\r\n              label={\"Current Password \"}\r\n              placeholder='Enter current password'\r\n              control={control}\r\n              rules={{\r\n                required: {\r\n                  value: true,\r\n                  message: \"Please enter your current password.\",\r\n                },\r\n              }}\r\n              invalid={errors.password ? true : false}\r\n              error={errors.password ? errors.password.message : \"\"}\r\n              inputStyle={{}}\r\n              rightIcon={\r\n                <Pressable\r\n                  onFocus={() => {\r\n                    console.log(\"Focused\");\r\n                  }}\r\n                  style={{\r\n                    marginRight: vw(5),\r\n                    backgroundColor: \"transparent\",\r\n                  }}\r\n                  onPress={() => {\r\n                    setShowCurrentPassword(!showCurrentPassword);\r\n                  }}\r\n                >\r\n                  <EyeClosedIcon />\r\n                </Pressable>\r\n              }\r\n            />\r\n          </HStack>\r\n          <HStack\r\n            style={{ marginVertical: vh(10) }}\r\n            justifyContent={\"space-between\"}\r\n          >\r\n            <ShadowInput\r\n              ref={(el) => (fRef.current[\"newpassword\"] = el)}\r\n              onKeyPress={(e) => {\r\n                if (e.key === \"Tab\") {\r\n                  e.preventDefault();\r\n                  console.log(\"Tab\");\r\n                  fRef.current[\"confirmpassword\"].focus();\r\n                }\r\n              }}\r\n              isRequired\r\n              type={showNewPassword ? \"text\" : \"password\"}\r\n              name='newpassword'\r\n              label={\"New Password \"}\r\n              placeholder='Enter new password'\r\n              control={control}\r\n              rules={{\r\n                required: {\r\n                  value: true,\r\n                  message: \"Please enter your new password.\",\r\n                },\r\n                minLength: {\r\n                  value: 8,\r\n                  message: \"New password must have at least 8 characters\",\r\n                },\r\n              }}\r\n              invalid={errors.newpassword ? true : false}\r\n              error={errors.newpassword ? errors.newpassword.message : \"\"}\r\n              inputStyle={{}}\r\n            />\r\n            <Pressable\r\n              onFocus={() => {\r\n                console.log(\"Focused\");\r\n              }}\r\n              style={{ marginTop: vh(30), padding: vw(5), marginLeft: vh(-50) }}\r\n              onPress={() => {\r\n                setShowNewPassword(!showNewPassword);\r\n              }}\r\n            >\r\n              <EyeClosedIcon />\r\n            </Pressable>\r\n          </HStack>\r\n          <HStack\r\n            style={{ marginVertical: vh(10) }}\r\n            justifyContent={\"space-between\"}\r\n          >\r\n            <ShadowInput\r\n              ref={(el) => (fRef.current[\"confirmpassword\"] = el)}\r\n              onKeyPress={(e) => {\r\n                if (e.key === \"Tab\") {\r\n                  e.preventDefault();\r\n                  setIsLoading(true);\r\n                  handleSubmit(onSubmit, () => {\r\n                    setIsLoading(false);\r\n                  })();\r\n                } else if (e.key === \"Enter\") {\r\n                  e.preventDefault();\r\n                  setIsLoading(true);\r\n                  handleSubmit(onSubmit, () => {\r\n                    setIsLoading(false);\r\n                  })();\r\n                }\r\n              }}\r\n              type={showConfirmPassword ? \"text\" : \"password\"}\r\n              isRequired\r\n              name='confirmpassword'\r\n              label={\"Confirm Password \"}\r\n              placeholder='Enter confirm password'\r\n              control={control}\r\n              rules={{\r\n                required: {\r\n                  value: true,\r\n                  message: \"Please enter confirm password.\",\r\n                },\r\n                validate: (value) =>\r\n                  value === getValues(\"newpassword\") ||\r\n                  \"Passwords do not match\",\r\n              }}\r\n              invalid={errors.confirmpassword ? true : false}\r\n              error={\r\n                errors.confirmpassword ? errors.confirmpassword.message : \"\"\r\n              }\r\n              inputStyle={{}}\r\n            />\r\n            <Pressable\r\n              onFocus={() => {\r\n                console.log(\"Focused\");\r\n              }}\r\n              style={{ marginTop: vh(30), padding: vw(5), marginLeft: vh(-50) }}\r\n              onPress={() => {\r\n                setShowConfirmPassword(!showConfirmPassword);\r\n              }}\r\n            >\r\n              <EyeClosedIcon />\r\n            </Pressable>\r\n          </HStack>\r\n        </VStack>\r\n      </ShadowModal>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","import React, { useState, useRef } from \"react\";\r\nimport {\r\n  Text,\r\n  HStack,\r\n  VStack,\r\n  Center,\r\n  Pressable,\r\n  Input,\r\n  Button,\r\n  Spinner,\r\n  Hidden,\r\n} from \"native-base\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport _ from \"lodash\";\r\n\r\nimport ShadowButton from \"../../../components/ShadowButton\";\r\nimport { vh, vw } from \"../../../util\";\r\nimport Card from \"../properties/Card\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport ShadowInput from \"../../../components/ShadowInput\";\r\nimport * as authActions from \"../../../store/actions/auth\";\r\nimport ChangePassword from \"./ChangePassword\";\r\nimport moment from \"moment-timezone\";\r\nimport { getUser, API_URL } from \"../../../constants/Config\";\r\nimport PageHeader from \"./PageHeader\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport * as propertiesActions from \"../../../store/actions/properties\";\r\nimport UserAvatar from \"./UserAvatar\";\r\n\r\nconst AddTag = ({ _showAlert }) => {\r\n  const tRef = useRef();\r\n  const dispatch = useDispatch();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const {\r\n    handleSubmit,\r\n    formState: { errors },\r\n    getValues,\r\n    setValue,\r\n    trigger,\r\n    reset,    \r\n  } = useForm({\r\n    mode: \"onChange\",\r\n    defaultValues: { tag: \"\" },\r\n  });\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      const action = propertiesActions.savePropertyTag({\r\n        name: data.tag,\r\n        default: false,\r\n      });\r\n      setIsLoading(true);\r\n      await dispatch(action);\r\n      await dispatch(propertiesActions.fetchTags());\r\n      setIsLoading(false);\r\n      _showAlert(\"success\", \"Tag created successfully.\");\r\n      setValue(\"tag\", \"\");\r\n      reset();\r\n      tRef.current.value = \"\";\r\n    } catch (err) {\r\n      _showAlert(\"error\", err.message);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <HStack\r\n      style={{\r\n        borderWidth: vw(1.5),\r\n        borderColor: \"#E6E6E6\",\r\n        width: vw(220),\r\n        height: vh(36),\r\n        justifyContent: \"space-between\",\r\n        borderRadius: 5,\r\n      }}\r\n    >\r\n      <Input\r\n        ref={tRef}\r\n        autoComplete='off'\r\n        placeholder='Add tag'\r\n        variant={\"unstyled\"}\r\n        onChangeText={(v) => {\r\n          setValue(\"tag\", v);\r\n          trigger(\"tag\");\r\n        }}\r\n        onSubmitEditing={() => {\r\n          handleSubmit(onSubmit)();\r\n        }}\r\n      />\r\n      <Button\r\n        style={{}}\r\n        isLoading={isLoading}\r\n        variant='unstyled'\r\n        onPress={handleSubmit(onSubmit)}\r\n      >\r\n        <Text\r\n          style={{\r\n            fontFamily: \"Poppins_medium\",\r\n            fontSize: vw(13),\r\n            color: getValues(\"tag\") ? Colors.primary : \"rgba(0,0,0, 0.5)\",\r\n            textTransform: \"uppercase\",\r\n            textAlign: \"right\",\r\n          }}\r\n        >\r\n          Add\r\n        </Text>\r\n      </Button>\r\n    </HStack>\r\n  );\r\n};\r\n\r\nconst Settings = ({ _showAlert, profile, tags }) => {\r\n  const uRef = useRef();\r\n  const dispatch = useDispatch();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [progress, setProgress] = useState(0);\r\n  const [edit, setEdit] = useState(false);\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n    defaultValues: {\r\n      firstname: profile.firstname,\r\n      lastname: profile.lastname,\r\n      email: profile.email,\r\n    },\r\n  });\r\n\r\n  const user = getUser();\r\n  if (!user) {\r\n    return <></>;\r\n  }\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const action = authActions.updateProfile({\r\n        _id: profile._id,\r\n        email: data.email.trim(),\r\n        firstname: data.firstname.trim(),\r\n        lastname: data.lastname.trim(),\r\n      });\r\n      await dispatch(action);\r\n      setIsLoading(false);\r\n      _showAlert(\"success\", \"Profile updated successfully.\");\r\n      setEdit(false);\r\n    } catch (err) {\r\n      _showAlert(\"error\", err.message);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const onChangeHandler = async () => {\r\n    const { token, _id } = getUser();\r\n    // var file = uploadFile.current.files[0];\r\n    setProgress(0);\r\n    setIsUploading(true);\r\n    for (const file of uRef.current.files) {\r\n      // Allowed types\r\n      var mime_types = [\"image/jpeg\", \"image/jpg\", \"image/png\"];\r\n\r\n      // Validate MIME type\r\n      if (mime_types.indexOf(file.type) === -1) {\r\n        _showAlert(\"error\", \"Only jpg or png files are allowed.\");\r\n        setIsUploading(false);\r\n        return;\r\n      }\r\n\r\n      // Max 2 Mb allowed\r\n      if (file.size > 2000 * 1024 * 1024) {\r\n        _showAlert(\"error\", \"File size should be less than 2MB.\");\r\n        setIsUploading(false);\r\n        return;\r\n      }\r\n\r\n      var data = new FormData();\r\n\r\n      var request = new XMLHttpRequest();\r\n\r\n      data.append(\"_id\", _id);\r\n      //   data.append(\"default\", true);\r\n      data.append(\"picture\", file);\r\n\r\n      // AJAX request finished\r\n      request.addEventListener(\"load\", function (e) {\r\n        setIsUploading(false);\r\n      });\r\n\r\n      // Upload progress on request.upload\r\n      request.upload.addEventListener(\"progress\", function (e) {\r\n        var completed = (e.loaded / e.total) * 100;\r\n        setProgress(completed);\r\n        // setImageLoading(true);\r\n      });\r\n\r\n      request.onreadystatechange = async function () {\r\n        if (this.readyState === 4 && this.status === 200) {\r\n          const result = JSON.parse(this.responseText);\r\n          if (result.success) {\r\n            // setImgId(result.data.id);\r\n            // props.setPath(result.data.id);\r\n            // setImages(result.data.pics);\r\n            await dispatch(authActions.getProfile());\r\n          }\r\n          setIsUploading(false);\r\n        } else {\r\n          if (this.status > 200) {\r\n            console.log(\"ON-ERROR\", this.readyState, this.status);\r\n            console.log(this.responseText);\r\n            setIsUploading(false);\r\n          }\r\n          // throw new Error(\"something went wrong\");\r\n        }\r\n      };\r\n      // If server is sending a JSON response then set JSON response type\r\n      request.responseType = \"text\";\r\n\r\n      // Send POST request to the server side script\r\n      request.open(\"POST\", `${API_URL}/users/upload/picture`, true);\r\n      request.setRequestHeader(\"Authorization\", \"Bearer \" + token);\r\n      request.send(data);\r\n    }\r\n    uRef.current.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <VStack style={{ backgroundColor: \"#F7F8FA\" }}>\r\n      <PageHeader\r\n        title='Profile'\r\n        subtitle={\"Update your photo and personal details here\"}\r\n      />\r\n      <Hidden only={[\"sm\", \"base\"]}>\r\n        <HStack space={8} justifyContent='flex-start'>\r\n          <Card\r\n            style={{ marginBottom: vh(20), width: \"60%\" }}\r\n            title={\"Personal Information\"}\r\n            rightElement={\r\n              <ShadowButton\r\n                fontSize={vw(13)}\r\n                style={{\r\n                  height: vh(32),\r\n                  minWidth: vw(75),\r\n                  borderColor: \"#00000026\",\r\n                }}\r\n                color={\"#666666\"}\r\n                variant='outline'\r\n                label='EDIT'\r\n                onPress={() => {\r\n                  setEdit(!edit);\r\n                }}\r\n              />\r\n            }\r\n          >\r\n            <VStack\r\n              style={{ zoom: \"90%\", width: \"100%\" }}\r\n              mb={4}\r\n              justifyContent={\"center\"}\r\n            >\r\n              {edit ? (\r\n                <>\r\n                  <HStack\r\n                    space={4}\r\n                    style={{\r\n                      width: \"100%\",\r\n                      justifyContent: \"space-between\",\r\n                      // marginHorizontal: vw(10),\r\n                      marginVertical: vh(20),\r\n                    }}\r\n                  >\r\n                    <ShadowInput\r\n                      isRequired\r\n                      control={control}\r\n                      name='firstname'\r\n                      label='First Name '\r\n                      labelstyle={{\r\n                        fontSize: vw(15),\r\n                        color: errors.firstname ? \"red.500\" : \"#303030\",\r\n                      }}\r\n                      placeholder='First Name'\r\n                      invalid={errors.firstname ? true : false}\r\n                      error={errors.firstname ? errors.firstname.message : \"\"}\r\n                      rules={{\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Please enter firstname.\",\r\n                        },\r\n                        maxLength: {\r\n                          value: 100,\r\n                          message:\r\n                            \"Firstname cannot be more than 100 characters.\",\r\n                        },\r\n                      }}\r\n                      style={{ width: \"48%\" }}\r\n                    />\r\n                    <ShadowInput\r\n                      isRequired\r\n                      control={control}\r\n                      name='lastname'\r\n                      label='Last Name '\r\n                      placeholder='Last Name'\r\n                      invalid={errors.lastname ? true : false}\r\n                      error={errors.lastname ? errors.lastname.message : \"\"}\r\n                      rules={{\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Please enter lastname.\",\r\n                        },\r\n                        maxLength: {\r\n                          value: 100,\r\n                          message:\r\n                            \"Lastname cannot be more than 100 characters.\",\r\n                        },\r\n                      }}\r\n                      style={{ width: \"48%\" }}\r\n                    />\r\n                  </HStack>\r\n                  <HStack\r\n                    space={4}\r\n                    style={{\r\n                      // width: vw(370),\r\n                      justifyContent: \"space-betwee0n\",\r\n                      // marginHorizontal: vw(20),\r\n                      marginVertical: vh(20),\r\n                    }}\r\n                  >\r\n                    <ShadowInput\r\n                      isRequired\r\n                      control={control}\r\n                      labelStyle={{\r\n                        fontSize: vw(15),\r\n                        color: errors.email ? \"red.500\" : \"#303030\",\r\n                      }}\r\n                      name='email'\r\n                      label='Email '\r\n                      placeholder='Enter your email'\r\n                      invalid={errors.email ? true : false}\r\n                      error={errors.email ? errors.email.message : \"\"}\r\n                      rules={{\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Please enter your email.\",\r\n                        },\r\n                      }}\r\n                    />\r\n                  </HStack>\r\n                  <HStack space={4} justifyContent={\"center\"}>\r\n                    <ShadowButton\r\n                      fontSize={vw(13)}\r\n                      style={{\r\n                        height: vh(36),\r\n                        minWidth: vw(80),\r\n                        borderColor: \"#00000026\",\r\n                        marginTop: vh(20),\r\n                      }}\r\n                      color={\"#666666\"}\r\n                      variant='outline'\r\n                      label='Cancel'\r\n                      onPress={() => {\r\n                        setEdit(!edit);\r\n                      }}\r\n                    />\r\n                    <ShadowButton\r\n                      isLoading={isLoading}\r\n                      fontSize={vw(13)}\r\n                      style={{\r\n                        height: vh(36),\r\n                        minWidth: vw(80),\r\n                        borderColor: \"#00000026\",\r\n                        marginTop: vh(20),\r\n                      }}\r\n                      label='Save'\r\n                      onPress={() => {\r\n                        handleSubmit(onSubmit)();\r\n                      }}\r\n                    />\r\n                  </HStack>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <HStack\r\n                    space={4}\r\n                    style={{\r\n                      // width: vw(370),\r\n                      justifyContent: \"space-between\",\r\n                      // marginHorizontal: vw(20),\r\n                      marginVertical: vh(20),\r\n                    }}\r\n                  >\r\n                    <VStack space={2}>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: vw(15),\r\n                          fontFamily: \"Poppins\",\r\n                          color: \"#303030\",\r\n                          height: vh(19),\r\n                        }}\r\n                      >\r\n                        First Name\r\n                      </Text>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: vw(15),\r\n                          fontFamily: \"Poppins_medium\",\r\n                          color: \"#303030\",\r\n                          height: vh(19),\r\n                        }}\r\n                      >\r\n                        {profile.firstname}\r\n                      </Text>\r\n                    </VStack>\r\n                    <VStack space={2}>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: vw(15),\r\n                          fontFamily: \"Poppins\",\r\n                          color: \"#303030\",\r\n                          height: vh(19),\r\n                        }}\r\n                      >\r\n                        Last Name\r\n                      </Text>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: vw(15),\r\n                          fontFamily: \"Poppins_medium\",\r\n                          color: \"#303030\",\r\n                          height: vh(19),\r\n                        }}\r\n                      >\r\n                        {profile.lastname}\r\n                      </Text>\r\n                    </VStack>\r\n                  </HStack>\r\n                  <HStack\r\n                    space={4}\r\n                    style={{\r\n                      // width: vw(370),\r\n                      justifyContent: \"space-between\",\r\n                      // marginHorizontal: vw(20),\r\n                      marginVertical: vh(20),\r\n                    }}\r\n                  >\r\n                    <VStack space={2}>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: vw(15),\r\n                          fontFamily: \"Poppins\",\r\n                          color: \"#303030\",\r\n                          height: vh(19),\r\n                        }}\r\n                      >\r\n                        Email\r\n                      </Text>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: vw(15),\r\n                          fontFamily: \"Poppins_medium\",\r\n                          color: \"#303030\",\r\n                          height: vh(19),\r\n                        }}\r\n                      >\r\n                        {profile.email}\r\n                      </Text>\r\n                    </VStack>\r\n                  </HStack>\r\n                </>\r\n              )}\r\n              <HStack\r\n                space={4}\r\n                style={{\r\n                  // width: vw(370),\r\n                  justifyContent: \"space-between\",\r\n                  // marginHorizontal: vw(20),\r\n                  marginVertical: vh(20),\r\n                }}\r\n              >\r\n                <VStack>\r\n                  <Text\r\n                    style={{\r\n                      fontSize: vw(15),\r\n                      fontFamily: \"Poppins_medium\",\r\n                      color: \"#303030\",\r\n                      height: vh(19),\r\n                    }}\r\n                  >\r\n                    Password\r\n                  </Text>\r\n                  <Text\r\n                    style={{\r\n                      fontSize: vw(13),\r\n                      fontFamily: \"Poppins\",\r\n                      color: \"#919191\",\r\n                      height: vh(19),\r\n                      marginTop: vh(5),\r\n                    }}\r\n                  >\r\n                    Last changed{\" \"}\r\n                    {profile.passwordupdated\r\n                      ? moment(profile.passwordupdated).format(\"DD MMM, YYYY\")\r\n                      : moment(profile.created).format(\"DD MMM, YYYY\")}\r\n                  </Text>\r\n                </VStack>\r\n                <ShadowButton \r\n                  space={2}\r\n                  onPress={() => {\r\n                    setIsOpen(true);\r\n                  }}\r\n                  rounded={6}\r\n                  label='Change'\r\n                  variant='outline'\r\n                  color='#919191'\r\n                  style={{ height: vh(36), marginTop: vh(10) }}\r\n                />\r\n              </HStack>\r\n            </VStack>\r\n          </Card>\r\n          <Card\r\n            style={{ marginBottom: vh(20), width: \"37%\" }}\r\n            title={\"Your Photo\"}\r\n          >\r\n            <VStack style={{ zoom: \"90%\" }} mb={4} justifyContent={\"center\"}>\r\n              <input\r\n                ref={uRef}\r\n                accept='image/jpg'\r\n                name='imgupload'\r\n                type='file'\r\n                onChange={onChangeHandler}\r\n                style={{ display: \"none\" }}\r\n              />\r\n              {isUploading ? (\r\n                <Center\r\n                  rounded={\"full\"}\r\n                  style={{\r\n                    width: vw(68),\r\n                    height: vw(68),\r\n                    borderWidth: vw(3),\r\n                    borderColor: \"#E6EBF2\",\r\n                    backgroundColor: \"white\",\r\n                    alignSelf: \"center\",\r\n                    marginVertical: vh(20),\r\n                  }}\r\n                >\r\n                  <Spinner />\r\n                </Center>\r\n              ) : (\r\n                <Pressable\r\n                  onPress={() => {\r\n                    uRef.current.click();\r\n                  }}\r\n                >\r\n                  <Center style={{ marginVertical: vh(20) }}>\r\n                    <UserAvatar />\r\n                  </Center>\r\n                </Pressable>\r\n              )}\r\n              <Center>\r\n                <Text>Click to Change your picture</Text>\r\n              </Center>\r\n            </VStack>\r\n          </Card>\r\n        </HStack>\r\n      </Hidden>\r\n      <Hidden from='md'>\r\n        <VStack justifyContent='flex-start'>\r\n          <Card\r\n            style={{ marginBottom: vh(20), width: \"100%\" }}\r\n            title={\"Personal Information\"}\r\n            rightElement={\r\n              <ShadowButton\r\n                fontSize={vw(13)}\r\n                style={{\r\n                  height: vh(32),\r\n                  minWidth: vw(75),\r\n                  borderColor: \"#00000026\",\r\n                }}\r\n                color={\"#666666\"}\r\n                variant='outline'\r\n                label='EDIT'\r\n                onPress={() => {\r\n                  setEdit(!edit);\r\n                }}\r\n              />\r\n            }\r\n          >\r\n            <VStack style={{ zoom: \"90%\" }} mb={4} justifyContent={\"center\"}>\r\n              {edit ? (\r\n                <>\r\n                  <VStack\r\n                    space={4}\r\n                    style={{\r\n                      // width: vw(285),\r\n                      justifyContent: \"space-between\",\r\n                      // marginHorizontal: vw(10),\r\n                      marginVertical: vh(20),\r\n                    }}\r\n                  >\r\n                    <ShadowInput\r\n                      isRequired\r\n                      control={control}\r\n                      name='firstname'\r\n                      label='First Name '\r\n                      labelstyle={{\r\n                        fontSize: vw(15),\r\n                        color: errors.firstname ? \"red.500\" : \"#303030\",\r\n                      }}\r\n                      placeholder='First Name'\r\n                      invalid={errors.firstname ? true : false}\r\n                      error={errors.firstname ? errors.firstname.message : \"\"}\r\n                      rules={{\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Please enter firstname.\",\r\n                        },\r\n                        maxLength: {\r\n                          value: 100,\r\n                          message:\r\n                            \"Firstname cannot be more than 100 characters.\",\r\n                        },\r\n                      }}\r\n                    />\r\n                    <ShadowInput\r\n                      isRequired\r\n                      control={control}\r\n                      name='lastname'\r\n                      label='Last Name '\r\n                      placeholder='Last Name'\r\n                      invalid={errors.lastname ? true : false}\r\n                      error={errors.lastname ? errors.lastname.message : \"\"}\r\n                      rules={{\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Please enter lastname.\",\r\n                        },\r\n                        maxLength: {\r\n                          value: 100,\r\n                          message:\r\n                            \"Lastname cannot be more than 100 characters.\",\r\n                        },\r\n                      }}\r\n                    />\r\n                  </VStack>\r\n                  <HStack\r\n                    space={4}\r\n                    style={{\r\n                      // width: vw(370),\r\n                      justifyContent: \"space-betwee0n\",\r\n                      // marginHorizontal: vw(20),\r\n                      marginVertical: vh(20),\r\n                    }}\r\n                  >\r\n                    <ShadowInput\r\n                      isRequired\r\n                      control={control}\r\n                      labelStyle={{\r\n                        fontSize: vw(15),\r\n                        color: errors.email ? \"red.500\" : \"#303030\",\r\n                      }}\r\n                      name='email'\r\n                      label='Email '\r\n                      placeholder='Enter your email'\r\n                      invalid={errors.email ? true : false}\r\n                      error={errors.email ? errors.email.message : \"\"}\r\n                      rules={{\r\n                        required: {\r\n                          value: true,\r\n                          message: \"Please enter your email.\",\r\n                        },\r\n                      }}\r\n                    />\r\n                  </HStack>\r\n                  <HStack space={4} justifyContent={\"center\"}>\r\n                    <ShadowButton\r\n                      fontSize={vw(13)}\r\n                      style={{\r\n                        height: vh(36),\r\n                        minWidth: vw(80),\r\n                        borderColor: \"#00000026\",\r\n                        marginTop: vh(20),\r\n                      }}\r\n                      color={\"#666666\"}\r\n                      variant='outline'\r\n                      label='Cancel'\r\n                      onPress={() => {\r\n                        setEdit(!edit);\r\n                      }}\r\n                    />\r\n                    <ShadowButton\r\n                      isLoading={isLoading}\r\n                      fontSize={vw(13)}\r\n                      style={{\r\n                        height: vh(36),\r\n                        minWidth: vw(80),\r\n                        borderColor: \"#00000026\",\r\n                        marginTop: vh(20),\r\n                      }}\r\n                      label='Save'\r\n                      onPress={() => {\r\n                        handleSubmit(onSubmit)();\r\n                      }}\r\n                    />\r\n                  </HStack>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <VStack\r\n                    space={4}\r\n                    style={{\r\n                      // width: vw(370),\r\n                      justifyContent: \"space-between\",\r\n                      // marginHorizontal: vw(20),\r\n                      marginVertical: vh(20),\r\n                    }}\r\n                  >\r\n                    <VStack space={2}>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: vw(15),\r\n                          fontFamily: \"Poppins\",\r\n                          color: \"#303030\",\r\n                          height: vh(19),\r\n                        }}\r\n                      >\r\n                        First Name\r\n                      </Text>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: vw(15),\r\n                          fontFamily: \"Poppins_medium\",\r\n                          color: \"#303030\",\r\n                          height: vh(19),\r\n                        }}\r\n                      >\r\n                        {profile.firstname}\r\n                      </Text>\r\n                    </VStack>\r\n                    <VStack space={2}>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: vw(15),\r\n                          fontFamily: \"Poppins\",\r\n                          color: \"#303030\",\r\n                          height: vh(19),\r\n                        }}\r\n                      >\r\n                        Last Name\r\n                      </Text>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: vw(15),\r\n                          fontFamily: \"Poppins_medium\",\r\n                          color: \"#303030\",\r\n                          height: vh(19),\r\n                        }}\r\n                      >\r\n                        {profile.lastname}\r\n                      </Text>\r\n                    </VStack>\r\n                  </VStack>\r\n                  <HStack\r\n                    space={4}\r\n                    style={{\r\n                      // width: vw(370),\r\n                      justifyContent: \"space-between\",\r\n                      // marginHorizontal: vw(20),\r\n                      marginVertical: vh(20),\r\n                    }}\r\n                  >\r\n                    <VStack space={2}>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: vw(15),\r\n                          fontFamily: \"Poppins\",\r\n                          color: \"#303030\",\r\n                          height: vh(19),\r\n                        }}\r\n                      >\r\n                        Email\r\n                      </Text>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: vw(15),\r\n                          fontFamily: \"Poppins_medium\",\r\n                          color: \"#303030\",\r\n                          height: vh(19),\r\n                        }}\r\n                      >\r\n                        {profile.email}\r\n                      </Text>\r\n                    </VStack>\r\n                  </HStack>\r\n                </>\r\n              )}\r\n              <HStack\r\n                space={4}\r\n                style={{\r\n                  // width: vw(370),\r\n                  justifyContent: \"space-between\",\r\n                  // marginHorizontal: vw(20),\r\n                  marginVertical: vh(20),\r\n                }}\r\n              >\r\n                <VStack>\r\n                  <Text\r\n                    style={{\r\n                      fontSize: vw(15),\r\n                      fontFamily: \"Poppins_medium\",\r\n                      color: \"#303030\",\r\n                      height: vh(19),\r\n                    }}\r\n                  >\r\n                    Password\r\n                  </Text>\r\n                  <Text\r\n                    style={{\r\n                      fontSize: vw(13),\r\n                      fontFamily: \"Poppins\",\r\n                      color: \"#919191\",\r\n                      height: vh(19),\r\n                      marginTop: vh(5),\r\n                    }}\r\n                  >\r\n                    Last changed{\" \"}\r\n                    {profile.passwordupdated\r\n                      ? moment(profile.passwordupdated).format(\"DD MMM, YYYY\")\r\n                      : moment(profile.created).format(\"DD MMM, YYYY\")}\r\n                  </Text>\r\n                </VStack>\r\n                <ShadowButton\r\n                  onPress={() => {\r\n                    setIsOpen(true);\r\n                  }}\r\n                  rounded={6}\r\n                  label='Change'\r\n                  variant='outline'\r\n                  color='#919191'\r\n                  style={{ height: vh(36) }}\r\n                />\r\n              </HStack>\r\n            </VStack>\r\n          </Card>\r\n          <Card\r\n            style={{ marginBottom: vh(20), width: \"100%\" }}\r\n            title={\"Your Photo\"}\r\n          >\r\n            <VStack style={{ zoom: \"90%\" }} mb={4} justifyContent={\"center\"}>\r\n              <input\r\n                ref={uRef}\r\n                accept='image/jpg'\r\n                name='imgupload'\r\n                type='file'\r\n                onChange={onChangeHandler}\r\n                style={{ display: \"none\" }}\r\n              />\r\n              {isLoading ? (\r\n                <Center\r\n                  rounded={\"full\"}\r\n                  style={{\r\n                    width: vw(68),\r\n                    height: vw(68),\r\n                    borderWidth: vw(3),\r\n                    borderColor: \"#E6EBF2\",\r\n                    backgroundColor: \"white\",\r\n                    alignSelf: \"center\",\r\n                    marginVertical: vh(20),\r\n                  }}\r\n                >\r\n                  <Spinner />\r\n                </Center>\r\n              ) : (\r\n                <Pressable\r\n                  onPress={() => {\r\n                    uRef.current.click();\r\n                  }}\r\n                >\r\n                  <Center style={{ marginVertical: vh(20) }}>\r\n                    <UserAvatar />\r\n                  </Center>\r\n                </Pressable>\r\n              )}\r\n              <Center>\r\n                <Text>Click to Change your picture</Text>\r\n              </Center>\r\n            </VStack>\r\n          </Card>\r\n        </VStack>\r\n      </Hidden>\r\n      <Card\r\n        style={{ marginBottom: vh(20) }}\r\n        title={\"User Tags\"}\r\n        rightElement={<AddTag _showAlert={_showAlert} />}\r\n      >\r\n        <HStack flexWrap={\"wrap\"} marginBottom={vh(10)}>\r\n          {tags &&\r\n            tags\r\n              .filter((f) => !f.default)\r\n              .map((t, i) => (\r\n                <Text\r\n                  key={\"tag-\" + i}\r\n                  rounded={vw(14)}\r\n                  style={{\r\n                    color: \"#686868\",\r\n                    fontFamily: \"Poppins\",\r\n                    fontSize: vw(13),\r\n                    borderColor: \"#919191\",\r\n                    borderWidth: 2,\r\n                    paddingHorizontal: vw(13),\r\n                    //   paddingVertical: vh(3),\r\n                    margin: vw(10),\r\n                    height: vh(28),\r\n                    lineHeight: vh(24),\r\n                  }}\r\n                >\r\n                  {t.name}\r\n                </Text>\r\n              ))}\r\n        </HStack>\r\n      </Card>\r\n      <Card style={{ marginBottom: vh(20) }} title={\"System Tags\"}>\r\n        <HStack flexWrap={\"wrap\"} marginBottom={vh(10)}>\r\n          {tags &&\r\n            tags\r\n              .filter((f) => f.default)\r\n              .map((t, i) => (\r\n                <Text\r\n                  key={\"st-\" + i}\r\n                  rounded={vw(14)}\r\n                  style={{\r\n                    color: \"#686868\",\r\n                    fontFamily: \"Poppins\",\r\n                    fontSize: vw(13),\r\n                    borderColor: \"#919191\",\r\n                    borderWidth: 2,\r\n                    paddingHorizontal: vw(13),\r\n                    //   paddingVertical: vh(3),\r\n                    margin: vw(10),\r\n                    height: vh(28),\r\n                    lineHeight: vh(24),\r\n                  }}\r\n                >\r\n                  {t.name}\r\n                </Text>\r\n              ))}\r\n        </HStack>\r\n      </Card>\r\n      <ChangePassword\r\n        _showAlert={_showAlert}\r\n        profile={profile}\r\n        isOpen={isOpen}\r\n        setIsOpen={setIsOpen}\r\n      />\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import React from \"react\";\r\nimport { Center, Image } from \"native-base\";\r\nimport { vw, vh } from \"../../../util\";\r\nimport { CDN, getUser } from \"../../../constants/Config\";\r\n\r\nconst UserAvatar = ({ navbar, width, height }) => {\r\n  const user = getUser();\r\n  \r\n  if (!user) {\r\n    return <></>;\r\n  }\r\n  const picid = user.pic || \"0\";\r\n  const userUri = `${CDN}/users/${user._id}/${picid}`; //+ moment().valueOf();\r\n  // user name\r\n  const fullname = user && user.firstname + \" \" + user.lastname;\r\n  //avatar fall back\r\n  const nameSplit = fullname.split(\" \");\r\n  const fn = nameSplit[0][0];\r\n  const ln = nameSplit[1] ? nameSplit[1][0] : \"-\";\r\n  const fb = fn + ln;\r\n  const h = vh(height || 68);\r\n  const w = vw(width || 68);\r\n  const ah = vh(height - 8 || 60);\r\n  const aw = vw(width - 8 || 60);\r\n\r\n  // console.log(navbar, userUri, height, width);\r\n\r\n  return (\r\n    <Center\r\n      // rounded={\"full\"}\r\n      style={{\r\n        width: w,\r\n        height: h,\r\n        borderWidth: vw(3),\r\n        borderColor: \"#E6EBF2\",\r\n        backgroundColor: \"white\",\r\n        borderRadius: 100,\r\n      }}\r\n    >\r\n      <Image\r\n        style={{\r\n          marginX: vw(7),\r\n          marginY: vh(7),\r\n          width: aw,\r\n          height: ah,\r\n        }}\r\n        rounded={\"full\"}\r\n        alt={fb.toUpperCase()}\r\n        source={{ uri: userUri }}\r\n      />\r\n    </Center>\r\n  );\r\n};\r\n\r\nexport default UserAvatar;\r\n","import React from \"react\";\r\nimport { VStack, HStack, Text, Pressable } from \"native-base\";\r\nimport AddIcon from \"../../../components/svg/AddIcon\";\r\nimport Util from \"../../../util\";\r\nimport Colors from \"../../../constants/Colors\";\r\nconst { vw, vh } = Util;\r\nconst Card = ({\r\n  title,\r\n  subtitle,\r\n  children,\r\n  onPress,\r\n  rightElement,\r\n  style,\r\n  titlestyle,\r\n  headerStyle,\r\n}) => {\r\n  return (\r\n    <VStack\r\n      style={{\r\n        backgroundColor: \"white\",\r\n        borderRadius: vw(10),\r\n        boxShadow: \"0px 3px 10px #0000001A\",\r\n        ...style,\r\n      }}\r\n    >\r\n      {title && (\r\n        <HStack\r\n          style={{\r\n            height: vh(54),\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            marginHorizontal: vw(20),\r\n            borderBottomWidth: vw(2),\r\n            borderBottomColor: \"rgba(0,0,0, 0.10)\",\r\n            ...headerStyle,\r\n          }}\r\n        >\r\n          <VStack space={1}>\r\n            <Text\r\n              style={{\r\n                fontFamily: \"Poppins_medium\",\r\n                fontSize: vw(13),\r\n                color: \"#303030\",\r\n                ...titlestyle,\r\n              }}\r\n            >\r\n              {title}\r\n            </Text>\r\n            {subtitle && (\r\n              <Text\r\n                style={{\r\n                  fontFamily: \"Poppins_medium\",\r\n                  fontSize: vw(13),\r\n                  color: \"#303030\",\r\n                  marginTop: vh(-8)\r\n                }}\r\n              >\r\n                {subtitle}\r\n              </Text>\r\n            )}\r\n          </VStack>\r\n          {onPress ? (\r\n            <Pressable onPress={onPress}>\r\n              {rightElement ? rightElement : <AddIcon fill={Colors.primary} />}\r\n            </Pressable>\r\n          ) : (\r\n            rightElement\r\n          )}\r\n        </HStack>\r\n      )}\r\n      <VStack style={{ marginHorizontal: vw(20) }}>{children}</VStack>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { memo, forwardRef } from 'react';\nimport Spinner from '../Spinner';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { default as Box, IBoxProps } from '../Box';\nimport HStack from '../Stack/HStack';\nimport { Pressable } from '../Pressable';\nimport type { IButtonProps } from './types';\nimport { composeEventHandlers } from '../../../utils';\nimport {\n  useHover,\n  useFocus,\n  useIsPressed,\n} from '../../primitives/Pressable/Pressable';\nimport { useFocusRing } from '@react-native-aria/focus';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Button = (\n  {\n    //@ts-ignore\n    children,\n    startIcon,\n    rightIcon,\n    leftIcon,\n    endIcon,\n    spinner,\n    isDisabled,\n    isLoading,\n    isHovered: isHoveredProp,\n    isPressed: isPressedProp,\n    isFocused: isFocusedProp,\n    isFocusVisible: isFocusVisibleProp,\n    spinnerPlacement = 'start',\n    ...props\n  }: IButtonProps & IBoxProps,\n  ref: any\n) => {\n  const { hoverProps, isHovered } = useHover();\n  const { pressableProps, isPressed } = useIsPressed();\n  const { focusProps, isFocused } = useFocus();\n  const { isFocusVisible, focusProps: focusRingProps }: any = useFocusRing();\n\n  const {\n    onPressIn,\n    onPressOut,\n    onHoverIn,\n    onHoverOut,\n    onFocus,\n    onBlur,\n    _text,\n    _stack,\n    _spinner,\n    isLoadingText,\n    _icon,\n    ...resolvedProps\n  } = usePropsResolution('Button', props, {\n    isDisabled,\n    isHovered: isHoveredProp || isHovered,\n    isFocused: isFocusedProp || isFocused,\n    isPressed: isPressedProp || isPressed,\n    isLoading,\n    isFocusVisible: isFocusVisibleProp || isFocusVisible,\n  });\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  if (leftIcon) {\n    startIcon = leftIcon;\n  }\n  if (rightIcon) {\n    endIcon = rightIcon;\n  }\n  if (endIcon && React.isValidElement(endIcon)) {\n    endIcon = React.Children.map(\n      endIcon,\n      (child: JSX.Element, index: number) => {\n        return React.cloneElement(child, {\n          key: `button-end-icon-${index}`,\n          ..._icon,\n          ...child.props,\n        });\n      }\n    );\n  }\n  if (startIcon && React.isValidElement(startIcon)) {\n    startIcon = React.Children.map(\n      startIcon,\n      (child: JSX.Element, index: number) => {\n        return React.cloneElement(child, {\n          key: `button-start-icon-${index}`,\n          ..._icon,\n          ...child.props,\n        });\n      }\n    );\n  }\n\n  const spinnerElement = spinner ? (\n    spinner\n  ) : (\n    <Spinner color={_text?.color} {..._spinner} />\n  );\n\n  const boxChildren = (child: any) => {\n    return child ? <Box _text={_text}>{child}</Box> : null;\n  };\n\n  return (\n    <Pressable\n      disabled={isDisabled || isLoading}\n      ref={ref}\n      onPressIn={composeEventHandlers(onPressIn, pressableProps.onPressIn)}\n      onPressOut={composeEventHandlers(onPressOut, pressableProps.onPressOut)}\n      // @ts-ignore - web only\n      onHoverIn={composeEventHandlers(onHoverIn, hoverProps.onHoverIn)}\n      // @ts-ignore - web only\n      onHoverOut={composeEventHandlers(onHoverOut, hoverProps.onHoverOut)}\n      // @ts-ignore - web only\n      onFocus={composeEventHandlers(\n        composeEventHandlers(onFocus, focusProps.onFocus),\n        focusRingProps.onFocus\n      )}\n      // @ts-ignore - web only\n      onBlur={composeEventHandlers(\n        composeEventHandlers(onBlur, focusProps.onBlur),\n        focusRingProps.onBlur\n      )}\n      {...resolvedProps}\n      accessibilityRole={props.accessibilityRole ?? 'button'}\n    >\n      <HStack {..._stack} test={true}>\n        {startIcon && !isLoading ? startIcon : null}\n        {isLoading && spinnerPlacement === 'start' ? spinnerElement : null}\n        {isLoading\n          ? isLoadingText\n            ? boxChildren(isLoadingText)\n            : null\n          : boxChildren(children)}\n\n        {endIcon && !isLoading ? endIcon : null}\n        {isLoading && spinnerPlacement === 'end' ? spinnerElement : null}\n      </HStack>\n    </Pressable>\n  );\n};\n\nexport default memo(forwardRef(Button));\n","import React, { memo, forwardRef } from 'react';\nimport type { IButtonGroupProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { Stack } from '../Stack';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nexport default memo(\n  forwardRef(\n    (\n      { children, divider, variant, ...props }: IButtonGroupProps,\n      ref?: any\n    ) => {\n      const {\n        space,\n        direction,\n\n        size,\n        colorScheme,\n        isDisabled,\n        isAttached,\n        ...newProps\n      } = usePropsResolution('ButtonGroup', props);\n\n      const { borderRadius } = usePropsResolution('Button', props);\n      let computedChildren;\n\n      if (Array.isArray(children)) {\n        computedChildren = React.Children.toArray(children).map(\n          (child: any, index: number) => {\n            if (typeof child === 'string' || typeof child === 'number')\n              return child;\n            return React.cloneElement(child, {\n              key: `button-group-child-${index}`,\n              variant,\n              size,\n              colorScheme,\n              isDisabled,\n\n              // when buttons are attached, remove rounded corners of all buttons except extreme buttons\n              ...(isAttached ? { borderRadius: 0 } : {}),\n              ...(isAttached && index === 0\n                ? direction === 'column'\n                  ? { borderTopRadius: borderRadius }\n                  : { borderLeftRadius: borderRadius }\n                : {}),\n              ...(isAttached && index === children?.length - 1\n                ? direction === 'column'\n                  ? { borderBottomRadius: borderRadius }\n                  : { borderRightRadius: borderRadius }\n                : {}),\n\n              //when buttons are attached, remove double border from them, just keep borderRight in case for direction row and borderBottom in case of direction column for every component\n              ...(isAttached && index !== 0\n                ? direction === 'column'\n                  ? { borderTopWidth: 0 }\n                  : { borderLeftWidth: 0 }\n                : {}),\n              ...child.props,\n            });\n          }\n        );\n      } else {\n        computedChildren = React.Children.toArray(children).map(\n          (child: any, index: number) => {\n            return React.cloneElement(child, {\n              key: `button-group-child-${index}`,\n              variant,\n              size,\n              colorScheme,\n              isDisabled,\n              ...child.props,\n            });\n          }\n        );\n      }\n      //TODO: refactor for responsive prop\n      if (useHasResponsiveProps(props)) {\n        return null;\n      }\n      return (\n        <Stack\n          divider={divider}\n          space={isAttached ? 0 : space}\n          direction={direction}\n          {...newProps}\n          ref={ref}\n        >\n          {computedChildren}\n        </Stack>\n      );\n    }\n  )\n);\n","import ButtonMain from './Button';\nimport ButtonGroup from './ButtonGroup';\nimport type { IButtonComponentType } from './types';\n\nconst ButtonTemp: any = ButtonMain;\nButtonTemp.Group = ButtonGroup;\n\n// To add typings\nconst Button = ButtonTemp as IButtonComponentType;\n\nexport { Button };\nexport type { IButtonGroupProps, IButtonProps } from './types';\n","import React, { useState, memo, forwardRef, useCallback, useRef } from 'react';\nimport { Image as RNImage } from 'react-native';\nimport Text from '../Text';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { IImageProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { makeStyledComponent } from '../../../utils/styled';\n\nconst StyledImage = makeStyledComponent(RNImage);\n\nconst Image = memo(\n  forwardRef((props: IImageProps, ref: any) => {\n    const {\n      source,\n      src,\n      fallbackElement,\n      alt,\n      fallbackSource,\n      ignoreFallback,\n      _alt,\n      ...resolvedProps\n    } = usePropsResolution('Image', props);\n\n    const finalSource: any = useRef(null);\n    const getSource = useCallback(() => {\n      if (source) {\n        finalSource.current = source;\n      } else if (src) {\n        finalSource.current = { uri: src };\n      }\n      return finalSource.current;\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [source?.uri, src]);\n\n    const [renderedSource, setSource] = useState(getSource());\n    const [alternate, setAlternate] = useState(false);\n    const [fallbackSourceFlag, setfallbackSourceFlag] = useState(true);\n\n    React.useEffect(() => {\n      setSource(getSource());\n      return () => {\n        finalSource.current = null;\n      };\n    }, [source?.uri, src, getSource]);\n\n    const onImageLoadError = useCallback(\n      (event: any) => {\n        props.onError && props.onError(event);\n        console.warn(event.nativeEvent.error);\n        if (\n          !ignoreFallback &&\n          fallbackSource &&\n          fallbackSource !== renderedSource &&\n          fallbackSourceFlag\n        ) {\n          setfallbackSourceFlag(false);\n          setSource(fallbackSource);\n        } else {\n          setAlternate(true);\n        }\n      },\n      [\n        fallbackSource,\n        fallbackSourceFlag,\n        ignoreFallback,\n        props,\n        renderedSource,\n      ]\n    );\n    //TODO: refactor for responsive prop\n    if (useHasResponsiveProps(props)) {\n      return null;\n    }\n\n    if (typeof alt !== 'string') {\n      console.warn('Please pass alt prop to Image component');\n    }\n\n    if (alternate) {\n      if (fallbackElement) {\n        if (React.isValidElement(fallbackElement)) {\n          return fallbackElement;\n        }\n      } else return <Text {..._alt}>{alt}</Text>;\n    }\n    return (\n      <StyledImage\n        source={renderedSource}\n        accessibilityLabel={alt}\n        alt={alt}\n        {...resolvedProps}\n        onError={onImageLoadError}\n        ref={ref}\n      />\n    );\n  })\n);\n\ninterface ImageStatics {\n  getSize: typeof RNImage.prefetch;\n  prefetch: typeof RNImage.prefetch;\n  queryCache: typeof RNImage.queryCache;\n}\nconst ImageWithStatics: typeof Image & ImageStatics = {\n  ...Image,\n  //@ts-ignore\n  getSize: RNImage.getSize,\n  prefetch: RNImage.prefetch,\n  queryCache: RNImage.queryCache,\n};\n\nexport default ImageWithStatics;\nexport type { IImageProps };\n"],"names":["ShadowButton","React","props","ref","dw","label","length","space","width","vw","rounded","_text","color","variant","fontSize","fontFamily","_focus","height","vh","_important","background","_pressed","size","style","Util","ShadowInput","isRequired","isInvalid","invalid","isReadOnly","labelstyle","control","rules","name","zIndex","render","field","onChange","value","onBlur","multiline","numberOfLines","minLength","maxLength","autoComplete","autoFocus","type","onSubmitEditing","onKeyPress","onChangeText","invalidOutlineColor","focusOutlineColor","_invalid","borderColor","borderWidth","_light","_dark","_web","backgroundColor","InputLeftElement","leftIcon","InputRightElement","rightIcon","placeholder","marginTop","error","help","ShadowModal","useBreakpointValue","base","lg","xl","md","sm","isOpen","onClose","initialFocusRef","top","marginBottom","bottom","left","marginLeft","marginRight","right","center","placement","borderRadius","borderBottomWidth","flex","justifyContent","header","desc","flexWrap","wordWrap","close","onPress","boxShadow","alignItems","minHeight","bodyHeight","children","buttons","paddingX","borderTopWidth","footerStyle","cancel","isLoading","save","fill","stroke","xmlns","viewBox","Path","d","opacity","title","subtitle","rightElement","noborder","bottomBorder","borderBottomColor","paddingBottom","_showAlert","profile","setIsOpen","fRef","useRef","dispatch","useDispatch","useState","setIsLoading","showCurrentPassword","setShowCurrentPassword","showNewPassword","setShowNewPassword","showConfirmPassword","setShowConfirmPassword","useForm","mode","defaultValues","handleSubmit","errors","formState","getValues","reset","setValue","trigger","useEffect","current","focus","onSubmit","data","action","authActions","_id","password","trim","newpassword","changePassword","message","VStack","HStack","marginVertical","el","e","key","preventDefault","console","log","required","inputStyle","Pressable","onFocus","EyeClosedIcon","padding","validate","confirmpassword","AddTag","tRef","tag","propertiesActions","default","Input","v","Button","Text","Colors","textTransform","textAlign","tags","uRef","isUploading","setIsUploading","setProgress","edit","setEdit","firstname","lastname","email","getUser","onChangeHandler","token","files","file","indexOf","FormData","request","XMLHttpRequest","append","addEventListener","upload","completed","loaded","total","onreadystatechange","this","readyState","status","JSON","parse","responseText","success","responseType","open","API_URL","setRequestHeader","send","PageHeader","Hidden","only","Card","minWidth","zoom","mb","labelStyle","passwordupdated","moment","format","created","accept","display","Center","alignSelf","Spinner","click","UserAvatar","from","filter","f","map","t","i","paddingHorizontal","margin","lineHeight","navbar","user","picid","pic","userUri","CDN","nameSplit","split","fb","h","w","ah","aw","marginX","marginY","alt","toUpperCase","source","uri","titlestyle","headerStyle","marginHorizontal","startIcon","endIcon","spinner","isDisabled","isHoveredProp","isHovered","isPressedProp","isPressed","isFocusedProp","isFocused","isFocusVisibleProp","isFocusVisible","spinnerPlacement","useHover","hoverProps","useIsPressed","pressableProps","useFocus","focusProps","useFocusRing","focusRingProps","usePropsResolution","onPressIn","onPressOut","onHoverIn","onHoverOut","_stack","_spinner","isLoadingText","_icon","resolvedProps","useHasResponsiveProps","child","index","spinnerElement","boxChildren","Box","disabled","composeEventHandlers","accessibilityRole","test","memo","forwardRef","computedChildren","divider","direction","colorScheme","isAttached","newProps","Array","isArray","borderTopRadius","borderLeftRadius","borderBottomRadius","borderRightRadius","borderLeftWidth","Stack","ButtonTemp","ButtonMain","Group","ButtonGroup","StyledImage","makeStyledComponent","RNImage","Image","src","fallbackElement","fallbackSource","ignoreFallback","_alt","finalSource","getSource","useCallback","renderedSource","setSource","alternate","setAlternate","fallbackSourceFlag","setfallbackSourceFlag","onImageLoadError","event","onError","warn","nativeEvent","accessibilityLabel","ImageWithStatics","getSize","prefetch","queryCache"],"sourceRoot":""}