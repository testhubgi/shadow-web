{"version":3,"file":"static/js/4659.110db734.chunk.js","mappings":"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","sources":["components/ShadowInput.js","components/ShadowPagination.js","components/svg/AcreIcon.js","components/svg/AddIcon.js","components/svg/AnalyticsIcon.js","components/svg/BathIcon.js","components/svg/BedIcon.js","components/svg/ChatSupportIcon.js","components/svg/DrivingRoutesIcon.js","components/svg/FeatureRequestIcon.js","components/svg/LogoutIcon.js","components/svg/MoreIcon.js","components/svg/NotesIcon.js","components/svg/ReportIssueIcon.js","components/svg/SearchIcon.js","components/svg/SettingsIcon.js","components/svg/SqftIcon.js","components/svg/TeamIcon.js","context/index.js","pages/private/pipelines/AddPipeline.js","pages/private/pipelines/ContactMenu.js","pages/private/pipelines/ContactNotes.js","pages/private/pipelines/HorizontalItem.js","pages/private/pipelines/VerticalItem.js","pages/private/pipelines/AddContacts.js","pages/private/pipelines/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Input, FormControl } from \"native-base\";\r\nimport { Controller } from \"react-hook-form\";\r\nimport Util from \"../util\";\r\nconst { vw, vh } = Util;\r\n\r\nconst ShadowInput = React.forwardRef((props, ref) => {\r\n  return (\r\n    <FormControl\r\n      isRequired={props.isRequired}\r\n      isInvalid={props.invalid}\r\n      isReadOnly={props.isReadOnly || false}\r\n      style={{\r\n        height: vh(48),\r\n        ...props.style,\r\n      }}\r\n    >\r\n      {props.label && (\r\n        <FormControl.Label\r\n          style={{\r\n            fontSize: vw(13),\r\n            fontFamily: \"Poppins_medium\",\r\n            color: props.invalid ? \"red.500\" : \"rgba(102, 102, 102, 0.7)\",\r\n            height: vh(19),\r\n            ...props.labelstyle,\r\n          }}\r\n        >\r\n          {props.label}\r\n        </FormControl.Label>\r\n      )}\r\n\r\n      <Controller\r\n        control={props.control}\r\n        rules={props.rules}\r\n        name={props.name}\r\n        style={{\r\n          zIndex: 1,\r\n        }}\r\n        render={({ field: { onChange, onBlur, value } }) => (\r\n          <Input\r\n            isReadOnly={props.isReadOnly || false}\r\n            ref={ref}\r\n            size={props.size || \"lg\"}\r\n            multiline={props.multiline || false}\r\n            numberOfLines={props.numberOfLines || 1}\r\n            minLength={props.minLength || 1}\r\n            maxLength={props.maxLength || 255}\r\n            isInvalid={props.invalid}\r\n            autoComplete='off'\r\n            autoFocus={props.autoFocus || false}\r\n            type={props.type || \"text\"}\r\n            onSubmitEditing={props.onSubmitEditing}\r\n            onKeyPress={props.onKeyPress}\r\n            onChangeText={(value) => {\r\n              onChange(value);\r\n              if (props.onChangeText) {\r\n                props.onChangeText();\r\n              }\r\n            }}\r\n            value={value || \"\"}\r\n            variant={\"outline\"}\r\n            invalidOutlineColor={\"red.300\"}\r\n            focusOutlineColor={\"rgba(0, 0, 0, 0.15)\"}\r\n            _invalid={{\r\n              borderColor: \"red.300\",\r\n              borderWidth: \"1\",\r\n            }}\r\n            _light={{\r\n              borderWidth: \"1\",\r\n            }}\r\n            _dark={{\r\n              borderWidth: \"1\",\r\n            }}\r\n            _web={{\r\n              borderWidth: \"1\",\r\n            }}\r\n            style={{\r\n              fontSize: vw(15),\r\n              fontFamily: \"Poppins_medium\",\r\n              backgroundColor: \"white\",\r\n              zIndex: 1,\r\n              height: props.height || vh(36),\r\n            }}\r\n            InputLeftElement={props.leftIcon || null}\r\n            InputRightElement={props.rightIcon || null}\r\n            placeholder={props.placeholder}\r\n          />\r\n        )}\r\n      />\r\n      <FormControl.ErrorMessage style={{ marginTop: vh(-3) }}>\r\n        {props.error}\r\n      </FormControl.ErrorMessage>\r\n      <FormControl.HelperText style={{ marginTop: vh(-3) }}>\r\n        {props.help}\r\n      </FormControl.HelperText>\r\n    </FormControl>\r\n  );\r\n});\r\n\r\nexport default ShadowInput;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { HStack, Select, Center, Pressable, Text } from \"native-base\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { vh, vw } from \"../util\";\r\nimport PrevIcon from \"./svg/PrevIcon\";\r\nimport NextIcon from \"./svg/NextIcon\";\r\nimport Colors from \"../constants/Colors\";\r\nimport DropDownIcon from \"./svg/DropDownIcon\";\r\n\r\nconst ShadowPagination = ({\r\n  total = 1,\r\n  limit = 10,\r\n  setLimit,\r\n  setPage,\r\n  page,\r\n  setIsLoading,\r\n  style,\r\n  view = true,\r\n  \r\n}) => {\r\n  const pageCount = Math.ceil(total / limit);\r\n\r\n  const onPageChange = (p) => {\r\n    setPage(p.selected + 1);\r\n  };\r\n\r\n  const MyPaginate = styled(ReactPaginate).attrs({\r\n    activeClassName: \"active\", // default to \"disabled\"\r\n  })`\r\n    margin-bottom: 1rem;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-end;\r\n    list-style-type: none;\r\n    padding: 0 1rem;\r\n    li a {\r\n      border-radius: 4px;\r\n      padding: 0.1rem 1rem;\r\n      cursor: pointer;\r\n      color: rgba(102, 102, 102, 1);\r\n      font-family: \"Poppins_medium\";\r\n      font-size: ${vw(15)};\r\n    }\r\n    li.previous a,\r\n    li.next a,\r\n    li.break a {\r\n      border-color: transparent;\r\n      color: rgba(102, 102, 102, 1);\r\n      font-family: \"Poppins_medium\";\r\n      font-size: ${vw(15)};\r\n    }\r\n    li.active a {\r\n      background-color: #7d2be9;\r\n      border-color: transparent;\r\n      color: white;\r\n      min-width: 24px;\r\n      font-family: \"Poppins_medium\";\r\n      font-size: ${vw(15)};\r\n    }\r\n    li.disabled a {\r\n      color: rgba(102, 102, 102, 0.5);\r\n    }\r\n    li.disable,\r\n    li.disabled a {\r\n      cursor: default;\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <HStack\r\n      style={{\r\n        boxShadow: \"0px 0px 15px rgba(0, 0, 0, 0.1)\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        height: vh(60),\r\n        backgroundColor: \"white\", //\"rgba(247, 248, 250, 1)\",\r\n        ...style,\r\n      }}\r\n    >\r\n      {view ? (\r\n        <HStack style={{ alignItems: \"center\", paddingHorizontal: vh(20) }}>\r\n          <Text\r\n            style={{\r\n              fontFamily: \"Poppins_medium\",\r\n              fontSize: vw(15),\r\n              color: \"rgba(102, 102, 102, 1)\",\r\n              marginRight: vw(10),\r\n            }}\r\n          >\r\n            View\r\n          </Text>\r\n          <Select\r\n            outlineColor={\"rgba(0,0,0.0.15)\"}\r\n            outlineStyle={{\r\n              borderWidth: vh(2),\r\n            }}\r\n            variant='outline'\r\n            selectedValue={parseInt(limit)}\r\n            style={{\r\n              width: vw(50),\r\n            }}\r\n            onValueChange={(v) => {\r\n              setPage(1);\r\n              setLimit(v);\r\n            }}\r\n            dropdownIcon={<DropDownIcon />}\r\n          >\r\n            <Select.Item label={\"1\"} value={1} />\r\n            <Select.Item label={\"5\"} value={5} />\r\n            <Select.Item label={\"10\"} value={10} />\r\n            <Select.Item label={\"20\"} value={20} />\r\n            <Select.Item label={\"30\"} value={30} />\r\n            <Select.Item label={\"40\"} value={40} />\r\n            <Select.Item label={\"50\"} value={50} />\r\n            <Select.Item label={\"100\"} value={100} />\r\n          </Select>\r\n          <Text\r\n            style={{\r\n              fontFamily: \"Poppins_medium\",\r\n              fontSize: vw(15),\r\n              color: \"rgba(102, 102, 102, 1)\",\r\n              marginLeft: vw(10),\r\n            }}\r\n          >\r\n            per page\r\n          </Text>\r\n        </HStack>\r\n      ) : (\r\n        <HStack></HStack>\r\n      )}\r\n      <MyPaginate\r\n        breakLabel='...'\r\n        nextLabel='Next >'\r\n        onPageChange={onPageChange}\r\n        pageRangeDisplayed={3}\r\n        marginPagesDisplayed={2}\r\n        pageCount={pageCount}\r\n        previousLabel='< Previous'\r\n        renderOnZeroPageCount={null}\r\n        forcePage={page - 1}\r\n      />\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShadowPagination);\r\n","import * as React from \"react\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\nimport { vw, vh } from \"../../util\";\r\n\r\nconst AcreIcon = ({ fill }) => (\r\n  <Svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    viewBox='0 0 24 24'\r\n    width={vw(24)}\r\n    height={vh(24)}\r\n  >\r\n    <Path data-name='Rectangle 243' fill='none' d='M0 0h24v24H0z' />\r\n    <Path\r\n      d='M8.193 5.436h-.024c-.347 0-.645 0-.891.02a2 2 0 0 0-.766.195 1.969 1.969 0 0 0-.861.861 2 2 0 0 0-.195.766c-.02.246-.02.544-.02.891v.444c0 .346 0 .644.02.89a2 2 0 0 0 .195.766 1.967 1.967 0 0 0 .861.86 2 2 0 0 0 .766.195c.246.02.544.02.891.02h.444c.346 0 .644 0 .89-.02a2 2 0 0 0 .766-.195 1.965 1.965 0 0 0 .86-.86 2 2 0 0 0 .195-.766c.02-.246.02-.544.02-.89v-.444c0-.347 0-.645-.02-.891a2 2 0 0 0-.195-.766 1.967 1.967 0 0 0-.86-.861 2 2 0 0 0-.766-.195c-.246-.02-.544-.02-.89-.02h-.42ZM7.107 6.82a.761.761 0 0 1 .277-.051c.186-.015.43-.016.809-.016h.394c.378 0 .622 0 .808.016a.755.755 0 0 1 .277.056.659.659 0 0 1 .287.287.742.742 0 0 1 .056.277c.015.186.016.43.016.809v.394c0 .378 0 .622-.016.808a.737.737 0 0 1-.056.269.655.655 0 0 1-.29.29.737.737 0 0 1-.277.056c-.186.015-.43.016-.808.016h-.391c-.379 0-.623 0-.809-.016a.742.742 0 0 1-.277-.056.659.659 0 0 1-.287-.29.755.755 0 0 1-.051-.274c-.015-.186-.016-.43-.016-.808v-.394c0-.379 0-.623.016-.809a.761.761 0 0 1 .056-.277.663.663 0 0 1 .282-.287Zm8.306-1.384h-.025c-.346 0-.644 0-.89.02a2 2 0 0 0-.766.195 1.967 1.967 0 0 0-.86.861 2 2 0 0 0-.195.766c-.02.246-.02.544-.02.891v.444c0 .346 0 .644.02.89a2 2 0 0 0 .192.766 1.965 1.965 0 0 0 .86.86 2 2 0 0 0 .766.195c.246.02.544.02.89.02h.445c.346 0 .644 0 .89-.02a2 2 0 0 0 .766-.195 1.967 1.967 0 0 0 .861-.86 2 2 0 0 0 .195-.766c.02-.246.02-.544.02-.89v-.444c0-.346 0-.644-.02-.89a2 2 0 0 0-.195-.766 1.969 1.969 0 0 0-.861-.861 2 2 0 0 0-.766-.195c-.246-.02-.544-.02-.89-.02h-.42ZM14.327 6.82a.755.755 0 0 1 .278-.051c.186-.015.43-.016.808-.016h.394c.379 0 .623 0 .809.016a.761.761 0 0 1 .277.056.659.659 0 0 1 .287.287.761.761 0 0 1 .056.277c.015.186.016.43.016.809v.394c0 .378 0 .622-.016.808a.755.755 0 0 1-.056.277.655.655 0 0 1-.287.287.742.742 0 0 1-.277.056c-.186.015-.43.016-.809.016h-.394c-.378 0-.622 0-.808-.016a.737.737 0 0 1-.277-.056.655.655 0 0 1-.287-.287.737.737 0 0 1-.056-.277c-.016-.191-.016-.431-.016-.813v-.394c0-.379 0-.623.016-.809a.742.742 0 0 1 .056-.277.659.659 0 0 1 .286-.287Zm-6.158 5.836h.444c.346 0 .644 0 .89.02a2 2 0 0 1 .766.193 1.965 1.965 0 0 1 .86.86 2 2 0 0 1 .195.766c.02.246.02.544.02.89v.444c0 .346 0 .644-.02.89a2 2 0 0 1-.195.766 1.967 1.967 0 0 1-.86.861 2 2 0 0 1-.766.195c-.246.02-.544.02-.89.02h-.444c-.346 0-.644 0-.89-.02a2 2 0 0 1-.766-.195 1.969 1.969 0 0 1-.861-.861 2 2 0 0 1-.195-.766c-.02-.246-.02-.544-.02-.89v-.444c0-.346 0-.644.02-.89a2 2 0 0 1 .195-.766 1.967 1.967 0 0 1 .861-.86 2 2 0 0 1 .766-.195c.244-.018.542-.018.89-.018Zm-.784 1.329a.742.742 0 0 0-.277.056.659.659 0 0 0-.287.287.755.755 0 0 0-.052.277c-.015.186-.016.43-.016.808v.394c0 .379 0 .623.016.809a.761.761 0 0 0 .056.277.659.659 0 0 0 .287.287.761.761 0 0 0 .277.056c.186.015.43.016.809.016h.394c.378 0 .622 0 .808-.016a.755.755 0 0 0 .277-.056.655.655 0 0 0 .287-.287.742.742 0 0 0 .056-.277c.015-.186.016-.43.016-.809v-.394c0-.378 0-.622-.016-.808a.737.737 0 0 0-.056-.277.655.655 0 0 0-.287-.287.737.737 0 0 0-.277-.056c-.191-.016-.431-.016-.813-.016h-.394c-.379 0-.624 0-.809.016Zm8.029-1.329h-.025c-.346 0-.644 0-.89.02a2 2 0 0 0-.766.195 1.965 1.965 0 0 0-.86.86 2 2 0 0 0-.195.766c-.02.246-.02.544-.02.89v.444c0 .347 0 .645.02.891a2 2 0 0 0 .195.766 1.967 1.967 0 0 0 .86.861 2 2 0 0 0 .766.195c.246.02.544.02.89.02h.445c.346 0 .644 0 .89-.02a2 2 0 0 0 .766-.195 1.969 1.969 0 0 0 .861-.861 2 2 0 0 0 .195-.766c.02-.246.02-.544.02-.89v-.444c0-.346 0-.644-.02-.89a2 2 0 0 0-.195-.766 1.967 1.967 0 0 0-.861-.86 2 2 0 0 0-.766-.195c-.246-.02-.544-.02-.891-.02h-.419Zm-1.085 1.385a.737.737 0 0 1 .277-.056c.186-.015.43-.016.808-.016h.394c.379 0 .623 0 .809.016a.742.742 0 0 1 .277.056.655.655 0 0 1 .287.287.755.755 0 0 1 .056.277c.015.186.016.43.016.808v.394c0 .379 0 .623-.016.809a.761.761 0 0 1-.056.277.655.655 0 0 1-.287.287.761.761 0 0 1-.277.056c-.186.015-.43.016-.809.016h-.394c-.378 0-.622 0-.808-.016a.755.755 0 0 1-.277-.056.655.655 0 0 1-.287-.287.742.742 0 0 1-.056-.277c-.015-.186-.016-.43-.016-.809v-.394c0-.378 0-.622.016-.808a.737.737 0 0 1 .056-.277.655.655 0 0 1 .285-.287Z'\r\n      fill={fill || \"#919191\"}\r\n      fillRule='evenodd'\r\n    />\r\n  </Svg>\r\n);\r\n\r\nexport default AcreIcon;\r\n","import * as React from \"react\"\r\nimport Svg, { Path } from \"react-native-svg\"\r\n\r\nconst AddIcon = ({fill, stroke}) => (\r\n  <Svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width={24} height={24} >\r\n    <Path data-name=\"Rectangle 37\" fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n    <Path\r\n      data-name=\"Path 10127\"\r\n      d=\"M17.1 12.52h-4.22v4.26H11.1v-4.26H6.9v-1.66h4.2V6.58h1.78v4.28h4.22Z\"\r\n      fill={fill || \"#fff\"}\r\n    />\r\n  </Svg>\r\n)\r\n\r\nexport default AddIcon\r\n","import * as React from \"react\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\n\r\nconst AnalyticsIcon = (props) => (\r\n  <Svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    viewBox='0 0 24 24'\r\n    width={24}\r\n    height={24}\r\n    {...props}\r\n  >\r\n    <Path data-name='Rectangle 275' fill='none' d='M0 0h24v24H0z' />\r\n    <Path\r\n      data-name='Path 10175'\r\n      d='M20.156 19.664H4.758a.43.43 0 0 1-.316-.105.337.337 0 0 1-.105-.246V3.844a.477.477 0 0 0-.141-.352.477.477 0 0 0-.352-.141.477.477 0 0 0-.352.141.477.477 0 0 0-.141.352v15.4a1.349 1.349 0 0 0 .422.984 1.349 1.349 0 0 0 .984.422h15.4a.477.477 0 0 0 .352-.141.477.477 0 0 0 .141-.352.477.477 0 0 0-.141-.352.477.477 0 0 0-.353-.141ZM19.8 9.258h-3.37a.477.477 0 0 0-.352.141.477.477 0 0 0-.141.352.605.605 0 0 0 .141.387.433.433 0 0 0 .352.176h2.531l-2.039 1.616h-3.867a.413.413 0 0 0-.352.211l-2.109 2.812H7.148a.477.477 0 0 0-.352.141.477.477 0 0 0-.141.352.477.477 0 0 0 .145.354.477.477 0 0 0 .352.141H10.8a.413.413 0 0 0 .352-.211l2.109-2.742h3.867a.283.283 0 0 0 .281-.141l2.25-1.828v2.531a.477.477 0 0 0 .141.35.477.477 0 0 0 .352.141.477.477 0 0 0 .352-.141.477.477 0 0 0 .141-.352v-3.375A.9.9 0 0 0 20.4 9.5a.814.814 0 0 0-.6-.242Z'\r\n      fill={props.fill || \"#686868\"}\r\n    />\r\n  </Svg>\r\n);\r\n\r\nexport default AnalyticsIcon;\r\n","import * as React from \"react\";\r\nimport Svg, { Path, G } from \"react-native-svg\";\r\n\r\nconst BathIcon = (props) => (\r\n  <Svg xmlns='http://www.w3.org/2000/svg' width={24} height={24} {...props}>\r\n    <Path data-name='Rectangle 243' fill='none' d='M0 0h24v24H0z' />\r\n    <G fill={props.fill || \"#919191\"}>\r\n      <Path\r\n        data-name='Path 10110'\r\n        d='m12.69 12.866-.79.79.788 1.576.776-.819-.774-1.548Z'\r\n      />\r\n      <Path\r\n        data-name='Path 10111'\r\n        d='m13.193 16.24.738 1.477.776-.819-.738-1.477-.776.819Z'\r\n      />\r\n      <Path\r\n        data-name='Path 10112'\r\n        d='m19.251 9.845-.766.808 1.471.7.766-.809-1.471-.7Z'\r\n      />\r\n      <Path\r\n        data-name='Path 10113'\r\n        d='m16.061 9.493 1.419.679.766-.809-1.39-.666-.794.794Z'\r\n      />\r\n      <Path\r\n        data-name='Path 10114'\r\n        d='m14.908 14.429.944 1.26.739-.781-.944-1.26-.739.781Z'\r\n      />\r\n      <Path\r\n        data-name='Path 10115'\r\n        d='m15.002 12.789-.958-1.278-.757.757.976 1.3.739-.781Z'\r\n      />\r\n      <Path\r\n        data-name='Path 10116'\r\n        d='m14.675 10.879 1.215.972.732-.772-1.195-.954-.751.754Z'\r\n      />\r\n      <Path\r\n        data-name='Path 10117'\r\n        d='m16.72 12.517 1.216.973.732-.772-1.216-.972-.732.772Z'\r\n      />\r\n      <Path\r\n        data-name='Path 10118'\r\n        d='m16.263 6.469-.869.869-.819-.817a3.7 3.7 0 0 0-5.228 0l-.033.034a2.582 2.582 0 0 0-4.069 2.109v7.982h1.06V8.664a1.523 1.523 0 0 1 2.386-1.253 3.7 3.7 0 0 0 .657 4.336l.819.819-.792.792.662.662 6.888-6.889Zm-5.421 5.273-.744-.744a2.637 2.637 0 1 1 3.728-3.73l.744.745Z'\r\n      />\r\n    </G>\r\n  </Svg>\r\n);\r\n\r\nexport default BathIcon;\r\n","import * as React from \"react\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\n\r\nconst BedIcon = (props) => (\r\n  <Svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    viewBox='0 0 24 24'\r\n    width={24}\r\n    height={24}\r\n    {...props}\r\n  >\r\n    <Path data-name='Rectangle 243' fill='none' d='M0 0h24v24H0z' />\r\n    <Path\r\n      d='M17.245 10.537V6.166h-1.333v1.333h-8V6.166H6.579v4.371a2.655 2.655 0 0 0-1.334 2.3v2.667a.667.667 0 0 0 .667.662h.667v2.667h1.333v-2.667h8v2.667h1.333v-2.667h.667a.667.667 0 0 0 .667-.667v-2.666a2.658 2.658 0 0 0-1.333-2.3Zm-1.333-1.704v1.333h-3.333V8.833Zm-8 0h3.333v1.333H7.912Zm9.333 6H6.579v-2A1.335 1.335 0 0 1 7.912 11.5h8a1.335 1.335 0 0 1 1.333 1.333Z'\r\n      fill={props.fill || \"#919191\"}\r\n    />\r\n  </Svg>\r\n);\r\n\r\nexport default BedIcon;\r\n","import * as React from \"react\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\n\r\nconst ChatSupportIcon = (props) => (\r\n  <Svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    viewBox='0 0 24 24'\r\n    width={24}\r\n    height={24}\r\n    {...props}\r\n  >\r\n    <Path data-name='Rectangle 275' fill='none' d='M0 0h24v24H0z' />\r\n    <Path\r\n      data-name='Path 10176'\r\n      d='M20.648 12.281a7.423 7.423 0 0 0-.668-3.094 9.013 9.013 0 0 0-1.863-2.672 8.459 8.459 0 0 0-2.848-1.863 8.133 8.133 0 0 0-3.41-.6 8.966 8.966 0 0 0-4.184 1.16 8.5 8.5 0 0 0-3.094 2.953 8.124 8.124 0 0 0-1.229 4.116v3.938a.675.675 0 0 0 .211.492.675.675 0 0 0 .492.211l6.258 3.023H12a.477.477 0 0 0 .352-.145.477.477 0 0 0 .141-.352.477.477 0 0 0-.141-.348.477.477 0 0 0-.352-.139h-1.477l-4.359-2.109a.676.676 0 0 0 .422-.633v-3.164a.7.7 0 0 0-.246-.562.8.8 0 0 0-.527-.211H4.336A7.082 7.082 0 0 1 5.461 8.66a7.673 7.673 0 0 1 2.742-2.6 7.927 7.927 0 0 1 3.656-1.02 8.338 8.338 0 0 1 3.059.563 7.544 7.544 0 0 1 2.531 1.617A7.293 7.293 0 0 1 19.1 9.574a6.752 6.752 0 0 1 .563 2.707h-1.405a.76.76 0 0 0-.562.211.76.76 0 0 0-.211.563v3.164a.76.76 0 0 0 .211.563.76.76 0 0 0 .563.211h1.617a.76.76 0 0 0 .563-.211.76.76 0 0 0 .211-.562v-3.939ZM5.6 15.938H4.336v-2.672H5.6Zm14.063 0h-1.2v-2.672h1.2Z'\r\n      fill={props.fill || \"#686868\"}\r\n    />\r\n  </Svg>\r\n);\r\n\r\nexport default ChatSupportIcon;\r\n","import * as React from \"react\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\n\r\nconst DrivingRoutesIcon = (props) => (\r\n  <Svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    viewBox='0 0 24 24'\r\n    width={24}\r\n    height={24}\r\n    {...props}\r\n  >\r\n    <Path data-name='Rectangle 275' fill='none' d='M0 0h24v24H0z' />\r\n    <Path\r\n      data-name='Path 10173'\r\n      d='M21.609 15.828a2.868 2.868 0 0 0-.859-2.109 2.868 2.868 0 0 0-2.109-.859 3 3 0 0 0-2.148.859 2.805 2.805 0 0 0-.9 2.109q0 1.25 1.953 4.3H7.625A1.7 1.7 0 0 1 6.3 19.5a1.961 1.961 0 0 1-.469-.781 2.036 2.036 0 0 1-.039-1.055 1.707 1.707 0 0 1 .664-1.016 2.084 2.084 0 0 1 1.328-.43h3.122a3.135 3.135 0 0 0 2.188-.859 2.734 2.734 0 0 0 .781-1.445 3.555 3.555 0 0 0-.117-1.714 2.615 2.615 0 0 0-1.094-1.445 3.111 3.111 0 0 0-1.758-.555H6.453q1.953-3.125 1.953-4.375a3 3 0 0 0-.859-2.148 2.805 2.805 0 0 0-2.109-.9 2.932 2.932 0 0 0-2.148.9 2.932 2.932 0 0 0-.9 2.148 6.664 6.664 0 0 0 1.172 2.891 17.45 17.45 0 0 0 1.406 2.344l.156.234h5.782a2.128 2.128 0 0 1 1.172.352 1.572 1.572 0 0 1 .7.9 2.226 2.226 0 0 1 .039 1.094 1.845 1.845 0 0 1-.508.938 1.808 1.808 0 0 1-1.328.547h-3.2a3 3 0 0 0-1.953.7 3.072 3.072 0 0 0-1.094 1.722 2.851 2.851 0 0 0 .078 1.484 3.167 3.167 0 0 0 .781 1.25 2.751 2.751 0 0 0 2.107.938l11.175-.078.391-.469q2.343-3.516 2.343-4.844ZM5.438 3.875a1.749 1.749 0 0 1 1.328.586 1.941 1.941 0 0 1 .547 1.367 4.915 4.915 0 0 1-.625 1.719q-.547 1.016-1.25 2.266-.781-1.25-1.328-2.266a4.915 4.915 0 0 1-.625-1.719 1.941 1.941 0 0 1 .547-1.367 1.837 1.837 0 0 1 1.406-.586Zm13.2 10.078a1.808 1.808 0 0 1 1.328.547 1.9 1.9 0 0 1 .547 1.406 4.375 4.375 0 0 1-.625 1.641 16.346 16.346 0 0 1-1.25 2.188q-.781-1.172-1.328-2.187a4.375 4.375 0 0 1-.625-1.641 1.9 1.9 0 0 1 .549-1.407 1.9 1.9 0 0 1 1.407-.547Zm.781 1.641a.75.75 0 0 0-.234-.547.8.8 0 0 0-.586-.234.8.8 0 0 0-.586.234.8.8 0 0 0-.234.586.8.8 0 0 0 .234.586.8.8 0 0 0 .586.234.8.8 0 0 0 .586-.234.845.845 0 0 0 .237-.625Zm-13.2-10a.845.845 0 0 0-.234-.625.8.8 0 0 0-.586-.234.8.8 0 0 0-.586.234.8.8 0 0 0-.234.586.8.8 0 0 0 .234.586.8.8 0 0 0 .586.234.8.8 0 0 0 .586-.234.75.75 0 0 0 .234-.547Z'\r\n      fill={props.fill || \"#686868\"}\r\n    />\r\n  </Svg>\r\n);\r\n\r\nexport default DrivingRoutesIcon;\r\n","import * as React from \"react\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\n\r\nconst FeatureRequestIcon = (props) => (\r\n  <Svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    viewBox='0 0 24 24'\r\n    width={24}\r\n    height={24}\r\n    {...props}\r\n  >\r\n    <Path data-name='Rectangle 275' fill='none' d='M0 0h24v24H0z' />\r\n    <Path\r\n      data-name='Path 10177'\r\n      d='M18.609 9.891a6.206 6.206 0 0 0-.914-3.27A6.773 6.773 0 0 0 15.27 4.23 6.394 6.394 0 0 0 12 3.352a6.394 6.394 0 0 0-3.27.879 6.773 6.773 0 0 0-2.43 2.39A6.4 6.4 0 0 0 5.391 10a6.236 6.236 0 0 0 1.019 3.441A6.271 6.271 0 0 0 9.117 15.8v3.445a1.238 1.238 0 0 0 .422.949 1.33 1.33 0 0 0 .914.387h3.164a1.291 1.291 0 0 0 .949-.387 1.291 1.291 0 0 0 .387-.949V15.8a6.889 6.889 0 0 0 2.637-2.429 6.3 6.3 0 0 0 1.019-3.48Zm-4.641 6.4v3.023a.337.337 0 0 1-.105.246.337.337 0 0 1-.246.105h-3.094a.337.337 0 0 1-.246-.105.337.337 0 0 1-.105-.246v-3.025h.141A6.935 6.935 0 0 0 12 16.5a6.935 6.935 0 0 0 1.688-.211Zm-1.476-.775V11.93l1.688-1.336a.276.276 0 0 0 .211-.281.738.738 0 0 0-.105-.387.434.434 0 0 0-.316-.211.575.575 0 0 0-.422.105l-1.125.844V8.977a.477.477 0 0 0-.141-.352.477.477 0 0 0-.352-.141.477.477 0 0 0-.352.141.477.477 0 0 0-.141.352v1.758L10.1 9.82a.381.381 0 0 0-.352-.105.434.434 0 0 0-.316.211.483.483 0 0 0-.07.352.613.613 0 0 0 .176.316l1.9 1.336v3.516a5.706 5.706 0 0 1-2.5-.879 5.565 5.565 0 0 1-1.86-1.967 5.36 5.36 0 0 1-.7-2.707 5.345 5.345 0 0 1 .773-2.777A5.668 5.668 0 0 1 9.19 5.077 5.479 5.479 0 0 1 12 4.336a5.479 5.479 0 0 1 2.813.738 5.668 5.668 0 0 1 2.039 2.039 5.345 5.345 0 0 1 .773 2.777 5.36 5.36 0 0 1-.7 2.707 5.877 5.877 0 0 1-1.863 2 5.553 5.553 0 0 1-2.57.919Z'\r\n      fill={props.fill || \"#686868\"}\r\n    />\r\n  </Svg>\r\n);\r\n\r\nexport default FeatureRequestIcon;\r\n","import * as React from \"react\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\n\r\nconst LogoutIcon = (props) => (\r\n  <Svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    viewBox='0 0 24 24'\r\n    width={24}\r\n    height={24}\r\n    {...props}\r\n  >\r\n    <Path data-name='Rectangle 275' fill='none' d='M0 0h24v24H0z' />\r\n    <Path\r\n      data-name='Path 10179'\r\n      d='M7.008 12.492h7.242a.477.477 0 0 0 .352-.141.477.477 0 0 0 .14-.351.477.477 0 0 0-.141-.352.477.477 0 0 0-.352-.141h-7.1l1.477-1.477a.63.63 0 0 0 .174-.35.351.351 0 0 0-.141-.352.563.563 0 0 0-.352-.141.713.713 0 0 0-.387.141l-2.037 2.11a.913.913 0 0 0-.281.668.7.7 0 0 0 .281.6l2.039 2.107a.477.477 0 0 0 .352.141.433.433 0 0 0 .352-.176.563.563 0 0 0 .141-.352.437.437 0 0 0-.141-.316Zm9-9.141H12.7a1.1 1.1 0 0 0-.844.387 1.271 1.271 0 0 0-.352.879v2.6a.477.477 0 0 0 .141.352.477.477 0 0 0 .355.142.477.477 0 0 0 .352-.141.477.477 0 0 0 .141-.352V4.546a.2.2 0 0 1 .07-.141.287.287 0 0 1 .211-.07h3.3a1.349 1.349 0 0 1 .984.422 1.349 1.349 0 0 1 .422.984v12.447a1.317 1.317 0 0 1-.422 1.02 1.411 1.411 0 0 1-.984.387H12.7a.2.2 0 0 1-.141-.07.2.2 0 0 1-.07-.141v-2.6a.477.477 0 0 0-.141-.352.477.477 0 0 0-.348-.143.605.605 0 0 0-.387.141.433.433 0 0 0-.176.352v2.6a1.1 1.1 0 0 0 .387.844 1.271 1.271 0 0 0 .876.352H16a2.363 2.363 0 0 0 1.7-.668 2.27 2.27 0 0 0 .7-1.723V5.742a2.3 2.3 0 0 0-.7-1.687 2.3 2.3 0 0 0-1.692-.703Z'\r\n      fill={props.fill || \"#686868\"}\r\n    />\r\n  </Svg>\r\n);\r\n\r\nexport default LogoutIcon;\r\n","import * as React from \"react\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\n\r\nconst MoreIcon = ({ fill }) => (\r\n  <Svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    viewBox='0 0 24 24'\r\n    width={24}\r\n    height={24}\r\n  >\r\n    <Path data-name='Rectangle 275' fill='none' d='M0 0h24v24H0z' />\r\n    <Path\r\n      data-name='Path 10128'\r\n      d='M12 3.844a1.964 1.964 0 0 0-1.441.6 1.964 1.964 0 0 0-.6 1.441 1.964 1.964 0 0 0 .6 1.441A1.964 1.964 0 0 0 12 7.922a1.964 1.964 0 0 0 1.441-.6 1.964 1.964 0 0 0 .6-1.441 1.964 1.964 0 0 0-.6-1.441A1.964 1.964 0 0 0 12 3.844Zm0 6.117a1.964 1.964 0 0 0-1.441.6A1.964 1.964 0 0 0 9.961 12a1.964 1.964 0 0 0 .6 1.441 1.964 1.964 0 0 0 1.439.598 1.964 1.964 0 0 0 1.441-.6A1.964 1.964 0 0 0 14.039 12a1.964 1.964 0 0 0-.6-1.441A1.964 1.964 0 0 0 12 9.961Zm0 6.117a1.964 1.964 0 0 0-1.441.6 1.964 1.964 0 0 0-.6 1.441 1.964 1.964 0 0 0 .6 1.441 1.964 1.964 0 0 0 1.441.596 1.964 1.964 0 0 0 1.441-.6 1.964 1.964 0 0 0 .6-1.441 1.964 1.964 0 0 0-.6-1.441A1.964 1.964 0 0 0 12 16.078Z'\r\n      fill={fill || \"#a7a7a7\"}\r\n    />\r\n  </Svg>\r\n);\r\n\r\nexport default MoreIcon;\r\n","import * as React from \"react\"\r\nimport Svg, { Path, G } from \"react-native-svg\"\r\n\r\nconst NotesIcon = ({fill}) => (\r\n  <Svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width={24} height={24} >\r\n    <Path data-name=\"Rectangle 243\" fill=\"none\" d=\"M0 0h24v24H0z\" />\r\n    <G fill={fill || \"#7d2be9\"}>\r\n      <Path\r\n        data-name=\"Path 10125\"\r\n        d=\"M15.666 17.78H5.889V8.003h5.876l.889-.889H5.889A.889.889 0 0 0 5 8.003v9.778a.889.889 0 0 0 .889.889h9.778a.889.889 0 0 0 .889-.889v-6.667l-.889.889Z\"\r\n      />\r\n      <Path\r\n        data-name=\"Path 10126\"\r\n        d=\"m18.122 7.047-1.5-1.5a.716.716 0 0 0-1.013 0l-6.087 6.127-.5 2.138a.716.716 0 0 0 .7.857.751.751 0 0 0 .164 0l2.156-.476 6.08-6.137a.716.716 0 0 0 0-1.013Zm-6.54 6.324-1.627.36.378-1.613L14.922 7.5l1.253 1.253Zm5.093-5.124-1.253-1.249.689-.7 1.262 1.262Z\"\r\n      />\r\n    </G>\r\n  </Svg>\r\n)\r\n\r\nexport default NotesIcon\r\n","import * as React from \"react\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\nimport { vw, vh } from \"../../util\";\r\n\r\nconst ReportIssueIcon = ({ fill, width, height }) => (\r\n  <Svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    viewBox='0 0 24 24'\r\n    width={vw(width || 24)}\r\n    height={vh(height || 24)}\r\n  >\r\n    <Path data-name='Rectangle 275' fill='none' d='M0 0h24v24H0z' />\r\n    <Path\r\n      data-name='Path 10191'\r\n      d='M12 2.25a9.546 9.546 0 0 0-4.922 1.336 9.6 9.6 0 0 0-3.492 3.492A9.546 9.546 0 0 0 2.25 12a9.546 9.546 0 0 0 1.336 4.922 9.6 9.6 0 0 0 3.492 3.492A9.546 9.546 0 0 0 12 21.75a9.546 9.546 0 0 0 4.922-1.336 9.6 9.6 0 0 0 3.492-3.492A9.546 9.546 0 0 0 21.75 12a9.546 9.546 0 0 0-1.336-4.922 9.6 9.6 0 0 0-3.492-3.492A9.546 9.546 0 0 0 12 2.25Zm0 1.5a8.114 8.114 0 0 1 4.172 1.125 8.355 8.355 0 0 1 2.953 2.953A8.114 8.114 0 0 1 20.25 12a8.114 8.114 0 0 1-1.125 4.172 8.355 8.355 0 0 1-2.953 2.953A8.114 8.114 0 0 1 12 20.25a8.114 8.114 0 0 1-4.172-1.125 8.355 8.355 0 0 1-2.953-2.953A8.114 8.114 0 0 1 3.75 12a8.114 8.114 0 0 1 1.125-4.172 8.355 8.355 0 0 1 2.953-2.953A8.114 8.114 0 0 1 12 3.75Zm-.75 3.75V9h1.5V7.5Zm0 3v6h1.5v-6Z'\r\n      fill={fill || \"#686868\"}\r\n    />\r\n  </Svg>\r\n);\r\n\r\nexport default ReportIssueIcon;\r\n","import * as React from \"react\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\nimport { vh, vw } from \"../../util\";\r\n\r\nconst SearchIcon = ({ fill, width, height }) => (\r\n  <Svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    viewBox='0 0 24 24'\r\n    width={vw(width||24)}\r\n    height={vh(height || 24)}\r\n  >\r\n    <Path data-name='Rectangle 37' fill='none' d='M0 0h24v24H0z' />\r\n    <Path\r\n      data-name='Path 161'\r\n      d='m17.03 15.85 3.57 3.57-1.18 1.17-3.57-3.56a7.623 7.623 0 0 1-2.205 1.215 7.389 7.389 0 0 1-2.475.425 7.4 7.4 0 0 1-2.92-.59 7.388 7.388 0 0 1-2.385-1.61 7.516 7.516 0 0 1-1.605-2.38 7.457 7.457 0 0 1-.59-2.925 7.385 7.385 0 0 1 .59-2.915 7.427 7.427 0 0 1 1.605-2.385A7.427 7.427 0 0 1 8.25 4.26a7.385 7.385 0 0 1 2.915-.59 7.457 7.457 0 0 1 2.925.59 7.516 7.516 0 0 1 2.38 1.605 7.388 7.388 0 0 1 1.61 2.385 7.4 7.4 0 0 1 .59 2.92 7.389 7.389 0 0 1-.425 2.475 7.623 7.623 0 0 1-1.215 2.205Zm-1.68-.62a5.724 5.724 0 0 0 1.225-1.875A5.8 5.8 0 0 0 17 11.17a5.734 5.734 0 0 0-.46-2.27 5.75 5.75 0 0 0-1.25-1.86 5.78 5.78 0 0 0-1.85-1.25 5.793 5.793 0 0 0-2.275-.46 5.721 5.721 0 0 0-2.265.46 5.75 5.75 0 0 0-1.86 1.25A5.75 5.75 0 0 0 5.79 8.9a5.721 5.721 0 0 0-.46 2.265 5.793 5.793 0 0 0 .46 2.275 5.78 5.78 0 0 0 1.25 1.85 5.75 5.75 0 0 0 1.86 1.25 5.734 5.734 0 0 0 2.27.46 5.8 5.8 0 0 0 2.185-.425 5.724 5.724 0 0 0 1.875-1.225Z'\r\n      fill={fill || \"#686868\"}\r\n    />\r\n  </Svg>\r\n);\r\n\r\nexport default SearchIcon;\r\n","import * as React from \"react\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\n\r\nconst SettingsIcon = (props) => (\r\n  <Svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    viewBox='0 0 24 24'\r\n    width={24}\r\n    height={24}\r\n    {...props}\r\n  >\r\n    <Path data-name='Rectangle 275' fill='none' d='M0 0h24v24H0z' />\r\n    <Path\r\n      data-name='Path 10172'\r\n      d='M12 8.555a3.313 3.313 0 0 0-2.426 1.02A3.313 3.313 0 0 0 8.555 12a3.313 3.313 0 0 0 1.02 2.426 3.353 3.353 0 0 0 2.461 1.02 3.353 3.353 0 0 0 2.464-1.02A3.192 3.192 0 0 0 15.48 12a3.442 3.442 0 0 0-1.055-2.426A3.313 3.313 0 0 0 12 8.555Zm0 5.906a2.419 2.419 0 0 1-1.723-.7A2.327 2.327 0 0 1 9.539 12a2.327 2.327 0 0 1 .738-1.758 2.461 2.461 0 0 1 1.758-.7 2.461 2.461 0 0 1 1.758.7A2.218 2.218 0 0 1 14.5 12a2.51 2.51 0 0 1-.738 1.758 2.385 2.385 0 0 1-1.762.703Zm8.3-.492-1.758-.984a8.788 8.788 0 0 0 .07-1.09 7.2 7.2 0 0 0-.07-1.02l1.758-.984a.628.628 0 0 0 .352-.387.527.527 0 0 0-.07-.457l-1.687-2.883a.431.431 0 0 0-.316-.281 1 1 0 0 0-.527 0l-1.828 1.055-.352-.281a3.53 3.53 0 0 0-1.055-.773q-.141 0-.141-.211V4.548a1.151 1.151 0 0 0-.352-.844 1.151 1.151 0 0 0-.844-.352h-2.957a1.151 1.151 0 0 0-.844.352 1.151 1.151 0 0 0-.352.844v1.125a.405.405 0 0 1-.141.281 5.333 5.333 0 0 0-1.125.7l-.281.281-1.617-.914a.835.835 0 0 0-.633-.141.629.629 0 0 0-.422.352L3.492 8.977a.793.793 0 0 0-.07.563.452.452 0 0 0 .352.352l1.758.984a3.824 3.824 0 0 0-.141 1.054l.07 1.055-1.761.984a.628.628 0 0 0-.352.387.527.527 0 0 0 .07.457L5.039 17.7a.672.672 0 0 0 .387.281 1 1 0 0 0 .527 0l1.828-1.059.352.352a3.091 3.091 0 0 0 .984.633.283.283 0 0 1 .141.281v1.2a1.211 1.211 0 0 0 .387.879 1.211 1.211 0 0 0 .879.387h2.953a1.1 1.1 0 0 0 .844-.387 1.271 1.271 0 0 0 .352-.879v-1.271a.225.225 0 0 1 .141-.211 4.926 4.926 0 0 0 .984-.7l.422-.352 1.617.914a.835.835 0 0 0 .633.141.683.683 0 0 0 .422-.281l1.617-2.742a.891.891 0 0 0 .105-.527.515.515 0 0 0-.314-.39Zm-2.112 2.953-1.547-.914a.7.7 0 0 0-.492-.105 1.125 1.125 0 0 0-.492.176l-.562.492a2.667 2.667 0 0 1-.7.457.88.88 0 0 0-.457.422 1.355 1.355 0 0 0-.176.668v1.266a.286.286 0 0 1-.07.211.286.286 0 0 1-.211.07h-2.958a.2.2 0 0 1-.141-.07.286.286 0 0 1-.07-.211v-1.2a1.185 1.185 0 0 0-.212-.664 1.2 1.2 0 0 0-.562-.457 2.448 2.448 0 0 1-.772-.563l-.422-.352a.715.715 0 0 0-.527-.211.628.628 0 0 0-.457.141l-1.547.844-1.336-2.25 1.477-.844a.92.92 0 0 0 .422-.422.793.793 0 0 0 .07-.562l-.07-.914a6.1 6.1 0 0 1 .07-.844.958.958 0 0 0-.07-.633.92.92 0 0 0-.422-.422l-1.477-.844 1.336-2.25 1.547.914a.969.969 0 0 0 .563.105 1.125 1.125 0 0 0 .492-.176l.422-.422a6.338 6.338 0 0 1 .773-.492 1.3 1.3 0 0 0 .49-.456 1.185 1.185 0 0 0 .211-.668V4.617a.2.2 0 0 1 .07-.141.2.2 0 0 1 .141-.07h2.953a.286.286 0 0 1 .211.07.2.2 0 0 1 .07.141v1.125a1.169 1.169 0 0 0 .176.633 1.084 1.084 0 0 0 .492.422 3.057 3.057 0 0 1 .809.633l.422.281a.675.675 0 0 0 .492.211 1.248 1.248 0 0 0 .563-.141l1.547-.844 1.336 2.25-1.547.844a.757.757 0 0 0-.387.422 1.169 1.169 0 0 0-.07.563 8.293 8.293 0 0 1 .035.914 4.514 4.514 0 0 1-.07.809 1.045 1.045 0 0 0 .07.668.92.92 0 0 0 .422.422l1.477.844Z'\r\n      fill={props.fill || \"#686868\"}\r\n    />\r\n  </Svg>\r\n);\r\n\r\nexport default SettingsIcon;\r\n","import * as React from \"react\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\n\r\nconst SqftIcon = (props) => (\r\n  <Svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    viewBox='0 0 24 24'\r\n    width={24}\r\n    height={24}\r\n    {...props}\r\n  >\r\n    <Path data-name='Rectangle 243' fill='none' d='M0 0h24v24H0z' />\r\n    <Path\r\n      data-name='Path 10126'\r\n      d='M6.169 6.569h2.912v2.912H6.169Zm0 8.75h2.912v2.912H6.169Zm8.75-8.75h2.912v2.912h-2.912Zm0 8.75h2.912v2.912h-2.912Zm-5.25-7.588h4.662V8.9H9.669Zm-2.338 2.338H8.5v4.662H7.331Zm8.169 0h1.169v4.662H15.5ZM9.669 15.9h4.662v1.169H9.669Z'\r\n      fill={props.fill || \"#919191\"}\r\n    />\r\n  </Svg>\r\n);\r\n\r\nexport default SqftIcon;\r\n","import * as React from \"react\";\r\nimport Svg, { Path } from \"react-native-svg\";\r\n\r\nconst TeamIcon = (props) => (\r\n  <Svg\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    viewBox='0 0 24 24'\r\n    width={24}\r\n    height={24}\r\n    {...props}\r\n  >\r\n    <Path data-name='Rectangle 275' fill='none' d='M0 0h24v24H0z' />\r\n    <Path\r\n      data-name='Path 10174'\r\n      d='M8.391 13.547a4.049 4.049 0 0 0 2.964-1.247A4.1 4.1 0 0 0 12.6 9.293a4.1 4.1 0 0 0-1.245-3.008A4.049 4.049 0 0 0 8.39 5.039a4.049 4.049 0 0 0-2.965 1.246A4.1 4.1 0 0 0 4.18 9.293 4.1 4.1 0 0 0 5.426 12.3a4.049 4.049 0 0 0 2.965 1.247Zm0-7.3a2.886 2.886 0 0 1 2.105.9 2.934 2.934 0 0 1 .9 2.148 3.008 3.008 0 0 1-.859 2.148 2.844 2.844 0 0 1-2.148.9 2.844 2.844 0 0 1-2.148-.9 3.008 3.008 0 0 1-.859-2.148 3.008 3.008 0 0 1 .859-2.148 2.844 2.844 0 0 1 2.15-.905Zm0 8.766a8.994 8.994 0 0 0-3.652.773A10.2 10.2 0 0 0 1.6 17.93a.583.583 0 0 0-.172.43.583.583 0 0 0 .172.43.583.583 0 0 0 .43.172.583.583 0 0 0 .43-.172 8 8 0 0 1 2.708-1.935 7.987 7.987 0 0 1 3.18-.645 7.987 7.987 0 0 1 3.18.645 8 8 0 0 1 2.706 1.934.872.872 0 0 0 .473.172.688.688 0 0 0 .43-.172.529.529 0 0 0 .215-.43.5.5 0 0 0-.258-.43A10.363 10.363 0 0 0 12 15.781a8.7 8.7 0 0 0-3.609-.773Zm9.023-1.466a2.262 2.262 0 0 0 1.719-.73 2.426 2.426 0 0 0 .687-1.717 2.28 2.28 0 0 0-.687-1.676 2.28 2.28 0 0 0-1.676-.687 2.426 2.426 0 0 0-1.719.688 2.214 2.214 0 0 0-.73 1.676 2.352 2.352 0 0 0 .73 1.719 2.3 2.3 0 0 0 1.676.727Zm0-3.7a1.166 1.166 0 0 1 .859.344 1.166 1.166 0 0 1 .344.859 1.166 1.166 0 0 1-.344.859 1.115 1.115 0 0 1-.816.344 1.263 1.263 0 0 1-.859-.344 1.1 1.1 0 0 1-.387-.859 1.1 1.1 0 0 1 .389-.85 1.215 1.215 0 0 1 .814-.348Zm4.986 7.137a7.278 7.278 0 0 0-3.18-1.762 7.369 7.369 0 0 0-3.781.043.756.756 0 0 0-.3.3.59.59 0 0 0-.088.435.511.511 0 0 0 .258.344.9.9 0 0 0 .473.129 5.966 5.966 0 0 1 3.094-.043 6 6 0 0 1 2.663 1.414.534.534 0 0 0 .387.172.688.688 0 0 0 .43-.172.529.529 0 0 0 .215-.43.583.583 0 0 0-.171-.43Z'\r\n      fill={props.fill || \"#686868\"}\r\n    />\r\n  </Svg>\r\n);\r\n\r\nexport default TeamIcon;\r\n","import React from 'react';\r\n\r\nconst SocketContext = React.createContext();\r\n\r\nexport default SocketContext;\r\n","import React, { useState } from \"react\";\r\nimport { Box, HStack, useBreakpointValue, VStack } from \"native-base\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport ShadowButton from \"../../../components/ShadowButton\";\r\nimport ShadowModal from \"../../../components/ShadowModal\";\r\nimport ShadowInput from \"../../../components/ShadowInput\";\r\nimport * as pipelineActions from \"../../../store/actions/pipelines\";\r\nimport { vh, vw } from \"../../../util\";\r\n\r\nconst AddPipeline = ({ setShowModal, showModal, _showAlert }) => {\r\n  const dispatch = useDispatch();\r\n  const [isSaving, setIsSaving] = useState(false);\r\n\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm({\r\n    mode: \"all\",\r\n  });\r\n\r\n  const onSubmit = async (data) => {\r\n    // const name = nameRef.current.value;\r\n\r\n    if (!data.name) {\r\n      _showAlert(\"error\", \"Pipeline name is required.\");\r\n      return;\r\n    }\r\n    setIsSaving(true);\r\n    try {\r\n      const action = pipelineActions.addPipeline(data, null);\r\n      await dispatch(action);\r\n      reset();\r\n      setIsSaving(false);\r\n      setShowModal(false);\r\n      _showAlert(\"success\", \"Pipeline created successfully.\");\r\n    } catch (err) {\r\n      console.log(err.message);\r\n      _showAlert(\"error\", \"An error occured, cannot create pipeline.\");\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ShadowModal\r\n      size='md'\r\n      height={vh(250)}\r\n      bodyHeight={vh(80)}\r\n      // width={vw(400)}\r\n      isOpen={showModal}\r\n      close={() => {\r\n        reset();\r\n        setShowModal(false);\r\n      }}\r\n      cancel={() => {\r\n        reset();\r\n        setShowModal(false);\r\n      }}\r\n      save={handleSubmit(onSubmit)}\r\n      header='Add Pipeline'\r\n      buttons={\r\n        <HStack space={2}>\r\n          <ShadowButton\r\n            space={2}\r\n            onPress={() => {\r\n              reset();\r\n              setShowModal(false);\r\n            }}\r\n            color='rgba(0,0,0, 0.5)'\r\n            variant='outline'\r\n            label='Cancel'\r\n            style={{ height: vh(36) }}\r\n          />\r\n          <ShadowButton\r\n          space={3}\r\n            isLoading={isSaving}\r\n            onPress={handleSubmit(onSubmit)}\r\n            color='white'\r\n            label='Save'\r\n            style={{ height: vh(36) }}\r\n          />\r\n        </HStack>\r\n      }\r\n    >\r\n      <VStack marginTop={vh(-20)}>\r\n        <ShadowInput\r\n          autoFocus={true}\r\n          style={{ width: \"100%\" }}\r\n          onKeyPress={(e) => {\r\n            if (e.key === \"Tab\" || e.key === \"Enter\") {\r\n              e.preventDefault();\r\n              setIsSaving(true);\r\n              handleSubmit(onSubmit, () => {\r\n                setIsSaving(false);\r\n              })();\r\n            }\r\n          }}\r\n          name='name'\r\n          label={\"Pipeline Name\"}\r\n          placeholder='Pipeline Name'\r\n          control={control}\r\n          rules={{\r\n            required: {\r\n              value: true,\r\n              message: \"Please enter pipeline name\",\r\n            },\r\n          }}\r\n          invalid={errors.name ? true : false}\r\n          error={errors.name ? errors.name.message : \"\"}\r\n          inputStyle={{}}\r\n        />\r\n      </VStack>\r\n    </ShadowModal>\r\n  );\r\n};\r\n\r\nexport default AddPipeline;\r\n","import React, { useState } from \"react\";\r\nimport { Menu, Text, Pressable } from \"native-base\";\r\n\r\nimport Colors from \"../../../constants/Colors\";\r\nimport { vw, vh } from \"../../../util\";\r\nimport MoreIcon from \"../../../components/svg/MoreIcon\";\r\n\r\nconst ContactMenu = ({ setIsAlertOpen, setShowMoveDialog }) => {\r\n  const [isHover, setIsHover] = useState(null);\r\n  return (\r\n    <Menu\r\n      backgroundColor={\"white\"}\r\n      placement='left top'\r\n      borderRadius={vw(10)}\r\n      borderWidth={0}\r\n      marginTop={vh(20)}\r\n      trigger={(triggerProps) => {\r\n        return (\r\n          <Pressable accessibilityLabel='More options menu' {...triggerProps}>\r\n            <MoreIcon />\r\n          </Pressable>\r\n        );\r\n      }}\r\n    >\r\n      <Menu.Item\r\n        background={\"none\"}\r\n        onHoverIn={() => {\r\n          setIsHover(\"move\");\r\n        }}\r\n        onHoverOut={() => {\r\n          setIsHover(null);\r\n        }}\r\n        // _pressed={{\r\n        //   borderWidth: 1,\r\n        //   borderColor: Colors.primary,\r\n        //   borderRadius: 50,\r\n        //   backgroundColor: \"white\",\r\n        // }}\r\n        borderWidth={1}\r\n        borderColor='transparent'\r\n        onPress={async (e) => {\r\n          e.preventDefault();\r\n          setShowMoveDialog(true);\r\n        }}\r\n      >\r\n        <Text\r\n          style={{\r\n            textAlign: \"left\",\r\n            fontFamily: \"Poppins\",\r\n            color: isHover === \"move\" ? Colors.primary : \"#686868\",\r\n            fontSize: vw(15),\r\n          }}\r\n        >\r\n          Move\r\n        </Text>\r\n      </Menu.Item>\r\n      <Menu.Item\r\n        background={\"none\"}\r\n        onHoverIn={() => {\r\n          setIsHover(\"delete\");\r\n        }}\r\n        onHoverOut={() => {\r\n          setIsHover(null);\r\n        }}\r\n        // _pressed={{\r\n        //   borderWidth: 1,\r\n        //   borderColor: Colors.primary,\r\n        //   borderRadius: 50,\r\n        //   backgroundColor: \"white\",\r\n        // }}\r\n        borderWidth={1}\r\n        borderColor='transparent'\r\n        onPress={(e) => {\r\n          e.preventDefault();\r\n          setIsAlertOpen(true);\r\n        }}\r\n      >\r\n        <Text\r\n          style={{\r\n            textAlign: \"left\",\r\n            fontFamily: \"Poppins\",\r\n            color: isHover === \"delete\" ? Colors.primary : \"#686868\",\r\n            fontSize: vw(15),\r\n          }}\r\n        >\r\n          Delete\r\n        </Text>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default ContactMenu;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Popover,\r\n  VStack,\r\n  Input,\r\n  Spinner,\r\n  Pressable,\r\n  ScrollView,\r\n  HStack,\r\n  Text,\r\n} from \"native-base\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport moment from \"moment-timezone\";\r\n\r\nimport { vw, vh } from \"../../../util\";\r\nimport NotesIcon from \"../../../components/svg/NotesIcon\";\r\nimport * as propertiesActions from \"../../../store/actions/properties\";\r\nimport Colors from \"../../../constants/Colors\";\r\n\r\nconst ContactNotes = ({ _id, notes, _showAlert }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const NoteForm = () => {\r\n    const [isFocused, setIsFocused] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [note, setNote] = useState();\r\n    const saveNote = async () => {\r\n      if (note === \"\") {\r\n        return;\r\n      }\r\n      setIsLoading(true);\r\n      const action = propertiesActions.savePropertyNote({\r\n        _id,\r\n        note,\r\n      });\r\n      try {\r\n        await dispatch(action);\r\n        setNote(\"\");\r\n        setIsLoading(false);\r\n      } catch (err) {\r\n        console.log(err);\r\n        _showAlert(\"error\", \"Error\", \"An error occurred cannot add note.\");\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    return (\r\n      <VStack w='100%'>\r\n        <Input\r\n          autoComplete='Off'\r\n          autoFocus={true}\r\n          variant={\"underlined\"}\r\n          value={note}\r\n          placeholder={\"Type your note and hit return\"}\r\n          placeholderTextColor={\"#9ca3af\"}\r\n          onSubmitEditing={(e) => {\r\n            saveNote();\r\n          }}\r\n          onBlur={() => setIsFocused(false)}\r\n          onFocus={() => setIsFocused(true)}\r\n          onChangeText={(txt) => {\r\n            setNote(txt);\r\n          }}\r\n          style={{\r\n            fontSize: vw(16),\r\n            fontFamily: \"Poppins\",\r\n            paddingVertical: vh(5),\r\n            marginLeft: 0,\r\n            textAlign: \"left\",\r\n            // borderWidth: 0,\r\n            // borderBottomWidth: 1,\r\n            // borderBottomColor: isFocused ? Colors.primary : \"#e5e7eb\",\r\n            width: \"100%\",\r\n          }}\r\n          selectionColor={Colors.primary}\r\n        />\r\n        {isLoading && (\r\n          <Spinner\r\n            top={vh(10)}\r\n            right={vw(10)}\r\n            position={\"absolute\"}\r\n            color={Colors.primary}\r\n            size={\"sm\"}\r\n          />\r\n        )}\r\n      </VStack>\r\n    );\r\n  };\r\n\r\n  const NoteItem = ({ item }) => {\r\n    return (\r\n      <VStack style={{ paddingVertical: 5 }}>\r\n        <Text\r\n          style={{\r\n            color: \"rgba(0,0,0,1)\",\r\n            fontSize: 14,\r\n            fontFamily: \"Poppins\",\r\n          }}\r\n        >\r\n          {item.note}\r\n        </Text>\r\n        <Text\r\n          style={{\r\n            color: \"rgba(0,0,0,0.5)\",\r\n            fontSize: 11,\r\n            fontFamily: \"Poppins\",\r\n          }}\r\n        >\r\n          {item.createdname +\r\n            \" - \" +\r\n            moment(item.created).format(\"MM/DD/YYYY - hh:mm A\")}\r\n        </Text>\r\n      </VStack>\r\n    );\r\n  };\r\n\r\n  const NoteList = ({ notes }) => {\r\n    return (\r\n      <ScrollView marginBottom={5} maxHeight={200}>\r\n        {notes &&\r\n          notes.length > 0 &&\r\n          notes.map((item, idx) => <NoteItem key={\"n-\" + idx} item={item} />)}\r\n      </ScrollView>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Popover\r\n      backgroundColor={\"white\"}\r\n      placement='left center'\r\n      trigger={(triggerProps) => {\r\n        return (\r\n          <Pressable {...triggerProps} width={\"100%\"}>\r\n            <HStack\r\n              justifyContent={\"flex-start\"}\r\n              width={\"100%\"}\r\n              space={0.5}\r\n              alignItems='left'\r\n              marginLeft={\"25%\"}\r\n              paddingTop={vh(20)}\r\n            >\r\n              <NotesIcon />\r\n              <Text\r\n                style={{\r\n                  fontFamily: \"Poppins_medium\",\r\n                  color: \"rgba(125, 43, 233, 1)\",\r\n                  fontSize: vw(14),\r\n                  marginTop: vh(1),\r\n                  textAlign: \"left\",\r\n                }}\r\n              >\r\n                {`Notes ${\r\n                  notes && notes.length > 0 ? \" (\" + notes.length + \")\" : \"\"\r\n                }`}\r\n              </Text>\r\n            </HStack>\r\n          </Pressable>\r\n        );\r\n      }}\r\n    >\r\n      <Popover.Content\r\n        style={{ backgroundColor: \"white\" }}\r\n        accessibilityLabel='Notes'\r\n      >\r\n        <Popover.Arrow />\r\n        <Popover.CloseButton />\r\n        <Popover.Header\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            borderBottomColor: \"white\",\r\n            borderBottomWidth: 0,\r\n          }}\r\n        >\r\n          Notes\r\n        </Popover.Header>\r\n        <Popover.Body\r\n          style={{ backgroundColor: \"white\", width: vh(300) }}\r\n          width={\"md\"}\r\n          flex={1}\r\n        >\r\n          <VStack space={2} style={{ height: vh(200), width: vh(280) }}>\r\n            <NoteForm />\r\n            <NoteList notes={notes} />\r\n          </VStack>\r\n        </Popover.Body>\r\n      </Popover.Content>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default ContactNotes;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  HStack,\r\n  VStack,\r\n  Text,\r\n  Select,\r\n  CheckIcon,\r\n  AlertDialog,\r\n  Modal,\r\n  Button,\r\n  Center,\r\n  Box,\r\n} from \"native-base\";\r\nimport moment from \"moment-timezone\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { vw, vh } from \"../../../util\";\r\nimport * as pipelineActions from \"../../../store/actions/pipelines\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport DropDownIcon from \"../../../components/svg/DropDownIcon\";\r\nimport ShadowButton from \"../../../components/ShadowButton\";\r\nimport ContactMenu from \"./ContactMenu\";\r\nimport ContactNotes from \"./ContactNotes\";\r\n\r\nconst HorizontalItem = ({\r\n  isEnd,\r\n  item,\r\n  pipelines,\r\n  activePipeline,\r\n  socket,\r\n  _showAlert,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const createdUser = item.createdUser && item.createdUser;\r\n  // user name\r\n  const fullname =\r\n    createdUser && createdUser.firstname + \" \" + createdUser.lastname;\r\n\r\n  //property owner name\r\n  const name = item.name && item.name !== \"\" ? item.name.trim() : \"-\";\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [propertyPipeline, setPropertyPipeline] = useState();\r\n  const [showMoveDialog, setShowMoveDialog] = useState(false);\r\n\r\n  const moveProperty = async (pipeline) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const action = pipelineActions.moveProperty(\r\n        {\r\n          from: activePipeline._id,\r\n          to: pipeline,\r\n          property: item._id,\r\n        },\r\n        null\r\n      );\r\n      const to = pipelines.find((p) => p._id === pipeline);\r\n\r\n      await dispatch(action);\r\n      setShowMoveDialog(false);\r\n      setIsLoading(false);\r\n      // console.log(\"Moved From\", global.ap.name, \"=>\", to.name);\r\n      _showAlert(\r\n        \"success\",\r\n        \"Contact moved from \" + activePipeline.name + \" to \" + to.name\r\n      );\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      console.log(\"Created Error\", err);\r\n      _showAlert(\"error\", \"Something went wrong.\");\r\n    }\r\n  };\r\n\r\n  const onAlertClose = () => setIsAlertOpen(false);\r\n\r\n  return (\r\n    <HStack\r\n      flex={1}\r\n      width={\"100%\"}\r\n      style={{\r\n        backgroundColor: \"rgba(251, 252, 254, 1)\",\r\n        paddingHorizontal: vw(20),\r\n        justifyContent: \"flex-start\",\r\n        borderBottomWidth: isEnd ? 0 : 1,\r\n        borderBottomColor: \"rgba(0, 0, 0, 0.15)\",\r\n      }}\r\n    >\r\n      <Text\r\n        style={{\r\n          fontSize: vw(15),\r\n          fontFamily: \"Poppins\",\r\n          paddingVertical: vh(20),\r\n          height: vh(60),\r\n          lineHeight: vh(20),\r\n          alignItems: \"center\",\r\n          color: Colors.primary,\r\n        }}\r\n        // flex={2}\r\n        flexWrap={\"wrap\"}\r\n        textAlign={\"left\"}\r\n        width={\"20%\"}\r\n      >\r\n        {name + \" (#\" + item.tid + \")\"}\r\n      </Text>\r\n      <Text\r\n        style={{\r\n          fontSize: vw(15),\r\n          fontFamily: \"Poppins\",\r\n          paddingVertical: vh(20),\r\n          lineHeight: vh(20),\r\n          height: vh(60),\r\n          alignItems: \"center\",\r\n        }}\r\n        // flex={2.5}\r\n        textAlign={\"left\"}\r\n        width={\"30%\"}\r\n      >\r\n        {item.propertyaddress}\r\n      </Text>\r\n      <Text\r\n        style={{\r\n          fontSize: vw(15),\r\n          fontFamily: \"Poppins\",\r\n          paddingVertical: vh(20),\r\n          lineHeight: vh(20),\r\n          height: vh(60),\r\n          alignItems: \"center\",\r\n        }}\r\n        // flex={2}\r\n        width={\"20%\"}\r\n        textAlign={\"center\"}\r\n      >\r\n        {fullname}\r\n      </Text>\r\n      <Text\r\n        style={{\r\n          fontSize: vw(15),\r\n          fontFamily: \"Poppins\",\r\n          paddingVertical: vh(20),\r\n          lineHeight: vh(20),\r\n          height: vh(60),\r\n          alignItems: \"center\",\r\n        }}\r\n        // flex={1.5}\r\n        width={\"20%\"}\r\n        textAlign={\"center\"}\r\n      >\r\n        {moment(item.created).format(\"MM/DD/YYYY - hh:mm A\")}\r\n      </Text>\r\n      <Box width={\"10%\"}>\r\n        <ContactNotes\r\n          _id={item._id}\r\n          notes={item.notes}\r\n          _showAlert={_showAlert}\r\n        />\r\n      </Box>\r\n\r\n      <Center width={\"10%\"}>\r\n        <ContactMenu\r\n          setIsAlertOpen={setIsAlertOpen}\r\n          setShowMoveDialog={setShowMoveDialog}\r\n        />\r\n      </Center>\r\n      {showMoveDialog && (\r\n        <Modal isOpen={showMoveDialog} onClose={() => setShowMoveDialog(false)}>\r\n          <Modal.Content\r\n            backgroundColor={\"white\"}\r\n            maxWidth='400px'\r\n            borderRadius={20}\r\n          >\r\n            <Modal.Header\r\n              borderBottomWidth={0}\r\n              backgroundColor='white'\r\n              _text={{ textAlign: \"center\", fontSize: 16 }}\r\n            >\r\n              Move Contact\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <VStack\r\n                style={{\r\n                  marginVertical: 9,\r\n                  marginHorizontal: 10,\r\n                  backgroundColor: \"white\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <VStack style={{ flexDirection: \"column\" }}>\r\n                  <Select\r\n                    borderWidth={1}\r\n                    borderColor={Colors.primary}\r\n                    p={2}\r\n                    fontSize={16}\r\n                    accessibilityLabel='Select pipeline'\r\n                    placeholder='Select pipeline'\r\n                    placeholderTextColor={\"coolGray.400\"}\r\n                    _actionSheetContent={{\r\n                      backgroundColor: \"white\",\r\n                    }}\r\n                    dropdownIcon={<DropDownIcon />}\r\n                    _selectedItem={{\r\n                      endIcon: (\r\n                        <CheckIcon\r\n                          marginLeft={80}\r\n                          color={Colors.primary}\r\n                          size='5'\r\n                        />\r\n                      ),\r\n                    }}\r\n                    selectedValue={propertyPipeline}\r\n                    onValueChange={(value) => {\r\n                      setPropertyPipeline(value);\r\n                    }}\r\n                  >\r\n                    {pipelines &&\r\n                      pipelines.length > 0 &&\r\n                      pipelines\r\n                        .filter((item) => item._id !== activePipeline._id)\r\n                        .map((item) => (\r\n                          <Select.Item\r\n                            key={\"s-\" + item._id}\r\n                            _pressed={{\r\n                              borderWidth: 1,\r\n                              borderColor: Colors.primary,\r\n                              backgroundColor: \"transparent\",\r\n                            }}\r\n                            borderWidth={1}\r\n                            borderColor='transparent'\r\n                            borderRadius={50}\r\n                            fontSize={16}\r\n                            label={item.name}\r\n                            value={item._id}\r\n                          />\r\n                        ))}\r\n                  </Select>\r\n                </VStack>\r\n              </VStack>\r\n            </Modal.Body>\r\n            <Modal.Footer backgroundColor={\"white\"}>\r\n              <Button.Group space={2}>\r\n                <ShadowButton\r\n                  space={2}\r\n                  variant='outline'\r\n                  color={Colors.primary}\r\n                  onPress={() => setShowMoveDialog(false)}\r\n                  label='Cancel'\r\n                />\r\n                <ShadowButton\r\n                  space={3}\r\n                  isLoading={isLoading}\r\n                  onPress={() => {\r\n                    moveProperty(propertyPipeline);\r\n                  }}\r\n                  label='Move'\r\n                />\r\n              </Button.Group>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n      )}\r\n      {isAlertOpen && (\r\n        <AlertDialog\r\n          // leastDestructiveRef={cancelRef}\r\n          isOpen={isAlertOpen}\r\n          onClose={onAlertClose}\r\n        >\r\n          <AlertDialog.Content borderRadius={20}>\r\n            <AlertDialog.Header\r\n              borderBottomWidth={0}\r\n              backgroundColor='white'\r\n              _text={{ textAlign: \"center\", fontSize: 16 }}\r\n            >\r\n              {\"Delete Contact\"}\r\n            </AlertDialog.Header>\r\n            <AlertDialog.Body\r\n              backgroundColor={\"white\"}\r\n              _text={{ fontSize: 16, color: \"#000000\" }}\r\n            >\r\n              {\"Are you sure you want to remove this contact from \" +\r\n                activePipeline.name +\r\n                \"?\"}\r\n            </AlertDialog.Body>\r\n            <AlertDialog.Footer backgroundColor={\"white\"}>\r\n              <HStack space={2}>\r\n                <ShadowButton\r\n                  space={2}\r\n                  onPress={onAlertClose}\r\n                  label='Cancel'\r\n                  variant='outline'\r\n                  color={Colors.primary}\r\n                />\r\n                <ShadowButton\r\n                  space={2}\r\n                  isLoading={isLoading}\r\n                  onPress={async () => {\r\n                    try {\r\n                      setIsLoading(true);\r\n                      const data = {\r\n                        property: item._id,\r\n                        _id: activePipeline._id,\r\n                      };\r\n                      const action = pipelineActions.deleteProperty(\r\n                        data,\r\n                        socket\r\n                      );\r\n                      await dispatch(action);\r\n                      setIsLoading(false);\r\n                      _showAlert(\r\n                        \"success\",\r\n                        \"Contact deleted from pipeline \" +\r\n                          activePipeline.name +\r\n                          \" successfully.\"\r\n                      );\r\n                      onAlertClose();\r\n                    } catch (err) {\r\n                      console.log(err.message);\r\n                      setIsLoading(false);\r\n                      _showAlert(\r\n                        \"error\",\r\n\r\n                        \"An error occured, cannot delete contact.\"\r\n                      );\r\n                    }\r\n                  }}\r\n                  label='Delete'\r\n                />\r\n              </HStack>\r\n            </AlertDialog.Footer>\r\n          </AlertDialog.Content>\r\n        </AlertDialog>\r\n      )}\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default HorizontalItem;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  HStack,\r\n  VStack,\r\n  Text,\r\n  Center,\r\n  Select,\r\n  CheckIcon,\r\n  AlertDialog,\r\n  Modal,\r\n  Button,\r\n} from \"native-base\";\r\nimport moment from \"moment-timezone\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { vh, vw } from \"../../../util\";\r\nimport * as pipelineActions from \"../../../store/actions/pipelines\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport DropDownIcon from \"../../../components/svg/DropDownIcon\";\r\nimport ShadowButton from \"../../../components/ShadowButton\";\r\nimport SqftIcon from \"../../../components/svg/SqftIcon\";\r\nimport AcreIcon from \"../../../components/svg/AcreIcon\";\r\nimport BathIcon from \"../../../components/svg/BathIcon\";\r\nimport BedIcon from \"../../../components/svg/BedIcon\";\r\nimport ContactMenu from \"./ContactMenu\";\r\nimport ContactNotes from \"./ContactNotes\";\r\n\r\nconst VerticalItem = ({\r\n  item,\r\n  pipelines,\r\n  activePipeline,\r\n  socket,\r\n  _showAlert,\r\n  cols,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n \r\n  const createdUser = item.createdUser && item.createdUser;\r\n  // user name\r\n  const fullname =\r\n    createdUser && createdUser.firstname + \" \" + createdUser.lastname;\r\n  //avatar fall back\r\n  \r\n  let sqft = \"-\";\r\n  let acre = \"-\";\r\n  if (item.sqft) {\r\n    sqft = item.sqft !== null ? item.sqft.toString() : \"-\";\r\n  }\r\n\r\n  if (item.acre) {\r\n    acre = item.acre !== null ? item.acre.toString() : \"-\";\r\n  }\r\n  //property owner name\r\n  const name = item.name && item.name !== \"\" ? item.name.trim() : \"-\";\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  const [propertyPipeline, setPropertyPipeline] = useState();\r\n  const [showMoveDialog, setShowMoveDialog] = useState(false);\r\n\r\n  const moveProperty = async (pipeline) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const action = pipelineActions.moveProperty(\r\n        {\r\n          from: activePipeline._id,\r\n          to: pipeline,\r\n          property: item._id,\r\n        },\r\n        null\r\n      );\r\n      const to = pipelines.find((p) => p._id === pipeline);\r\n\r\n      await dispatch(action);\r\n      setShowMoveDialog(false);\r\n      setIsLoading(false);\r\n      // console.log(\"Moved From\", global.ap.name, \"=>\", to.name);\r\n      _showAlert(\r\n        \"success\",\r\n        \"Contact moved from \" + activePipeline.name + \" to \" + to.name\r\n      );\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      console.log(\"Created Error\", err);\r\n      _showAlert(\"error\", \"Something went wrong.\");\r\n    }\r\n  };\r\n\r\n  const onAlertClose = () => setIsAlertOpen(false);\r\n\r\n  return (\r\n    <VStack\r\n      style={{\r\n        width: vw((window.screen.width - cols * 40) / cols),\r\n        // flex: 1,\r\n        borderRadius: vw(10),\r\n        backgroundColor: \"white\",\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n          width: 0,\r\n          height: vh(3),\r\n        },\r\n        shadowOpacity: 0.15,\r\n        shadowRadius: vh(10),\r\n        elevation: vh(5),\r\n        marginHorizontal: vh(20),\r\n        marginVertical: vh(20),\r\n        padding: vw(20),\r\n      }}\r\n    >\r\n      <HStack flex={1} justifyContent={\"space-between\"}>\r\n        <Text\r\n          style={{\r\n            fontFamily: \"Poppins_medium\",\r\n            color: \"rgba(125, 43, 233, 1)\",\r\n            fontSize: vw(15),\r\n          }}\r\n        >\r\n          {name + \" (#\" + item.tid + \")\"}\r\n        </Text>\r\n        <ContactMenu\r\n          setIsAlertOpen={setIsAlertOpen}\r\n          setShowMoveDialog={setShowMoveDialog}\r\n        />\r\n      </HStack>\r\n      <Text\r\n        style={{\r\n          flex: 1,\r\n          marginTop: vh(8),\r\n          fontFamily: \"Poppins_medium\",\r\n          color: \"rgba(104, 104, 104, 1)\",\r\n          fontSize: vw(14),\r\n          // paddingBottom: vh(12),\r\n          // borderBottomWidth: vw(1),\r\n          // borderBottomColor: \"rgba(210, 210, 210, 1)\",\r\n        }}\r\n      >\r\n        {item.propertyaddress}\r\n      </Text>\r\n      <HStack\r\n        style={{\r\n          justifyContent: \"space-between\",\r\n          borderTopWidth: vh(2),\r\n          borderTopColor: \"rgba(0, 0, 0, 0.15)\",\r\n          borderBottomWidth: vh(2),\r\n          borderBottomColor: \"rgba(0, 0, 0, 0.15)\",\r\n          alignItems: \"center\",\r\n          height: vh(39),\r\n          marginTop: vh(20),\r\n        }}\r\n      >\r\n        {/*Sqft*/}\r\n        <HStack style={{ marginRight: vw(14), alignItems: \"center\" }}>\r\n          <SqftIcon width={vw(24)} height={vh(24)} />\r\n          <Text\r\n            style={{\r\n              color: \"#919191\",\r\n              fontFamily: \"Poppins_medium\",\r\n              fontSize: vw(13),\r\n              marginTop: vh(1),\r\n            }}\r\n          >\r\n            {sqft}\r\n          </Text>\r\n        </HStack>\r\n        {/*Acre*/}\r\n        <HStack style={{ marginHorizontal: vw(14), alignItems: \"center\" }}>\r\n          <AcreIcon width={vw(24)} height={vh(24)} />\r\n          <Text\r\n            style={{\r\n              color: \"#919191\",\r\n              fontFamily: \"Poppins_medium\",\r\n              fontSize: vw(13),\r\n              marginTop: vh(1),\r\n            }}\r\n          >\r\n            {acre}\r\n          </Text>\r\n        </HStack>\r\n        {/*Bed*/}\r\n        <HStack style={{ marginHorizontal: vw(14), alignItems: \"center\" }}>\r\n          <BedIcon width={vw(24)} height={vh(24)} />\r\n          <Text\r\n            style={{\r\n              color: \"#919191\",\r\n              fontFamily: \"Poppins_medium\",\r\n              fontSize: vw(13),\r\n              marginTop: vh(1),\r\n            }}\r\n          >\r\n            {item.bed}\r\n          </Text>\r\n        </HStack>\r\n        {/*Bath*/}\r\n        <HStack style={{ marginHorizontal: vw(7), alignItems: \"center\" }}>\r\n          <BathIcon width={vw(24)} height={vh(24)} />\r\n          <Text\r\n            style={{\r\n              color: \"#919191\",\r\n              fontFamily: \"Poppins_medium\",\r\n              fontSize: vw(13),\r\n              marginTop: vh(1),\r\n            }}\r\n          >\r\n            {item.bath}\r\n          </Text>\r\n        </HStack>\r\n      </HStack>\r\n\r\n      <HStack marginTop={vh(16)} justifyContent={\"space-between\"}>\r\n        <Text\r\n          style={{\r\n            fontFamily: \"Poppins_medium\",\r\n            color: \"rgba(167, 167, 167, 1)\",\r\n            fontSize: vw(14),\r\n          }}\r\n        >\r\n          {fullname}\r\n        </Text>\r\n        <HStack marginRight={vw(20)} justifyContent={\"space-between\"}>\r\n          <Text\r\n            style={{\r\n              fontFamily: \"Poppins_medium\",\r\n              color: \"rgba(167, 167, 167, 1)\",\r\n              fontSize: vw(14),\r\n              marginRight: vw(10),\r\n            }}\r\n          >\r\n            {moment(item.created).format(\"MM/DD/YYYY - hh:mm A\")}\r\n          </Text>\r\n          <Center marginTop={vh(-20)}>\r\n            <ContactNotes\r\n              _id={item._id}\r\n              notes={item.notes}\r\n              _showAlert={_showAlert}\r\n            />\r\n          </Center>\r\n        </HStack>\r\n      </HStack>\r\n\r\n      {showMoveDialog && (\r\n        <Modal isOpen={showMoveDialog} onClose={() => setShowMoveDialog(false)}>\r\n          <Modal.Content\r\n            backgroundColor={\"white\"}\r\n            maxWidth='400px'\r\n            borderRadius={20}\r\n          >\r\n            <Modal.Header\r\n              borderBottomWidth={0}\r\n              backgroundColor='white'\r\n              _text={{ textAlign: \"center\", fontSize: 16 }}\r\n            >\r\n              Move Contact\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <VStack\r\n                style={{\r\n                  marginVertical: 9,\r\n                  marginHorizontal: 10,\r\n                  backgroundColor: \"white\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <VStack style={{ flexDirection: \"column\" }}>\r\n                  <Select\r\n                    borderWidth={1}\r\n                    borderColor={Colors.primary}\r\n                    p={2}\r\n                    fontSize={16}\r\n                    accessibilityLabel='Select pipeline'\r\n                    placeholder='Select pipeline'\r\n                    placeholderTextColor={\"coolGray.400\"}\r\n                    _actionSheetContent={{\r\n                      backgroundColor: \"white\",\r\n                    }}\r\n                    dropdownIcon={<DropDownIcon />}\r\n                    _selectedItem={{\r\n                      endIcon: (\r\n                        <CheckIcon\r\n                          marginLeft={80}\r\n                          color={Colors.primary}\r\n                          size='5'\r\n                        />\r\n                      ),\r\n                    }}\r\n                    selectedValue={propertyPipeline}\r\n                    onValueChange={(value) => {\r\n                      setPropertyPipeline(value);\r\n                    }}\r\n                  >\r\n                    {pipelines.length > 0 &&\r\n                      pipelines\r\n                        .filter((item) => item._id !== activePipeline._id)\r\n                        .map((item) => (\r\n                          <Select.Item\r\n                            _pressed={{\r\n                              borderWidth: 1,\r\n                              borderColor: Colors.primary,\r\n                              backgroundColor: \"transparent\",\r\n                            }}\r\n                            borderWidth={1}\r\n                            borderColor='transparent'\r\n                            borderRadius={50}\r\n                            fontSize={16}\r\n                            key={item._id}\r\n                            label={item.name}\r\n                            value={item._id}\r\n                          />\r\n                        ))}\r\n                  </Select>\r\n                </VStack>\r\n              </VStack>\r\n            </Modal.Body>\r\n            <Modal.Footer backgroundColor={\"white\"}>\r\n              <Button.Group space={2}>\r\n                <ShadowButton\r\n                  onPress={() => setShowMoveDialog(false)}\r\n                  label='Cancel'\r\n                  variant='outline'\r\n                  color={Colors.primary}\r\n                />\r\n                <ShadowButton\r\n                  isLoading={isLoading}\r\n                  onPress={() => {\r\n                    moveProperty(propertyPipeline);\r\n                  }}\r\n                  label='Move'\r\n                />\r\n              </Button.Group>\r\n            </Modal.Footer>\r\n          </Modal.Content>\r\n        </Modal>\r\n      )}\r\n      {isAlertOpen && (\r\n        <AlertDialog\r\n          // leastDestructiveRef={cancelRef}\r\n          isOpen={isAlertOpen}\r\n          onClose={onAlertClose}\r\n        >\r\n          <AlertDialog.Content borderRadius={20}>\r\n            <AlertDialog.Header\r\n              borderBottomWidth={0}\r\n              backgroundColor='white'\r\n              _text={{ textAlign: \"center\", fontSize: 16 }}\r\n            >\r\n              {\"Delete Contact\"}\r\n            </AlertDialog.Header>\r\n            <AlertDialog.Body\r\n              backgroundColor={\"white\"}\r\n              _text={{ fontSize: 16, color: \"#000000\" }}\r\n            >\r\n              {\"Are you sure you want to remove this contact from \" +\r\n                activePipeline.name +\r\n                \"?\"}\r\n            </AlertDialog.Body>\r\n            <AlertDialog.Footer\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                borderTopWidth: 0,\r\n              }}\r\n            >\r\n              <HStack space={2}>\r\n                <ShadowButton\r\n                  space={2}\r\n                  // ref={cancelRef}\r\n                  onPress={onAlertClose}\r\n                  label='Cancel'\r\n                  variant='outline'\r\n                  color={Colors.primary}\r\n                />\r\n                <ShadowButton\r\n                  space={4}\r\n                  isLoading={isLoading}\r\n                  onPress={async () => {\r\n                    try {\r\n                      setIsLoading(true);\r\n                      const data = {\r\n                        property: item._id,\r\n                        _id: activePipeline._id,\r\n                      };\r\n                      const action = pipelineActions.deleteProperty(\r\n                        data,\r\n                        socket\r\n                      );\r\n                      await dispatch(action);\r\n                      setIsLoading(false);\r\n                      _showAlert(\r\n                        \"success\",\r\n                        \"Contact deleted from pipeline \" +\r\n                          activePipeline.name +\r\n                          \" successfully.\"\r\n                      );\r\n                      onAlertClose();\r\n                    } catch (err) {\r\n                      console.log(err.message);\r\n                      setIsLoading(false);\r\n                      _showAlert(\r\n                        \"error\",\r\n                        \"An error occured, cannot delete contact.\"\r\n                      );\r\n                    }\r\n                  }}\r\n                  label='Delete'\r\n                />\r\n              </HStack>\r\n            </AlertDialog.Footer>\r\n          </AlertDialog.Content>\r\n        </AlertDialog>\r\n      )}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default VerticalItem;\r\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  Center,\r\n  Spinner,\r\n  Pressable,\r\n  FlatList,\r\n  View,\r\n  Checkbox,\r\n  Input,\r\n} from \"native-base\";\r\n\r\nimport * as events from \"../../../store/events\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport { API_URL } from \"../../../constants/Config\";\r\nimport ShadowPagination from \"../../../components/ShadowPagination\";\r\nimport { vh, vw } from \"../../../util\";\r\nimport SearchIcon from \"../../../components/svg/SearchIcon\";\r\nimport CloseIcon from \"../../../components/svg/CloseIcon\";\r\n\r\nconst getUser = () => {\r\n  if (localStorage.getItem(\"@shadowuser\") !== null) {\r\n    const user = JSON.parse(localStorage.getItem(\"@shadowuser\"));\r\n    return user;\r\n  }\r\n};\r\n\r\nconst AddContacts = ({ pipeline, pipelines, _showAlert, dispatch }) => {\r\n  const sRef = useRef();\r\n  const cRef = useRef();\r\n  const [page, setPage] = useState(1);\r\n  const [total, setTotal] = useState(0);\r\n  const [limit, setLimit] = useState(50);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [reload, setReload] = useState(false);\r\n  const [pIsSav] = useState({});\r\n  const [search, setSearch] = useState(\"\");\r\n  const [properties, setProperties] = useState([]);\r\n\r\n  const _getData = useCallback(async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const filter = {\r\n        // fromdate: moment(fromDate).format(\"YYYY-MM-DD\"),\r\n        // todata: moment(toDate).format(\"YYYY-MM-DD\"),\r\n        inPipeline: pipeline,\r\n        ninPipelines: pipelines,\r\n      };\r\n\r\n      const { token } = getUser();\r\n\r\n      const response = await fetch(`${API_URL}/properties/get`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n        body: JSON.stringify({\r\n          skip: page === 1 ? 0 : (page - 1) * limit,\r\n          limit,\r\n          search,\r\n          filter,\r\n          fields: {\r\n            _id: 1,\r\n            name: 1,\r\n            owneraddress: 1,\r\n            tid: 1,\r\n            \"createdUser._id\": 1,\r\n            \"createdUser.firstname\": 1,\r\n            \"createdUser.lastname\": 1,\r\n            propertyaddress: 1,\r\n            notes: 1,\r\n            created: 1,\r\n            pipelines: 1,\r\n          },\r\n          sort: { tid: -1 },\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errData = await response.json();\r\n        console.log(errData);\r\n        let message = \"Something went wrong!\";\r\n        if (errData.error) {\r\n          message = errData.error;\r\n        } else {\r\n          throw new Error(message);\r\n        }\r\n      } else {\r\n        const resData = await response.json();\r\n\r\n        if (resData.data && resData.data.length > 0) {\r\n          setTotal(resData.count);\r\n          setProperties([...resData.data]);\r\n        }\r\n      }\r\n\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n      setIsLoading(false);\r\n      _showAlert(\"error\", err.message);\r\n    }\r\n  }, [limit, page, search, _showAlert, pipeline, pipelines]);\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    if (!unmounted) {\r\n      _getData();\r\n    }\r\n    return () => {\r\n      unmounted = false;\r\n    };\r\n  }, [page, search, _getData]);\r\n\r\n  const NoItemsFound = () => {\r\n    return (\r\n      <Center style={{ minHeight: vh(300) }}>\r\n        <Text>No Contacts found!</Text>\r\n      </Center>\r\n    );\r\n  };\r\n\r\n  const RenderItem = ({ item, pipeline }) => {\r\n    const pipelineRef = useRef(item.pipelines && item.pipelines.length > 0);\r\n    const [inPipeline, setInPipeline] = useState(\r\n      item.pipelines && item.pipelines.length > 0\r\n    );\r\n    const createdUser = item.createdUser;\r\n    const saveProperty = async (p, del = false) => {\r\n      try {\r\n        if (p._id) {\r\n          if (!del) {\r\n            const data = {\r\n              property: p._id,\r\n              pipeline,\r\n              data: {\r\n                _id: p._id,\r\n                created: p.created,\r\n                createdUser: {\r\n                  _id: p.createdUser._id,\r\n                  firstname: p.createdUser.firstname,\r\n                  lastname: p.createdUser.lastname,\r\n                },\r\n                name: p.name,\r\n                notes: p.notes,\r\n                propertyaddress: p.propertyaddress,\r\n                tid: p.tid,\r\n              },\r\n            };\r\n            dispatch({ type: events.ADD_PIPELINE_PROPERTY_SAGA, data });\r\n            pipelineRef.current = true;\r\n            setInPipeline(true);\r\n          } else {\r\n            const data = {\r\n              property: p._id,\r\n              pipeline,\r\n            };\r\n            dispatch({\r\n              type: events.REMOVE_PIPELINE_PROPERTY_SAGA,\r\n              data,\r\n            });\r\n            pipelineRef.current = false;\r\n            setInPipeline(false);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.log(\"Created Error\", err);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Pressable\r\n        style={{\r\n          borderBottomColor: \"rgba(0,0,0, 0.15)\",\r\n          borderBottomWidth: 1,\r\n          paddingVertical: 5,\r\n        }}\r\n        onPress={() => {\r\n          saveProperty(item, inPipeline);\r\n        }}\r\n      >\r\n        <Box\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-around\",\r\n            borderRadius: 5,\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              justifyContent: \"center\",\r\n              width: \"15%\",\r\n            }}\r\n          >\r\n            {pIsSav[item._id] ? (\r\n              <Spinner size={\"small\"} color={Colors.primary} />\r\n            ) : (\r\n              <Center>\r\n                <Checkbox\r\n                  size={\"sm\"}\r\n                  accessibilityLabel='Select contact'\r\n                  isChecked={inPipeline}\r\n                  colorScheme='purple'\r\n                />\r\n              </Center>\r\n            )}\r\n          </View>\r\n          <View style={{ width: \"85%\" }}>\r\n            <Text\r\n              style={{\r\n                fontSize: 14,\r\n                color: Colors.primary,\r\n                fontFamily: \"Poppins\",\r\n              }}\r\n            >\r\n              {item.name + \" (#\" + item.tid + \")\"}\r\n            </Text>\r\n            <Text\r\n              style={{\r\n                color: \"#414141\",\r\n                fontSize: 12,\r\n                fontFamily: \"Poppins\",\r\n              }}\r\n            >\r\n              {item.owneraddress}\r\n            </Text>\r\n            <Text\r\n              style={{\r\n                color: \"#414141\",\r\n                fontSize: 10,\r\n                fontFamily: \"Poppins\",\r\n              }}\r\n            >\r\n              {\"Added By \" + createdUser.firstname + \" \" + createdUser.lastname}\r\n            </Text>\r\n          </View>\r\n        </Box>\r\n      </Pressable>\r\n    );\r\n  };\r\n\r\n  const _onSubmitEditing = (e) => {\r\n    if (e.nativeEvent.text === \"\") {\r\n      return;\r\n    }\r\n    // setIsLoading(true);\r\n    setProperties([]);\r\n    setPage(1);\r\n    setSearch(e.nativeEvent.text);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      flex={1}\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        paddingBottom: vh(10),\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      {total > 0 && (\r\n        <Center style={{ marginVertical: vh(20), width: \"100%\" }}>\r\n          <Input\r\n            w={\"full\"}\r\n            ref={sRef}\r\n            autoComplete='Off'\r\n            rounded={\"full\"}\r\n            variant='outline'\r\n            size={\"xs\"}\r\n            placeholder='Search by #id/name/address'\r\n            onSubmitEditing={_onSubmitEditing}\r\n            onChangeText={(v) => {\r\n              cRef.current.style.visibility = v !== \"\" ? \"visible\" : \"hidden\";\r\n              if (v === \"\") {\r\n                setSearch(\"\");\r\n                setPage(1);\r\n                setProperties([]);\r\n                sRef.current.value = \"\";\r\n              }\r\n            }}\r\n            style={{\r\n              height: vh(36),\r\n              fontSize: vw(13),\r\n              fontFamily: \"Poppins\",\r\n              flex: 1,\r\n            }}\r\n            leftElement={\r\n              <Center style={{ marginLeft: vw(10) }}>\r\n                <SearchIcon width={18} height={18} fill={Colors.primary} />\r\n              </Center>\r\n            }\r\n            rightElement={\r\n              <Pressable\r\n                ref={cRef}\r\n                onPress={() => {\r\n                  if (search !== \"\") {\r\n                    setSearch(\"\");\r\n                    setPage(1);\r\n                    setProperties([]);\r\n                  }\r\n                  sRef.current.value = \"\";\r\n                  cRef.current.style.visibility = \"hidden\";\r\n                }}\r\n                style={{\r\n                  marginRight: vw(10),\r\n                  visibility: \"hidden\",\r\n                }}\r\n              >\r\n                <CloseIcon />\r\n              </Pressable>\r\n            }\r\n          />\r\n        </Center>\r\n      )}\r\n      {isLoading ? (\r\n        <Center style={{ minHeight: vh(396) }}>\r\n          <Spinner size='small' color={Colors.primary} />\r\n        </Center>\r\n      ) : (\r\n        <FlatList\r\n          contentContainerStyle={{\r\n            backgroundColor: \"white\",\r\n            width: \"100%\",\r\n            minHeight: vh(500),\r\n            // marginHorizontal: vh(10),\r\n            marginBottom: vh(60),\r\n            marginTop: vh(10),\r\n          }}\r\n          ListEmptyComponent={<NoItemsFound />}\r\n          style={{ marginTop: 0 }}\r\n          data={properties}\r\n          keyExtractor={(item) => item._id}\r\n          renderItem={({ item }) => (\r\n            <RenderItem\r\n              item={item}\r\n              pipeline={pipeline}\r\n              pipelines={pipelines}\r\n              setReload={setReload}\r\n              reload={reload}\r\n              setIsSaving={setIsSaving}\r\n              isSaving={isSaving}\r\n              setProperties={setProperties}\r\n            />\r\n          )}\r\n          initialNumToRender={50}\r\n          maxToRenderPerBatch={50}\r\n        />\r\n      )}\r\n      {total > 0 && (\r\n        <ShadowPagination\r\n          limit={limit}\r\n          setLimit={setLimit}\r\n          total={total}\r\n          page={page}\r\n          setPage={setPage}\r\n          setIsLoading={setIsLoading}\r\n          style={{\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            marginHorizontal: 0,\r\n            width: \"100%\",\r\n          }}\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(AddContacts, (p, n) => {\r\n  // console.log(p.pipeline, \"prev\", n.pipeline, \"new\");\r\n  return true;\r\n});\r\n","import React, { useEffect, useState, useCallback, useContext } from \"react\";\r\nimport {\r\n  VStack,\r\n  HStack,\r\n  Text,\r\n  Pressable,\r\n  FlatList,\r\n  Center,\r\n  useToast,\r\n  Spinner,\r\n  Actionsheet,\r\n  useDisclose,\r\n  Menu,\r\n  useBreakpointValue,\r\n  useMediaQuery,\r\n  Hidden,\r\n} from \"native-base\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport _ from \"lodash\";\r\n\r\n// import socketContext from \"../../../context/index\";\r\nimport NavBar from \"../home/NavBar\";\r\nimport { vw, vh } from \"../../../util\";\r\nimport * as pipelineActions from \"../../../store/actions/pipelines\";\r\nimport ShadowPagination from \"../../../components/ShadowPagination\";\r\nimport HorizontalItem from \"./HorizontalItem\";\r\nimport VerticalItem from \"./VerticalItem\";\r\nimport ShadowModal from \"../../../components/ShadowModal\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport * as events from \"../../../store/events\";\r\nimport AcreIcon from \"../../../components/svg/AcreIcon\";\r\nimport NavListIcon from \"../../../components/svg/NavListIcon\";\r\nimport AddIcon from \"../../../components/svg/AddIcon\";\r\nimport MoreIcon from \"../../../components/svg/MoreIcon\";\r\nimport AddContacts from \"./AddContacts\";\r\nimport SocketContext from \"../../../context/index\";\r\nimport ShadowButton from \"../../../components/ShadowButton\";\r\nimport AddPipeline from \"./AddPipeline\";\r\n\r\nconst setOrientation = (orientation) => {\r\n  const a = localStorage.getItem(\"@orientation\");\r\n  if (a) {\r\n    const x = JSON.parse(a);\r\n    localStorage.setItem(\r\n      \"@orientation\",\r\n      JSON.stringify({\r\n        ...x,\r\n        pipelines: orientation,\r\n      })\r\n    );\r\n  } else {\r\n    localStorage.setItem(\r\n      \"@orientation\",\r\n      JSON.stringify({\r\n        properties: orientation,\r\n      })\r\n    );\r\n  }\r\n};\r\n\r\nconst getOrientation = (page) => {\r\n  const a = localStorage.getItem(\"@orientation\");\r\n  if (a) {\r\n    const x = JSON.parse(a);\r\n    return x[page] ? x[page] : \"vertical\";\r\n  } else {\r\n    return \"vertical\";\r\n  }\r\n};\r\n\r\nconst PageHeader = ({\r\n  activePipeline,\r\n  pipelines,\r\n  listStyle,\r\n  setListStyle,\r\n  _showAlert,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  // const socket = useContext(socketContext);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isOpenMove, setIsOpenMove] = useState(false);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [isHover, setIsHover] = useState(null);\r\n\r\n  const deleteHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      setIsDeleting(true);\r\n      const _id = activePipeline._id;\r\n      const action = pipelineActions.deletePipeline(_id, null);\r\n      await dispatch(action);\r\n      setIsDeleting(false);\r\n      _showAlert(\"success\", \"Pipeline deleted successfully.\");\r\n      setIsOpen(false);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n      setIsDeleting(false);\r\n      _showAlert(\"error\", \"An error occured, cannot delete pipeline.\");\r\n    }\r\n  };\r\n\r\n  const moveHandler = async (f, t) => {\r\n    try {\r\n\r\n      const action = pipelineActions.movePipeline(\r\n        {\r\n          from: f,\r\n          to: t,\r\n        },\r\n        null\r\n      );\r\n      await dispatch(action);\r\n      setIsOpenMove(false);\r\n    } catch (err) {\r\n      // setIsSaving(false);\r\n      console.log(\"move pipeline error\", err);\r\n      _showAlert(\"error\", \"An error occured, cannot move pipeline.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <VStack\r\n      style={{\r\n        zIndex: 999,\r\n        marginTop: vh(-10),\r\n      }}\r\n    >\r\n      {/* For Big Screens */}\r\n      <Hidden only={[\"sm\", \"base\", \"md\"]}>\r\n        <HStack\r\n          style={{\r\n            height: vh(84),\r\n            marginHorizontal: vw(20),\r\n            borderBottomColor: \"rgba(0,0,0,0.15)\",\r\n            borderBottomWidth: 1,\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Text\r\n            style={{\r\n              fontSize: vw(24),\r\n              paddingTop: vh(10),\r\n              color: \"#303030\",\r\n              fontFamily: \"Poppins_medium\",\r\n            }}\r\n          >\r\n            Pipelines\r\n          </Text>\r\n          {/* <Hidden only={[\"base\", \"sm\", \"md\"]}> */}\r\n          <HStack\r\n            style={{\r\n              flexWrap: \"wrap\",\r\n              width: vw(window.screen.width - 400),\r\n              justifyContent: \"center\",\r\n              zoom: \"85%\",\r\n              marginTop: vh(20),\r\n              paddingHorizontal: vh(10),\r\n            }}\r\n          >\r\n            {pipelines.map((p) => (\r\n              <HStack\r\n                key={\"pl-\" + p._id}\r\n                style={{\r\n                  justifyContent: \"space-between\",\r\n                  height: vh(40),\r\n                }}\r\n              >\r\n                <Pressable\r\n                  key={\"h-\" + p._id}\r\n                  onPress={(e) => {\r\n                    e.preventDefault();\r\n                    dispatch({ type: events.SET_ACTIVE_PIPELINE, data: p });\r\n                  }}\r\n                >\r\n                  <Text\r\n                    key={p._id}\r\n                    style={{\r\n                      fontSize: vw(15),\r\n                      // paddingTop: vh(40),\r\n                      paddingHorizontal: vw(10),\r\n                      color: \"#303030\",\r\n                      fontFamily: \"Poppins_medium\",\r\n                      marginHorizontal: vw(12),\r\n                      paddingBottom: vh(5),\r\n                      borderBottomWidth:\r\n                        activePipeline && activePipeline._id === p._id\r\n                          ? vh(4)\r\n                          : 0,\r\n                      borderBottomColor: \"rgba(125, 43, 233, 1)\",\r\n                    }}\r\n                  >\r\n                    {p.name}\r\n                  </Text>\r\n                </Pressable>\r\n              </HStack>\r\n            ))}\r\n          </HStack>\r\n          {/* </Hidden> */}\r\n\r\n          <HStack\r\n            style={{ marginTop: vh(-20) }}\r\n            justifyContent='flex-end'\r\n            space={4}\r\n          >\r\n            {pipelines && pipelines.length > 0 && (\r\n              <Hidden only={[\"base\", \"sm\", \"md\"]}>\r\n                <Pressable\r\n                  bg={{\r\n                    linearGradient: {\r\n                      colors: [\"lightBlue.300\", \"violet.800\"],\r\n                      start: [0, 0],\r\n                      end: [1, 0],\r\n                    },\r\n                  }}\r\n                  onPress={() => {\r\n                    setListStyle(\r\n                      listStyle === \"vertical\" ? \"horizontal\" : \"vertical\"\r\n                    );\r\n                    setOrientation(\r\n                      listStyle === \"vertical\" ? \"horizontal\" : \"vertical\"\r\n                    );\r\n                  }}\r\n                  rounded={\"full\"}\r\n                  style={{\r\n                    marginTop: vh(30),\r\n                    height: vh(36),\r\n                    width: vh(36),\r\n                    borderColor: \"rgba(0, 0, 0, 0.15)\",\r\n                    borderWidth: 1,\r\n                    // backgroundColor: \"transparent\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  {listStyle === \"vertical\" ? <AcreIcon /> : <NavListIcon />}\r\n                </Pressable>\r\n              </Hidden>\r\n            )}\r\n\r\n            <Menu\r\n              placement='left top'\r\n              borderRadius={vw(10)}\r\n              borderWidth={0}\r\n              marginTop={vh(40)}\r\n              marginRight={vw(-20)}\r\n              backgroundColor={\"white\"}\r\n              trigger={(triggerProps) => {\r\n                return (\r\n                  <Pressable\r\n                    accessibilityLabel='More options menu'\r\n                    {...triggerProps}\r\n                    style={{\r\n                      // position: \"absolute\",\r\n                      // right: 0,\r\n                      // top: vh(30),\r\n                      marginTop: vh(35),\r\n                    }}\r\n                  >\r\n                    <MoreIcon />\r\n                  </Pressable>\r\n                );\r\n              }}\r\n            >\r\n              <Menu.Item\r\n                onHoverIn={() => {\r\n                  setIsHover(\"add\");\r\n                }}\r\n                onHoverOut={() => {\r\n                  setIsHover(null);\r\n                }}\r\n                background={\"none\"}\r\n                // _pressed={{\r\n                //   borderWidth: 1,\r\n                //   borderColor: Colors.primary,\r\n                //   borderRadius: 50,\r\n                //   backgroundColor: \"white\",\r\n                // }}\r\n                borderWidth={1}\r\n                borderColor='transparent'\r\n                onPress={async (e) => {\r\n                  e.preventDefault();\r\n                  setShowModal(true);\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    textAlign: \"left\",\r\n                    fontFamily: \"Poppins\",\r\n                    color: isHover === \"add\" ? Colors.primary : \"#686868\",\r\n                    fontSize: vw(15),\r\n                  }}\r\n                >\r\n                  Add\r\n                </Text>\r\n              </Menu.Item>\r\n              {pipelines && pipelines.length > 1 && (\r\n                <Menu.Item\r\n                  onHoverIn={() => {\r\n                    setIsHover(\"move\");\r\n                  }}\r\n                  onHoverOut={() => {\r\n                    setIsHover(null);\r\n                  }}\r\n                  background={\"none\"}\r\n                  // _pressed={{\r\n                  //   borderWidth: 1,\r\n                  //   borderColor: Colors.primary,\r\n                  //   borderRadius: 50,\r\n                  //   backgroundColor: \"white\",\r\n                  // }}\r\n                  borderWidth={1}\r\n                  borderColor='transparent'\r\n                  onPress={async (e) => {\r\n                    e.preventDefault();\r\n                    if (activePipeline && activePipeline.ord === 1) {\r\n                      moveHandler(activePipeline.ord, activePipeline.ord + 1);\r\n                    } else if (\r\n                      activePipeline &&\r\n                      pipelines &&\r\n                      pipelines.length > 1\r\n                    ) {\r\n                      const last = pipelines[pipelines.length - 1];\r\n                      if (last.ord === activePipeline.ord) {\r\n                        moveHandler(activePipeline.ord, activePipeline.ord - 1);\r\n                      } else {\r\n                        setIsOpenMove(true);\r\n                      }\r\n                    }\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"left\",\r\n                      fontFamily: \"Poppins\",\r\n                      color: isHover === \"move\" ? Colors.primary : \"#686868\",\r\n                      fontSize: vw(15),\r\n                    }}\r\n                  >\r\n                    Move\r\n                  </Text>\r\n                </Menu.Item>\r\n              )}\r\n              {pipelines && pipelines.length > 0 && (\r\n                <Menu.Item\r\n                  onHoverIn={() => {\r\n                    setIsHover(\"delete\");\r\n                  }}\r\n                  onHoverOut={() => {\r\n                    setIsHover(null);\r\n                  }}\r\n                  background={\"none\"}\r\n                  // _pressed={{\r\n                  //   borderWidth: 1,\r\n                  //   borderColor: Colors.primary,\r\n                  //   borderRadius: 50,\r\n                  //   backgroundColor: \"white\",\r\n                  // }}\r\n                  borderWidth={1}\r\n                  borderColor='transparent'\r\n                  onPress={() => {\r\n                    setIsOpen(true);\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      textAlign: \"left\",\r\n                      fontFamily: \"Poppins\",\r\n                      color: isHover === \"delete\" ? Colors.primary : \"#686868\",\r\n                      fontSize: vw(15),\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </Text>\r\n                </Menu.Item>\r\n              )}\r\n            </Menu>\r\n          </HStack>\r\n        </HStack>\r\n      </Hidden>\r\n      {/* For Small Screens */}\r\n      <Hidden from='lg'>\r\n        <VStack\r\n          style={{\r\n            marginHorizontal: vh(20),\r\n            marginBottom: vh(10),\r\n            borderBottomColor: \"rgba(0,0,0,0.15)\",\r\n            borderBottomWidth: 1,\r\n          }}\r\n          space={2}\r\n        >\r\n          <HStack justifyContent={\"space-between\"}>\r\n            <Text\r\n              style={{\r\n                fontSize: vw(24),\r\n                paddingTop: vh(10),\r\n                color: \"#303030\",\r\n                fontFamily: \"Poppins_medium\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              Pipelines\r\n            </Text>\r\n            <Menu\r\n              placement='left top'\r\n              borderRadius={vw(10)}\r\n              borderWidth={0}\r\n              backgroundColor={\"white\"}\r\n              trigger={(triggerProps) => {\r\n                return (\r\n                  <Pressable\r\n                    accessibilityLabel='More options menu'\r\n                    {...triggerProps}\r\n                    style={{\r\n                      // position: \"absolute\",\r\n                      // right: 0,\r\n                      // top: vh(30),\r\n                      marginTop: vh(20),\r\n                    }}\r\n                  >\r\n                    <MoreIcon />\r\n                  </Pressable>\r\n                );\r\n              }}\r\n            >\r\n              <Menu.Item\r\n                onHoverIn={() => {\r\n                  setIsHover(\"add\");\r\n                }}\r\n                onHoverOut={() => {\r\n                  setIsHover(null);\r\n                }}\r\n                background={\"none\"}\r\n                // _pressed={{\r\n                //   borderWidth: 1,\r\n                //   borderColor: Colors.primary,\r\n                //   borderRadius: 50,\r\n                //   backgroundColor: \"white\",\r\n                // }}\r\n                borderWidth={1}\r\n                borderColor='transparent'\r\n                onPress={async (e) => {\r\n                  e.preventDefault();\r\n                  setShowModal(true);\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    textAlign: \"left\",\r\n                    fontFamily: \"Poppins\",\r\n                    color: isHover === \"add\" ? Colors.primary : \"#686868\",\r\n                    fontSize: vw(15),\r\n                  }}\r\n                >\r\n                  Add\r\n                </Text>\r\n              </Menu.Item>\r\n              <Menu.Item\r\n                onHoverIn={() => {\r\n                  setIsHover(\"move\");\r\n                }}\r\n                onHoverOut={() => {\r\n                  setIsHover(null);\r\n                }}\r\n                background={\"none\"}\r\n                // _pressed={{\r\n                //   borderWidth: 1,\r\n                //   borderColor: Colors.primary,\r\n                //   borderRadius: 50,\r\n                //   backgroundColor: \"white\",\r\n                // }}\r\n                borderWidth={1}\r\n                borderColor='transparent'\r\n                onPress={async (e) => {\r\n                  e.preventDefault();\r\n                  if (activePipeline && activePipeline.ord === 1) {\r\n                    moveHandler(activePipeline.ord, activePipeline.ord + 1);\r\n                  } else if (\r\n                    activePipeline &&\r\n                    pipelines &&\r\n                    pipelines.length > 1\r\n                  ) {\r\n                    const last = pipelines[pipelines.length - 1];\r\n                    if (last.ord === activePipeline.ord) {\r\n                      moveHandler(activePipeline.ord, activePipeline.ord - 1);\r\n                    } else {\r\n                      setIsOpenMove(true);\r\n                    }\r\n                  }\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    textAlign: \"left\",\r\n                    fontFamily: \"Poppins\",\r\n                    color: isHover === \"move\" ? Colors.primary : \"#686868\",\r\n                    fontSize: vw(15),\r\n                  }}\r\n                >\r\n                  Move\r\n                </Text>\r\n              </Menu.Item>\r\n              <Menu.Item\r\n                onHoverIn={() => {\r\n                  setIsHover(\"delete\");\r\n                }}\r\n                onHoverOut={() => {\r\n                  setIsHover(null);\r\n                }}\r\n                background={\"none\"}\r\n                // _pressed={{\r\n                //   borderWidth: 1,\r\n                //   borderColor: Colors.primary,\r\n                //   borderRadius: 50,\r\n                //   backgroundColor: \"white\",\r\n                // }}\r\n                borderWidth={1}\r\n                borderColor='transparent'\r\n                onPress={() => {\r\n                  setIsOpen(true);\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    textAlign: \"left\",\r\n                    fontFamily: \"Poppins\",\r\n                    color: isHover === \"delete\" ? Colors.primary : \"#686868\",\r\n                    fontSize: vw(15),\r\n                  }}\r\n                >\r\n                  Delete\r\n                </Text>\r\n              </Menu.Item>\r\n            </Menu>\r\n          </HStack>\r\n          <HStack\r\n            style={{\r\n              flexWrap: \"wrap\",\r\n              width: \"100%\",\r\n              justifyContent: \"flex-start\",\r\n              zoom: \"85%\",\r\n            }}\r\n          >\r\n            {pipelines.map((p) => (\r\n              <HStack\r\n                key={\"pl-\" + p._id}\r\n                style={{\r\n                  justifyContent: \"space-between\",\r\n                  height: vh(40),\r\n                }}\r\n              >\r\n                <Pressable\r\n                  key={\"h-\" + p._id}\r\n                  onPress={(e) => {\r\n                    e.preventDefault();\r\n                    dispatch({ type: events.SET_ACTIVE_PIPELINE, data: p });\r\n                  }}\r\n                >\r\n                  <Text\r\n                    key={p._id}\r\n                    style={{\r\n                      fontSize: vw(15),\r\n                      // paddingTop: vh(40),\r\n                      paddingHorizontal: vw(10),\r\n                      color: \"#303030\",\r\n                      fontFamily: \"Poppins_medium\",\r\n                      marginHorizontal: vw(12),\r\n                      paddingBottom: vh(5),\r\n                      borderBottomWidth:\r\n                        activePipeline && activePipeline._id === p._id\r\n                          ? vh(4)\r\n                          : 0,\r\n                      borderBottomColor: \"rgba(125, 43, 233, 1)\",\r\n                    }}\r\n                  >\r\n                    {p.name}\r\n                  </Text>\r\n                </Pressable>\r\n              </HStack>\r\n            ))}\r\n          </HStack>\r\n        </VStack>\r\n      </Hidden>\r\n      <AddPipeline\r\n        showModal={showModal}\r\n        setShowModal={setShowModal}\r\n        _showAlert={_showAlert}\r\n      />\r\n      <ShadowModal\r\n        size='md'\r\n        height={vh(60)}\r\n        isOpen={isOpen}\r\n        close={() => {\r\n          setIsOpen(false);\r\n        }}\r\n        header='Delete Pipeline'\r\n        buttons={\r\n          <HStack space={2}>\r\n            <ShadowButton\r\n              space={2}\r\n              onPress={() => {\r\n                setIsOpen(false);\r\n              }}\r\n              color='rgba(0,0,0, 0.5)'\r\n              variant='outline'\r\n              label='Cancel'\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n            <ShadowButton\r\n              space={2}\r\n              isLoading={isDeleting}\r\n              onPress={deleteHandler}\r\n              color='white'\r\n              label='Delete'\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n          </HStack>\r\n        }\r\n      >\r\n        <Text\r\n          style={{\r\n            fontFamily: \"Poppins\",\r\n            fontSize: vw(15),\r\n            color: \"rgba(0,0,0,0.8)\",\r\n          }}\r\n        >\r\n          Are you sure you want to delete this pipeline?\r\n        </Text>\r\n      </ShadowModal>\r\n      <ShadowModal\r\n        size='md'\r\n        height={vh(60)}\r\n        isOpen={isOpenMove}\r\n        close={() => {\r\n          setIsOpenMove(false);\r\n        }}\r\n        header='Move Pipeline'\r\n        buttons={\r\n          <HStack space={2}>\r\n            <ShadowButton\r\n              space={2}\r\n              onPress={() => {\r\n                setIsOpenMove(false);\r\n              }}\r\n              variant='outline'\r\n              label='Cancel'\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n            <ShadowButton\r\n              space={2}\r\n              // isLoading={isMovingLeft}\r\n              onPress={() => {\r\n                moveHandler(activePipeline.ord, activePipeline.ord - 1);\r\n              }}\r\n              label='Left'\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n            <ShadowButton\r\n              space={2}\r\n              // isLoading={isMovingRight}\r\n              onPress={() => {\r\n                console.log(activePipeline.ord, activePipeline.ord + 1)\r\n                moveHandler(activePipeline.ord, activePipeline.ord + 1);\r\n              }}\r\n              label='Right'\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n          </HStack>\r\n        }\r\n      >\r\n        <Text\r\n          style={{\r\n            fontFamily: \"Poppins\",\r\n            fontSize: vw(15),\r\n            color: \"rgba(0,0,0,0.8)\",\r\n          }}\r\n        >\r\n          Move this pipeline?\r\n        </Text>\r\n      </ShadowModal>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nconst Index = ({ user, setLogout }) => {\r\n  const [landscape] = useMediaQuery([\r\n    {\r\n      orientation: \"landscape\",\r\n    },\r\n    {\r\n      orientation: \"portrait\",\r\n    },\r\n  ]);\r\n\r\n  // const sz = useBreakpointValue({\r\n  //   base: \"base\",\r\n  //   sm: \"sm\",\r\n  //   lg: \"lg\",\r\n  //   md: \"md\",\r\n  //   xl: \"xl\",\r\n  // });\r\n\r\n  let cols = useBreakpointValue({\r\n    base: 1,\r\n    sm: 1,\r\n    lg: 4,\r\n    md: 3,\r\n    xl: 5,\r\n  });\r\n\r\n  if (cols === 1 && landscape) {\r\n    cols = 2;\r\n  }\r\n\r\n  const cardwidth = 428;\r\n  cols = Math.floor(window.screen.width / cardwidth);\r\n  if (cols === 0) {\r\n    cols = 1;\r\n  }\r\n\r\n  const toast = useToast();\r\n  const socket = useContext(SocketContext);\r\n  const dispatch = useDispatch();\r\n  const { onOpen, onClose, isOpen } = useDisclose();\r\n  const { pipelines, activePipeline } = useSelector((state) => state.pipelines);\r\n  const limit = 50;\r\n\r\n  const [listStyle, setListStyle] = useState(getOrientation(\"pipelines\"));\r\n  const op = _.sortBy(pipelines, \"ord\");\r\n  const [page, setPage] = useState(1);\r\n  const [reload, setReload] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const properties =\r\n    (activePipeline && activePipeline.properties.filter((p) => p._id)) || [];\r\n  const total = (properties && properties.total) || 0;\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await dispatch(pipelineActions.fetchPipelines());\r\n      setIsLoading(false);\r\n    })();\r\n  }, [dispatch]);\r\n\r\n  const _emptyComponent = useCallback(() => {\r\n    return (\r\n      <Center height={\"lg\"} justifyContent='center' alignItems='center'>\r\n        <Text textAlign={\"center\"}>{\"No items found.\"} </Text>\r\n      </Center>\r\n    );\r\n  }, []);\r\n\r\n  const _showAlert = useCallback(\r\n    (status, msg) => {\r\n      toast.show({\r\n        placement: \"top\",\r\n        render: () => {\r\n          let bg = \"red.300\";\r\n          if (status === \"error\") {\r\n            bg = \"red.300\";\r\n          } else if (status === \"success\") {\r\n            bg = \"green.300\";\r\n          } else if (status === \"info\") {\r\n            bg = \"blueGray.300\";\r\n          } else if (status === \"warning\") {\r\n            bg = \"orange.300\";\r\n          }\r\n          return (\r\n            <Text\r\n              style={{\r\n                fontSize: vw(12),\r\n                fontFamily: \"Poppins_medium\",\r\n                color: \"#33214B\",\r\n              }}\r\n              p={2}\r\n              bg={bg}\r\n              rounded={\"full\"}\r\n            >\r\n              {msg}\r\n            </Text>\r\n          );\r\n        },\r\n      });\r\n    },\r\n    [toast]\r\n  );  \r\n\r\n  const _renderItem = useCallback(\r\n    ({ item, index }) => {\r\n      const isEnd = index === properties.length - 1;\r\n      return listStyle === \"horizontal\" ? (\r\n        <HorizontalItem\r\n          pipelines={pipelines}\r\n          activePipeline={activePipeline}\r\n          item={item}\r\n          isEnd={isEnd}\r\n          _showAlert={_showAlert}\r\n        />\r\n      ) : (\r\n        <VerticalItem\r\n          activePipeline={activePipeline}\r\n          item={item}\r\n          pipelines={pipelines}\r\n          _showAlert={_showAlert}\r\n          cols={cols}\r\n        />\r\n      );\r\n    },\r\n    [\r\n      listStyle,\r\n      activePipeline,\r\n      _showAlert,\r\n      cols,\r\n      pipelines,\r\n      properties.length,\r\n    ]\r\n  );\r\n\r\n  const _getItemLayout = useCallback(\r\n    (data, index) => ({\r\n      length: 180,\r\n      offset: 180 * index,\r\n      index,\r\n    }),\r\n    []\r\n  );\r\n\r\n  const RoundButton = (props) => {\r\n    const [isPressed, setIsPressed] = useState(false);\r\n    return (\r\n      <Center alignItems='center' position={\"fixed\"} bottom={5} right={5} p={2}>\r\n        <Pressable\r\n          zIndex={9999}\r\n          style={{ padding: isPressed ? 10 : 11, marginTop: 1 }}\r\n          borderRadius={100}\r\n          bg={isPressed ? \"white\" : Colors.primary}\r\n          borderColor={isPressed ? Colors.primary : Colors.primary}\r\n          borderWidth={isPressed ? 1 : 0}\r\n          onPressIn={() => {\r\n            setIsPressed(true);\r\n          }}\r\n          onPressOut={() => {\r\n            setIsPressed(false);\r\n          }}\r\n          onPress={() => {\r\n            onOpen();\r\n          }}\r\n        >\r\n          <AddIcon fill={!isPressed ? \"white\" : Colors.primary} />\r\n        </Pressable>\r\n      </Center>\r\n    );\r\n  };\r\n\r\n  const _keyExtractor = useCallback((item) => item._id, []);\r\n\r\n  const ph = 100 - parseFloat(vh(70)) + \"vh\";\r\n\r\n  return (\r\n    <VStack minHeight={\"100vh\"} bg={\"#F7F8FA\"}>\r\n      <NavBar user={user} setLogout={setLogout} />\r\n      <VStack height={ph}>\r\n        <PageHeader\r\n          setListStyle={setListStyle}\r\n          listStyle={listStyle}\r\n          activePipeline={activePipeline}\r\n          pipelines={op}\r\n          _showAlert={_showAlert}\r\n        />\r\n        {isLoading ? (\r\n          <Center height={\"lg\"} alignItems={\"center\"}>\r\n            <Spinner size='small' color={\"#7D2BE9\"} />\r\n          </Center>\r\n        ) : listStyle === \"horizontal\" ? (\r\n          properties && properties.length > 0 ? (\r\n            <>\r\n              <VStack\r\n                shadow={4}\r\n                borderRadius={vh(10)}\r\n                marginX={vh(20)}\r\n                marginTop={vh(20)}\r\n                bg={\"rgba(251, 252, 254, 1)\"}\r\n              >\r\n                {/* <HStack\r\n                    flex={1}\r\n                    width=\"100%\"\r\n                    style={{\r\n                      borderTopLeftRadius: vh(10),\r\n                      borderTopRightRadius: vh(10),\r\n                      backgroundColor: \"rgba(251, 252, 254, 1)\",\r\n                      // marginHorizontal: vw(20),\r\n                      // marginTop: vh(10),\r\n                      paddingHorizontal: vw(20),\r\n                      justifyContent: \"flex-start\",\r\n                      borderBottomWidth: 1,\r\n                      borderBottomColor: \"rgba(0, 0, 0, 0.15)\",\r\n                      height: vh(60),\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      style={{\r\n                        fontSize: vw(15),\r\n                        fontFamily: \"Poppins\",\r\n                        paddingVertical: vh(20),\r\n                        height: vh(60),\r\n                        margin: 0,\r\n                        alignItems: \"center\",\r\n                        // marginLeft: vw(20)\r\n                      }}\r\n                      // flex={2}\r\n                      textAlign={\"left\"}\r\n                      width={\"20%\"}\r\n                      bg=\"amber.100\"\r\n                    >\r\n                      Owner Name\r\n                    </Text>\r\n                    <Text\r\n                      style={{\r\n                        fontSize: vw(15),\r\n                        fontFamily: \"Poppins\",\r\n                        paddingVertical: vh(20),\r\n                        height: vh(60),\r\n                        alignItems: \"center\",\r\n                      }}\r\n                      // flex={2.5}\r\n                      textAlign={\"center\"}\r\n                      width={\"30%\"}\r\n                      bg=\"amber.200\"\r\n                      // marginLeft={vw(50)}\r\n                    >\r\n                      Property Address\r\n                    </Text>\r\n                    <Text\r\n                      style={{\r\n                        fontSize: vw(15),\r\n                        fontFamily: \"Poppins\",\r\n                        paddingVertical: vh(20),\r\n                        height: vh(60),\r\n                        alignItems: \"center\",\r\n                      }}\r\n                      // flex={1.5}\r\n                      textAlign={\"center\"}\r\n                      width={\"20%\"}\r\n                      bg=\"amber.300\"\r\n                    >\r\n                      Added by\r\n                    </Text>\r\n                    <Text\r\n                      style={{\r\n                        fontSize: vw(15),\r\n                        fontFamily: \"Poppins\",\r\n                        paddingVertical: vh(20),\r\n                        height: vh(60),\r\n                        // marginLeft: vw(50),\r\n                        alignItems: \"center\",\r\n                      }}\r\n                      // flex={1.5}\r\n                      textAlign={\"left\"}\r\n                      width={\"10%\"}\r\n                      bg=\"amber.400\"\r\n                    >\r\n                      Added Date\r\n                    </Text>\r\n                    <Text\r\n                      style={{\r\n                        fontSize: vw(15),\r\n                        fontFamily: \"Poppins\",\r\n                        paddingVertical: vh(20),\r\n                        height: vh(60),\r\n                        // marginLeft: vw(150),\r\n                        alignItems: \"center\",\r\n                      }}\r\n                      // flex={1}\r\n                      textAlign={\"center\"}\r\n                      width={\"10%\"}\r\n                      bg=\"amber.500\"\r\n                    >\r\n                      Notes\r\n                    </Text>\r\n                    <Text\r\n                      style={{\r\n                        fontSize: vw(15),\r\n                        fontFamily: \"Poppins\",\r\n                        paddingVertical: vh(20),\r\n                        height: vh(60),\r\n                        alignItems: \"center\",\r\n                      }}\r\n                      // flex={1}\r\n                      width={\"10%\"}\r\n                      textAlign={\"center\"}\r\n                      bg=\"amber.600\"\r\n                    >\r\n                      Actions\r\n                    </Text>\r\n                  </HStack> */}\r\n                <FlatList\r\n                  key={\"list-\" + listStyle}\r\n                  // refreshing={refreshing}\r\n                  removeClippedSubviews={true}\r\n                  _contentContainerStyle={{\r\n                    justifyContent:\r\n                      listStyle === \"vertical\" ? \"space-around\" : \"center\",\r\n                    overflow: \"hidden\",\r\n                    paddingBottom: vh(20),\r\n                  }}\r\n                  // columnWrapperStyle={{ justifyContent: listStyle === \"vertical\" ? \"space-around\" : \"center\" }}\r\n                  getItemLayout={_getItemLayout}\r\n                  disableVirtualization={true}\r\n                  ListHeaderComponent={\r\n                    <HStack\r\n                      flex={1}\r\n                      width='100%'\r\n                      style={{\r\n                        borderTopLeftRadius: vh(10),\r\n                        borderTopRightRadius: vh(10),\r\n                        backgroundColor: \"rgba(251, 252, 254, 1)\",\r\n                        // marginHorizontal: vw(20),\r\n                        // marginTop: vh(10),\r\n                        paddingHorizontal: vw(20),\r\n                        justifyContent: \"flex-start\",\r\n                        borderBottomWidth: 1,\r\n                        borderBottomColor: \"rgba(0, 0, 0, 0.15)\",\r\n                        height: vh(60),\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          fontSize: vw(15),\r\n                          fontFamily: \"Poppins\",\r\n                          paddingVertical: vh(20),\r\n                          height: vh(60),\r\n                          lineHeight: vh(20),\r\n                          alignItems: \"center\",\r\n                          color: Colors.primary,\r\n                        }}\r\n                        flexWrap={\"wrap\"}\r\n                        textAlign={\"left\"}\r\n                        width={\"17.8%\"}\r\n                      >\r\n                        Owner Name\r\n                      </Text>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: vw(15),\r\n                          fontFamily: \"Poppins\",\r\n                          paddingVertical: vh(20),\r\n                          height: vh(60),\r\n                          alignItems: \"center\",\r\n                        }}\r\n                        textAlign={\"center\"}\r\n                        width={\"26.7%\"}\r\n                      >\r\n                        Property Address\r\n                      </Text>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: vw(15),\r\n                          fontFamily: \"Poppins\",\r\n                          paddingVertical: vh(20),\r\n                          height: vh(60),\r\n                          alignItems: \"center\",\r\n                        }}\r\n                        textAlign={\"center\"}\r\n                        width={\"17.8%\"}\r\n                      >\r\n                        Added by\r\n                      </Text>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: vw(15),\r\n                          fontFamily: \"Poppins\",\r\n                          paddingVertical: vh(20),\r\n                          height: vh(60),\r\n                          alignItems: \"center\",\r\n                        }}\r\n                        textAlign={\"center\"}\r\n                        width={\"17.8%\"}\r\n                      >\r\n                        Added Date\r\n                      </Text>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: vw(15),\r\n                          fontFamily: \"Poppins\",\r\n                          paddingVertical: vh(20),\r\n                          height: vh(60),\r\n                          alignItems: \"center\",\r\n                        }}\r\n                        textAlign={\"center\"}\r\n                        width={\"10%\"}\r\n                      >\r\n                        Notes\r\n                      </Text>\r\n                      <Text\r\n                        style={{\r\n                          fontSize: vw(15),\r\n                          fontFamily: \"Poppins\",\r\n                          paddingVertical: vh(20),\r\n                          height: vh(60),\r\n                          alignItems: \"center\",\r\n                        }}\r\n                        width={\"10%\"}\r\n                        textAlign={\"center\"}\r\n                      >\r\n                        Actions\r\n                      </Text>\r\n                    </HStack>\r\n                  }\r\n                  ListEmptyComponent={_emptyComponent}\r\n                  data={properties}\r\n                  extraData={listStyle}\r\n                  keyExtractor={_keyExtractor}\r\n                  renderItem={_renderItem}\r\n                  updateCellsBatchingPeriod={1}\r\n                  initialNumToRender={50}\r\n                  maxToRenderPerBatch={50}\r\n                  numColumns={listStyle === \"vertical\" ? 3 : null}\r\n                />\r\n              </VStack>\r\n              <Center style={{ height: vh(10) }}></Center>\r\n            </>\r\n          ) : (\r\n            _emptyComponent()\r\n          )\r\n        ) : (\r\n          <FlatList\r\n            key={\"list-\" + cols}\r\n            // refreshing={refreshing}\r\n            removeClippedSubviews={true}\r\n            _contentContainerStyle={{\r\n              width: \"100vW\",\r\n              flex: 1,\r\n            }}\r\n            // columnWrapperStyle={{ justifyContent: \"flex-start\" }}\r\n            getItemLayout={_getItemLayout}\r\n            disableVirtualization={true}\r\n            // ListHeaderComponent={}\r\n            ListEmptyComponent={_emptyComponent}\r\n            data={properties}\r\n            extraData={listStyle}\r\n            keyExtractor={_keyExtractor}\r\n            renderItem={_renderItem}\r\n            updateCellsBatchingPeriod={1}\r\n            initialNumToRender={50}\r\n            maxToRenderPerBatch={50}\r\n            numColumns={cols}\r\n          />\r\n        )}\r\n\r\n        {total > limit && (\r\n          <ShadowPagination\r\n            limit={limit}\r\n            total={total}\r\n            page={page}\r\n            setPage={setPage}\r\n            setIsLoading={setIsLoading}\r\n          />\r\n        )}\r\n\r\n        <Actionsheet\r\n          isOpen={isOpen}\r\n          onClose={() => {\r\n            onClose();\r\n            setReload(!reload);\r\n          }}\r\n        >\r\n          <Actionsheet.Content\r\n            alignSelf={\"center\"}\r\n            width={[\"90vw\", 500]}\r\n            bg={\"white\"}\r\n          >\r\n            <Center>\r\n              <Text fontSize={18}>Add Contacts</Text>\r\n              <Text fontSize={12}>{activePipeline && activePipeline.name}</Text>\r\n            </Center>\r\n            <AddContacts\r\n              pipelines={\r\n                pipelines && pipelines.length > 0 && pipelines.map((p) => p._id)\r\n              }\r\n              pipeline={activePipeline && activePipeline._id}\r\n              dispatch={dispatch}\r\n              socket={socket}\r\n              _showAlert\r\n            />\r\n          </Actionsheet.Content>\r\n        </Actionsheet>\r\n      </VStack>\r\n      {pipelines && pipelines.length > 0 && <RoundButton />}\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"],"names":["vw","Util","vh","ShadowInput","React","props","ref","isRequired","isInvalid","invalid","isReadOnly","style","height","label","fontSize","fontFamily","color","labelstyle","control","rules","name","zIndex","render","field","onChange","value","onBlur","size","multiline","numberOfLines","minLength","maxLength","autoComplete","autoFocus","type","onSubmitEditing","onKeyPress","onChangeText","variant","invalidOutlineColor","focusOutlineColor","_invalid","borderColor","borderWidth","_light","_dark","_web","backgroundColor","InputLeftElement","leftIcon","InputRightElement","rightIcon","placeholder","marginTop","error","help","ShadowPagination","total","limit","setLimit","setPage","page","setIsLoading","view","pageCount","Math","ceil","MyPaginate","styled","ReactPaginate","attrs","activeClassName","HStack","boxShadow","justifyContent","alignItems","paddingHorizontal","Text","marginRight","Select","outlineColor","outlineStyle","selectedValue","parseInt","width","onValueChange","v","dropdownIcon","DropDownIcon","marginLeft","breakLabel","nextLabel","onPageChange","p","selected","pageRangeDisplayed","marginPagesDisplayed","previousLabel","renderOnZeroPageCount","forcePage","fill","xmlns","viewBox","Path","d","fillRule","stroke","G","SocketContext","setShowModal","showModal","_showAlert","dispatch","useDispatch","useState","isSaving","setIsSaving","useForm","mode","handleSubmit","errors","formState","reset","onSubmit","data","action","pipelineActions","console","log","message","bodyHeight","isOpen","close","cancel","save","header","buttons","space","onPress","isLoading","e","key","preventDefault","required","inputStyle","setIsAlertOpen","setShowMoveDialog","isHover","setIsHover","Menu","placement","borderRadius","trigger","triggerProps","Pressable","accessibilityLabel","MoreIcon","background","onHoverIn","onHoverOut","textAlign","Colors","_id","notes","NoteForm","setIsFocused","note","setNote","saveNote","propertiesActions","VStack","w","Input","placeholderTextColor","onFocus","txt","paddingVertical","selectionColor","Spinner","top","right","position","NoteItem","item","createdname","moment","created","format","NoteList","ScrollView","marginBottom","maxHeight","length","map","idx","Popover","paddingTop","NotesIcon","borderBottomColor","borderBottomWidth","flex","isEnd","pipelines","activePipeline","socket","createdUser","fullname","firstname","lastname","trim","isAlertOpen","propertyPipeline","setPropertyPipeline","showMoveDialog","moveProperty","pipeline","from","to","property","find","onAlertClose","lineHeight","flexWrap","tid","propertyaddress","Box","Center","Modal","onClose","maxWidth","_text","marginVertical","marginHorizontal","flexDirection","_actionSheetContent","_selectedItem","endIcon","Check","filter","_pressed","Button","ShadowButton","AlertDialog","cols","sqft","acre","toString","window","screen","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","padding","borderTopWidth","borderTopColor","SqftIcon","AcreIcon","BedIcon","bed","BathIcon","bath","getUser","localStorage","getItem","JSON","parse","AddContacts","sRef","useRef","cRef","setTotal","reload","setReload","pIsSav","search","setSearch","properties","setProperties","_getData","useCallback","inPipeline","ninPipelines","token","fetch","API_URL","method","headers","Authorization","body","stringify","skip","fields","owneraddress","sort","response","ok","json","errData","Error","resData","count","useEffect","unmounted","NoItemsFound","minHeight","RenderItem","pipelineRef","setInPipeline","saveProperty","del","events","current","err","View","Checkbox","isChecked","colorScheme","paddingBottom","rounded","nativeEvent","text","visibility","leftElement","SearchIcon","rightElement","CloseIcon","FlatList","contentContainerStyle","ListEmptyComponent","keyExtractor","renderItem","initialNumToRender","maxToRenderPerBatch","bottom","n","PageHeader","listStyle","setListStyle","setIsOpen","isOpenMove","setIsOpenMove","isDeleting","setIsDeleting","deleteHandler","moveHandler","f","t","Hidden","only","zoom","bg","linearGradient","colors","start","end","orientation","a","x","setItem","setOrientation","NavListIcon","ord","AddPipeline","ShadowModal","user","setLogout","useMediaQuery","landscape","useBreakpointValue","base","sm","lg","md","xl","floor","toast","useToast","useContext","useDisclose","onOpen","useSelector","state","getOrientation","op","_","_emptyComponent","status","msg","show","_renderItem","index","_getItemLayout","offset","RoundButton","isPressed","setIsPressed","onPressIn","onPressOut","AddIcon","_keyExtractor","ph","parseFloat","NavBar","shadow","marginX","removeClippedSubviews","_contentContainerStyle","overflow","getItemLayout","disableVirtualization","ListHeaderComponent","borderTopLeftRadius","borderTopRightRadius","extraData","updateCellsBatchingPeriod","numColumns","Actionsheet","alignSelf"],"sourceRoot":""}