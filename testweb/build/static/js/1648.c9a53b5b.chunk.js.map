{"version":3,"file":"static/js/1648.c9a53b5b.chunk.js","mappings":"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","sources":["components/ShadowPagination.js","components/ShadowSwitch.js","constants/Colors.js","pages/private/campaigns/VerticalItem.js","pages/private/campaigns/AddCampaign.js","pages/private/campaigns/index.js","store/actions/templates.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { HStack, Select, Center, Pressable, Text } from \"native-base\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { vh, vw } from \"../util\";\r\nimport PrevIcon from \"./svg/PrevIcon\";\r\nimport NextIcon from \"./svg/NextIcon\";\r\nimport Colors from \"../constants/Colors\";\r\nimport DropDownIcon from \"./svg/DropDownIcon\";\r\n\r\nconst ShadowPagination = ({\r\n  total = 1,\r\n  limit = 10,\r\n  setLimit,\r\n  setPage,\r\n  page,\r\n  setIsLoading,\r\n  style,\r\n  view = true,\r\n  \r\n}) => {\r\n  const pageCount = Math.ceil(total / limit);\r\n\r\n  const onPageChange = (p) => {\r\n    setPage(p.selected + 1);\r\n  };\r\n\r\n  const MyPaginate = styled(ReactPaginate).attrs({\r\n    activeClassName: \"active\", // default to \"disabled\"\r\n  })`\r\n    margin-bottom: 1rem;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-end;\r\n    list-style-type: none;\r\n    padding: 0 1rem;\r\n    li a {\r\n      border-radius: 4px;\r\n      padding: 0.1rem 1rem;\r\n      cursor: pointer;\r\n      color: rgba(102, 102, 102, 1);\r\n      font-family: \"Poppins_medium\";\r\n      font-size: ${vw(15)};\r\n    }\r\n    li.previous a,\r\n    li.next a,\r\n    li.break a {\r\n      border-color: transparent;\r\n      color: rgba(102, 102, 102, 1);\r\n      font-family: \"Poppins_medium\";\r\n      font-size: ${vw(15)};\r\n    }\r\n    li.active a {\r\n      background-color: #7d2be9;\r\n      border-color: transparent;\r\n      color: white;\r\n      min-width: 24px;\r\n      font-family: \"Poppins_medium\";\r\n      font-size: ${vw(15)};\r\n    }\r\n    li.disabled a {\r\n      color: rgba(102, 102, 102, 0.5);\r\n    }\r\n    li.disable,\r\n    li.disabled a {\r\n      cursor: default;\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <HStack\r\n      style={{\r\n        boxShadow: \"0px 0px 15px rgba(0, 0, 0, 0.1)\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        height: vh(60),\r\n        backgroundColor: \"white\", //\"rgba(247, 248, 250, 1)\",\r\n        ...style,\r\n      }}\r\n    >\r\n      {view ? (\r\n        <HStack style={{ alignItems: \"center\", paddingHorizontal: vh(20) }}>\r\n          <Text\r\n            style={{\r\n              fontFamily: \"Poppins_medium\",\r\n              fontSize: vw(15),\r\n              color: \"rgba(102, 102, 102, 1)\",\r\n              marginRight: vw(10),\r\n            }}\r\n          >\r\n            View\r\n          </Text>\r\n          <Select\r\n            outlineColor={\"rgba(0,0,0.0.15)\"}\r\n            outlineStyle={{\r\n              borderWidth: vh(2),\r\n            }}\r\n            variant='outline'\r\n            selectedValue={parseInt(limit)}\r\n            style={{\r\n              width: vw(50),\r\n            }}\r\n            onValueChange={(v) => {\r\n              setPage(1);\r\n              setLimit(v);\r\n            }}\r\n            dropdownIcon={<DropDownIcon />}\r\n          >\r\n            <Select.Item label={\"1\"} value={1} />\r\n            <Select.Item label={\"5\"} value={5} />\r\n            <Select.Item label={\"10\"} value={10} />\r\n            <Select.Item label={\"20\"} value={20} />\r\n            <Select.Item label={\"30\"} value={30} />\r\n            <Select.Item label={\"40\"} value={40} />\r\n            <Select.Item label={\"50\"} value={50} />\r\n            <Select.Item label={\"100\"} value={100} />\r\n          </Select>\r\n          <Text\r\n            style={{\r\n              fontFamily: \"Poppins_medium\",\r\n              fontSize: vw(15),\r\n              color: \"rgba(102, 102, 102, 1)\",\r\n              marginLeft: vw(10),\r\n            }}\r\n          >\r\n            per page\r\n          </Text>\r\n        </HStack>\r\n      ) : (\r\n        <HStack></HStack>\r\n      )}\r\n      <MyPaginate\r\n        breakLabel='...'\r\n        nextLabel='Next >'\r\n        onPageChange={onPageChange}\r\n        pageRangeDisplayed={3}\r\n        marginPagesDisplayed={2}\r\n        pageCount={pageCount}\r\n        previousLabel='< Previous'\r\n        renderOnZeroPageCount={null}\r\n        forcePage={page - 1}\r\n      />\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShadowPagination);\r\n","import React from \"react\";\r\nimport { Switch, FormControl } from \"native-base\";\r\nimport { Controller } from \"react-hook-form\";\r\nimport { vw, vh } from \"../util\";\r\nimport Colors from \"../constants/Colors\";\r\n\r\nconst ShadowSwitch = (props) => {\r\n  return (\r\n    <FormControl\r\n      isInvalid={props.invalid}\r\n      style={{\r\n        height: vh(48),\r\n        ...props.style,\r\n      }}\r\n    >\r\n      {props.label && (\r\n        <FormControl.Label\r\n          style={{\r\n            fontSize: vw(13),\r\n            fontFamily: \"Poppins_medium\",\r\n            color: props.invalid ? \"red.500\" : \"rgba(102, 102, 102, 0.7)\",\r\n            height: vh(19),\r\n          }}\r\n        >\r\n          {props.label}\r\n        </FormControl.Label>\r\n      )}\r\n\r\n      <Controller\r\n        control={props.control}\r\n        rules={props.rules}\r\n        name={props.name}\r\n        render={({ field: { onChange, onBlur, value } }) => (\r\n          <Switch\r\n            onTrackColor={Colors.primary}\r\n            style={{ marginTop: vh(10) }}\r\n            size={\"md\"}\r\n            {...props}\r\n            onToggle={(v) => {\r\n              // console.log(v);\r\n              // setIsChecked(v);\r\n              props.isChanged(v);\r\n              onChange(v);\r\n            }}\r\n            // isChecked={true}\r\n            colorScheme=\"purple\"\r\n          />\r\n        )}\r\n      />\r\n      <FormControl.ErrorMessage style={{ marginTop: vh(-3) }}>\r\n        {props.error}\r\n      </FormControl.ErrorMessage>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default ShadowSwitch;\r\n","export default {\r\n  primary: 'rgba(125, 43, 233, 1)',\r\n  accent: '#FFC107'\r\n};\r\n","import React from \"react\";\r\nimport { VStack, Text, Pressable, HStack } from \"native-base\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { vh, vw } from \"../../../util\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport * as events from \"../../../store/events\";\r\n\r\nconst VerticalItem = ({ item, setIsOpen }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Pressable\r\n      onPress={async () => {\r\n        await dispatch({ type: events.SET_CURRENT_CAMPAIGN, data: item });\r\n        setIsOpen(true);\r\n      }}\r\n    >\r\n      <VStack\r\n        style={{\r\n          boxShadow: \"0px 3px 10px #0000001A\",\r\n          width: vw(345),\r\n          height: vh(100),\r\n          marginHorizontal: vw(20),\r\n          marginVertical: vh(10),\r\n          borderRadius: vw(10),\r\n          backgroundColor: \"white\",\r\n        }}\r\n      >\r\n        <Text\r\n          style={{\r\n            marginHorizontal: vw(10),\r\n            marginTop: vh(5),\r\n            color: Colors.primary,\r\n            fontFamily: \"Poppins_medium\",\r\n            fontSize: vw(15),\r\n          }}\r\n        >\r\n          {item.name}\r\n        </Text>\r\n        <Text\r\n          style={{\r\n            marginTop: vh(5),\r\n            marginHorizontal: vw(10),\r\n            color: \"rgba(0,0,0, 0.5)\",\r\n            fontFamily: \"Poppins\",\r\n            fontSize: vw(11),\r\n          }}\r\n        >\r\n          {item.description}\r\n        </Text>\r\n        <HStack\r\n          style={{ marginTop: vh(6), marginHorizontal: vw(10) }}\r\n          justifyContent={\"space-between\"}\r\n        >\r\n          <Text\r\n            style={{\r\n              color: \"#686868\",\r\n              fontFamily: \"Poppins\",\r\n              fontSize: vw(13),\r\n            }}\r\n          >\r\n            {item.send_mode}\r\n          </Text>\r\n          <Pressable onPress={() => {}}>\r\n            <Text\r\n              style={{\r\n                fontSize: vw(13),\r\n                fontFamily: \"Poppins\",\r\n                color: Colors.primary,\r\n              }}\r\n            >\r\n              {item.default\r\n                ? item.team === item.createdUser._id\r\n                  ? \"Team Default\"\r\n                  : \"Default\"\r\n                : \"\"}\r\n            </Text>\r\n          </Pressable>\r\n        </HStack>\r\n      </VStack>\r\n    </Pressable>\r\n  );\r\n};\r\n\r\nexport default React.memo(VerticalItem);\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  Pressable,\r\n  Text,\r\n  Center,\r\n  Button,\r\n  HStack,\r\n  VStack,\r\n  useToast,\r\n  useBreakpointValue,\r\n  Spinner,\r\n  Hidden,\r\n} from \"native-base\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport _ from \"lodash\";\r\nimport moment from \"moment\";\r\n\r\nimport * as campaignActions from \"../../../store/actions/campaigns\";\r\nimport ShadowInput from \"../../../components/ShadowInput\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport { vw, vh } from \"../../../util\";\r\nimport ShadowSwitch from \"../../../components/ShadowSwitch\";\r\nimport ShadowSelect from \"../../../components/ShadowSelect\";\r\nimport ShadowButton from \"../../../components/ShadowButton\";\r\nimport DropDownIcon from \"../../../components/svg/DropDownIcon\";\r\nimport ShadowModal from \"../../../components/ShadowModal\";\r\n\r\nconst AddCampaign = ({ isOpen, setIsOpen, templates }) => {\r\n  const sz = useBreakpointValue({\r\n    base: \"base\",\r\n    sm: \"sm\",\r\n    lg: \"lg\",\r\n    md: \"md\",\r\n    xl: \"xl\",\r\n  });\r\n  const navigate = useNavigate();\r\n  const toast = useToast();\r\n  const dispatch = useDispatch();\r\n  const cancelRef = React.useRef(null);\r\n  const [isAlertOpen, setIsAlertOpen] = React.useState(false);\r\n  // const [isDeleting, setIsDeleting] = useState(false);\r\n  const onClose = useCallback(() => setIsOpen(false), [setIsOpen]);\r\n  const onAlertClose = () => setIsAlertOpen(false);\r\n  const [alertConfig, setAlertConfig] = useState({\r\n    header: \"\",\r\n    desc: \"\",\r\n    nolabel: \"No\",\r\n    yeslabel: \"Yes\",\r\n    yes: () => {},\r\n    no: onClose,\r\n  });\r\n\r\n  const { currentCampaign } = useSelector((state) => state.campaigns);\r\n\r\n  const redirect = \"campaigns\";\r\n\r\n  const initStep = [\r\n    {\r\n      active: true,\r\n      postcardtemplate: \"not-send\",\r\n      postcardrepeat: false,\r\n      postcardevery: \"\",\r\n      postcards: \"\",\r\n      emailtemplate: \"not-send\",\r\n      emailrepeat: false,\r\n      emailevery: \"\",\r\n      emails: \"\",\r\n      sendtime: \"\",\r\n    },\r\n  ];\r\n\r\n  const [steps, setSteps] = useState(\r\n    (currentCampaign && currentCampaign.steps) || initStep\r\n  );\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [stepChanged, setStepChanged] = useState(false);\r\n  const activeStep = steps.find((s) => s.active);\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    getValues,\r\n    setValue,\r\n    trigger,\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n    defaultValues: _.isEmpty(currentCampaign)\r\n      ? {\r\n          name: \"\",\r\n          description: \"\",\r\n          default: false,\r\n          send_mode: \"Attach Automatically\",\r\n          postcardtemplate: \"not-send\",\r\n          postcardrepeat: false,\r\n          postcardevery: \"\",\r\n          postcards: \"\",\r\n          emailtemplate: \"not-send\",\r\n          emailrepeat: false,\r\n          emailevery: \"\",\r\n          emails: \"\",\r\n          sendtime: \"\",\r\n        }\r\n      : {\r\n          name: currentCampaign.name,\r\n          description: currentCampaign.description,\r\n          default: currentCampaign.default,\r\n          send_mode: currentCampaign.send_mode,\r\n          postcardtemplate:\r\n            activeStep && activeStep.postcardtemplate\r\n              ? activeStep.postcardtemplate\r\n              : \"not-send\",\r\n          postcardrepeat:\r\n            activeStep && activeStep.postcardrepeat\r\n              ? activeStep.postcardrepeat\r\n              : false,\r\n          postcardevery:\r\n            activeStep && activeStep.postcardevery\r\n              ? activeStep.postcardevery\r\n              : \"\",\r\n          postcards:\r\n            activeStep && activeStep.postcards ? activeStep.postcards : \"\",\r\n          emailtemplate:\r\n            activeStep && activeStep.emailtemplate\r\n              ? activeStep.emailtemplate\r\n              : \"not-send\",\r\n          emailrepeat:\r\n            activeStep && activeStep.emailrepeat\r\n              ? activeStep.emailrepeat\r\n              : false,\r\n          emailevery:\r\n            activeStep && activeStep.emailevery ? activeStep.emailevery : \"\",\r\n          emails: activeStep && activeStep.emails ? activeStep.emails : \"\",\r\n          sendtime:\r\n            activeStep && activeStep.sendtime ? activeStep.sendtime : \"\",\r\n        },\r\n  });\r\n\r\n  const sendMode = getValues(\"send_mode\");\r\n\r\n  const _showAlert = useCallback(\r\n    (status, msg) => {\r\n      toast.show({\r\n        placement: \"top\",\r\n        render: () => {\r\n          let bg = \"red.300\";\r\n          if (status === \"error\") {\r\n            bg = \"red.300\";\r\n          } else if (status === \"success\") {\r\n            bg = \"green.300\";\r\n          } else if (status === \"info\") {\r\n            bg = \"blueGray.300\";\r\n          } else if (status === \"warning\") {\r\n            bg = \"orange.300\";\r\n          }\r\n          return (\r\n            <Text\r\n              style={{\r\n                fontSize: vw(12),\r\n                fontFamily: \"Poppins_medium\",\r\n                color: \"#33214B\",\r\n              }}\r\n              p={2}\r\n              bg={bg}\r\n              rounded={\"full\"}\r\n            >\r\n              {msg}\r\n            </Text>\r\n          );\r\n        },\r\n      });\r\n    },\r\n    [toast]\r\n  );\r\n\r\n  const saveHandler = async (data) => {\r\n    // if (Object.keys(errors).length > 0) {\r\n    //   _showAlert(\"error\", \"Check your enteries\");\r\n    //   setIsSaving(false);\r\n    //   return;\r\n    // }\r\n\r\n    const templatesNotFound = steps.filter(\r\n      (f) => f.postcardtemplate === \"not-send\" && f.emailtemplate === \"not-send\"\r\n    );\r\n\r\n    if (templatesNotFound && templatesNotFound.length > 0) {\r\n      _showAlert(\"error\", \"No template selected in one of the steps.\");\r\n      setIsSaving(false);\r\n      return;\r\n    }\r\n\r\n    const postdata = {\r\n      name: data.name,\r\n      description: data.description,\r\n      default: data.default,\r\n      send_mode: data.send_mode,\r\n      steps: steps.map((item, index) => {\r\n        item.step = index + 1;\r\n        return item;\r\n      }),\r\n    };\r\n\r\n    // console.log(\"steps\", steps);\r\n\r\n    if (currentCampaign && currentCampaign._id) {\r\n      postdata[\"_id\"] = currentCampaign._id;\r\n    }\r\n\r\n    const action = !currentCampaign\r\n      ? campaignActions.createCampaign(postdata)\r\n      : campaignActions.updateCampaign(postdata);\r\n    let iseq = false;\r\n    if (currentCampaign) {\r\n      const cc = currentCampaign;\r\n      delete cc.active;\r\n      delete cc.team;\r\n      delete cc.createdUser;\r\n\r\n      iseq = _.isEqual(cc, postdata);\r\n    }\r\n\r\n    const msg = !postdata._id\r\n      ? \"Campaign created successfully.\"\r\n      : \"Campaign updated successfully.\";\r\n    // setIsSaving(true);\r\n    try {\r\n      await dispatch(action);\r\n\r\n      if (redirect === \"home\") {\r\n        navigate(-1);\r\n      }\r\n      _showAlert(\"success\", msg);\r\n      setIsSaving(false);\r\n      if (!currentCampaign) {\r\n        onClose();\r\n      } else {\r\n        if (iseq) {\r\n          onClose();\r\n        } else {\r\n          setAlertConfig({\r\n            header: \"Attention!\",\r\n            desc: \"Saved changes to the campaign take effect on newly added properties or to properties that you manually add/edit in campaign config.\",\r\n            nolabel: \"Okay\",\r\n            yeslabel: \"\",\r\n            yes: () => {},\r\n            no: onClose,\r\n          });\r\n          setIsAlertOpen(true);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(\"Created Error\", err);\r\n      _showAlert(\"error\", err.message);\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isSaving) {\r\n      handleSubmit(saveHandler, () => {\r\n        setIsSaving(false);\r\n      })();\r\n    }\r\n  }, [isSaving]);\r\n\r\n  useEffect(() => {\r\n    if (getValues(\"send_mode\") === \"Attach Manually\") {\r\n      setValue(\"postcardrepeat\", false);\r\n      trigger(\"postcardrepeat\");\r\n      setValue(\"emailrepeat\", false);\r\n      trigger(\"emailrepeat\");\r\n      setStepChanged(true);\r\n    }\r\n  }, [sendMode, getValues, setValue, trigger]);\r\n\r\n  useEffect(() => {\r\n    const updateStep = () => {\r\n      let activeSteps = steps;\r\n      const activeIndex = activeSteps.findIndex((item) => item.active === true);\r\n      activeSteps[activeIndex] = {\r\n        active: true,\r\n        postcards:\r\n          getValues &&\r\n          getValues(\"postcards\") &&\r\n          getValues(\"postcards\").toString(),\r\n        postcardrepeat: getValues && getValues(\"postcardrepeat\"),\r\n        postcardevery:\r\n          getValues &&\r\n          getValues(\"postcardevery\") &&\r\n          getValues(\"postcardevery\").toString(),\r\n        postcardtemplate: getValues && getValues(\"postcardtemplate\"),\r\n        emails:\r\n          getValues && getValues(\"emails\") && getValues(\"emails\").toString(),\r\n        sendtime:\r\n          getValues &&\r\n          getValues(\"sendtime\") &&\r\n          getValues(\"sendtime\").toString(),\r\n        emailrepeat:\r\n          getValues && getValues(\"emailrepeat\") && getValues(\"emailrepeat\"),\r\n        emailevery:\r\n          getValues &&\r\n          getValues(\"emailevery\") &&\r\n          getValues(\"emailevery\").toString(),\r\n        emailtemplate: getValues && getValues(\"emailtemplate\"),\r\n      };\r\n\r\n      setStepChanged(false);\r\n      setSteps(activeSteps);\r\n    };\r\n    if (stepChanged) {\r\n      updateStep();\r\n    }\r\n  }, [getValues, stepChanged, steps]);\r\n\r\n  const addNewStep = () => {\r\n    let inactiveSteps = steps.map((item, index) => {\r\n      item.active = false;\r\n      return item;\r\n    });\r\n\r\n    const postcardTemplate = \"not-send\";\r\n    const emailTemplate = \"not-send\";\r\n\r\n    const activeSteps = inactiveSteps.concat({\r\n      active: true,\r\n      postcardtemplate: postcardTemplate,\r\n      postcardrepeat: postcardTemplate === \"not-send\" ? false : true,\r\n      postcardevery: \"\",\r\n      postcards: \"\",\r\n      emailtemplate: emailTemplate,\r\n      emailrepeat: emailTemplate === \"not-send\" ? false : true,\r\n      emailevery: \"\",\r\n      emails: \"\",\r\n      sendtime: \"\",\r\n    });\r\n\r\n    // console.log(\"active steps\", activeSteps);\r\n\r\n    setValue(\"postcardtemplate\", postcardTemplate);\r\n    setValue(\"emailtemplate\", emailTemplate);\r\n    setValue(\"postcardevery\", \"\");\r\n    setValue(\"emailevery\", \"\");\r\n    setValue(\"postcards\", \"\");\r\n    setValue(\"emails\", \"\");\r\n    setValue(\"sendtime\", \"\");\r\n    setSteps(activeSteps);\r\n  };\r\n\r\n  const makeStepActive = (selectedIndex) => {\r\n    if (steps.length === 1 && !currentCampaign) {\r\n      return;\r\n    }\r\n    const allSteps = steps.map((item, index) => {\r\n      if (index === selectedIndex) {\r\n        setValue(\r\n          \"postcardtemplate\",\r\n          item.postcardtemplate ? item.postcardtemplate : \"not-send\"\r\n        );\r\n        setValue(\r\n          \"emailtemplate\",\r\n          item.emailtemplate ? item.emailtemplate : \"not-send\"\r\n        );\r\n        setValue(\r\n          \"postcardrepeat\",\r\n          item.postcardrepeat ? item.postcardrepeat : false\r\n        );\r\n        setValue(\"postcardevery\", item.postcardevery ? item.postcardevery : \"\");\r\n        setValue(\"postcards\", item.postcards ? item.postcards : \"\");\r\n        setValue(\"emailrepeat\", item.emailrepeat ? item.emailrepeat : false);\r\n        setValue(\"emailevery\", item.emailevery ? item.emailevery : \"\");\r\n        setValue(\"emails\", item.emails ? item.emails : \"\");\r\n        setValue(\"sendtime\", item.sendtime ? item.sendtime : \"\");\r\n        trigger();\r\n\r\n        item.active = item.active ? false : true;\r\n        if (!item.postcardtemplate) {\r\n          item.postcardtemplate = \"not-send\";\r\n        }\r\n        return item;\r\n      } else {\r\n        item.active = false;\r\n        return item;\r\n      }\r\n    });\r\n    setSteps(allSteps);\r\n  };\r\n\r\n  const deleteStep = () => {\r\n    const availableSteps = steps.filter((item) => !item.active);\r\n\r\n    // console.log(\"Available Steps\", availableSteps);\r\n    const currStep = availableSteps[availableSteps.length - 1];\r\n    availableSteps[availableSteps.length - 1].active = true;\r\n    currStep.active = true;\r\n    setValue(\r\n      \"postcardtemplate\",\r\n      currStep.postcardtemplate ? currStep.postcardtemplate : \"not-send\"\r\n    );\r\n    setValue(\r\n      \"emailtemplate\",\r\n      currStep.emailtemplate ? currStep.emailtemplate : \"not-send\"\r\n    );\r\n    setValue(\"postcardevery\", currStep.postcardevery);\r\n    setValue(\"emailevery\", currStep.emailevery);\r\n    setValue(\"postcards\", currStep.postcards);\r\n    setValue(\"emails\", currStep.emails);\r\n    setValue(\"sendtime\", currStep.sendtime);\r\n    setSteps(availableSteps);\r\n    _showAlert(\"success\", \"Step deleted successfully.\");\r\n    setIsAlertOpen(false);\r\n  };\r\n\r\n  const deleteHandler = async () => {\r\n    if (currentCampaign && currentCampaign._id) {\r\n      setIsLoading(true);\r\n      try {\r\n        const action = campaignActions.deleteCampaign(currentCampaign._id);\r\n        await dispatch(action);\r\n        _showAlert(\"success\", \"Campaign deleted successfully.\");\r\n        navigate(\"/campaigns\");\r\n      } catch (err) {\r\n        if (err.message === \"CAMPAIGN-ATTACHED\") {\r\n          setAlertConfig({\r\n            header: \"Sorry!\",\r\n            desc: \"Cannot delete campaign used by one or more properties, you can only delete campaigns that are not assigned to any property.\",\r\n            nolabel: \"Okay\",\r\n            yeslabel: \"\",\r\n            yes: () => {},\r\n            no: onClose,\r\n          });\r\n          setIsOpen(true);\r\n        } else {\r\n          _showAlert(\"err\", err.message);\r\n        }\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (templates.length === 0) {\r\n    return (\r\n      <Center flex={1}>\r\n        <Text>An error occurred!</Text>\r\n        <Button\r\n          style={{ color: Colors.primary, margin: 5, paddingHorizontal: 5 }}\r\n          onPress={() => {}}\r\n        >\r\n          <Text style={{ color: \"white\" }}>No templates Found.</Text>\r\n        </Button>\r\n      </Center>\r\n    );\r\n  }\r\n\r\n  const postcardTemplates = [\r\n    { name: \"Not send mail\", _id: \"not-send\", templatetype: \"postcard\" },\r\n    ...templates,\r\n  ]\r\n    .filter((f) => f.templatetype === \"postcard\")\r\n    .map((item) => {\r\n      return { label: item.name, value: item._id };\r\n    });\r\n\r\n  const emailTemplates = [\r\n    { name: \"Not send email\", _id: \"not-send\", templatetype: \"email\" },\r\n    ...templates,\r\n  ]\r\n    .filter((f) => f.templatetype === \"email\")\r\n    .map((item) => {\r\n      return { label: item.name, value: item._id };\r\n    });\r\n\r\n  const sendingModes = [\r\n    \"Attach Automatically\",\r\n    \"Attach Manually\",\r\n    \"Stop Sending\",\r\n  ];\r\n\r\n  const sendingModeOptions = sendingModes.map((item) => {\r\n    return { label: item, value: item };\r\n  });\r\n\r\n  const sendTime = [...Array(24).keys()].map((item) => {\r\n    return {\r\n      label: moment().startOf(\"day\").add(item, \"hours\").format(\"HH:mm\"),\r\n      value: item.toString(),\r\n    };\r\n  });\r\n\r\n  return isLoading ? (\r\n    <Center bg={\"white\"} flex={1}>\r\n      <Spinner size={\"small\"} color={Colors.primary} />\r\n    </Center>\r\n  ) : (\r\n    <>\r\n      <VStack bg={\"white\"} mb={20}>\r\n        <ShadowModal\r\n          size={\"xl\"}\r\n          // top={sz === \"md\" ? 0 : 0}\r\n          // height={\r\n          //   sz === \"base\" || sz === \"sm\"\r\n          //     ? window.screen.height - 20\r\n          //     : window.screen.height - 200\r\n          // }\r\n          header={\r\n            currentCampaign && currentCampaign._id\r\n              ? \"Edit Campaign\"\r\n              : \"Create Campaign\"\r\n          }\r\n          isOpen={isOpen}\r\n          close={() => {\r\n            onClose();\r\n          }}\r\n          isLoading={isSaving}\r\n          save={() => {\r\n            if (Object.keys(errors).length === 0) {\r\n              setIsSaving(true);\r\n            }\r\n          }}\r\n          footerStyle={{\r\n            justifyContent: \"space-between\",\r\n          }}\r\n          // width={sz === \"base\" || sz === \"sm\" ? \"99vw\" : vw(620)}\r\n          buttons={\r\n            <HStack justifyContent={\"space-between\"} width={\"100%\"} space={2}>\r\n              <HStack justifyContent={\"flex-start\"} space={2}>\r\n                <ShadowButton\r\n                  space={2}\r\n                  label={sz === \"base\" || sz === \"sm\" ? \"+\" : \"Add Step\"}\r\n                  // isLoading={isSaving}\r\n                  onPress={() => {\r\n                    if (\r\n                      activeStep.postcardtemplate === \"not-send\" &&\r\n                      activeStep.emailtemplate === \"not-send\"\r\n                    ) {\r\n                      _showAlert(\r\n                        \"error\",\r\n                        \"Please select a template in the current step to add a new one.\"\r\n                      );\r\n                      return;\r\n                    }\r\n\r\n                    addNewStep();\r\n                  }}\r\n                  style={{\r\n                    // minWidth: vw(40),\r\n                    height: vh(36),\r\n                  }}\r\n                />\r\n              </HStack>\r\n              <HStack justifyContent={\"flex-end\"} space={2}>\r\n                {currentCampaign && currentCampaign._id && (\r\n                  <ShadowButton\r\n                    space={2}\r\n                    variant='outline'\r\n                    label={sz === \"base\" || sz === \"sm\" ? \"X\" : \"Delete\"}\r\n                    style={{\r\n                      // minWidth: vw(40),\r\n                      height: vh(36),\r\n                      backgroundColor: \"rgba(255,0,0,0.3)\",\r\n                    }}\r\n                    onPress={() => {\r\n                      setAlertConfig({\r\n                        header: \"Delete!\",\r\n                        desc: \"Are you sure you want to delete this campaign?\",\r\n                        nolabel: \"No\",\r\n                        yeslabel: \"Yes\",\r\n                        yes: deleteHandler,\r\n                        no: onAlertClose,\r\n                      });\r\n                      setIsAlertOpen(true);\r\n                      return;\r\n                    }}\r\n                  />\r\n                )}\r\n                <ShadowButton\r\n                  space={2}\r\n                  color={Colors.primary}\r\n                  variant='outline'\r\n                  label={\"Cancel\"}\r\n                  onPress={() => {\r\n                    onClose();\r\n                  }}\r\n                  style={{\r\n                    // width: vw(36),\r\n                    height: vh(36),\r\n                  }}\r\n                />\r\n                <ShadowButton\r\n                  space={3}\r\n                  label={\"Save\"}\r\n                  isLoading={isSaving}\r\n                  style={{\r\n                    // width: vw(36),\r\n                    height: vh(36),\r\n                  }}\r\n                  onPress={() => {\r\n                    if (\r\n                      activeStep.postcardtemplate === \"not-send\" &&\r\n                      activeStep.emailtemplate === \"not-send\"\r\n                    ) {\r\n                      _showAlert(\r\n                        \"error\",\r\n                        \"Please select a template in the current step to save this campaign.\"\r\n                      );\r\n                      return;\r\n                    }\r\n                    if (Object.keys(errors).length === 0) {\r\n                      setIsSaving(true);\r\n                    }\r\n                  }}\r\n                />\r\n              </HStack>\r\n            </HStack>\r\n          }\r\n        >\r\n          <VStack style={{ zoom: \"90%\" }}>\r\n            <HStack\r\n              space={4}\r\n              style={{\r\n                width: sz === \"base\" || sz === \"sm\" ? \"94vw\" : vw(612),\r\n                justifyContent: \"space-between\",\r\n                // marginHorizontal: vw(20),\r\n                marginBottom: vh(20),\r\n              }}\r\n            >\r\n              <ShadowInput\r\n                name='name'\r\n                label={\"Campaign Name\"}\r\n                placeholder='Campaign Name'\r\n                control={control}\r\n                rules={{\r\n                  required: {\r\n                    value: true,\r\n                    message: \"Campaign name is required\",\r\n                  },\r\n                }}\r\n                invalid={errors.name ? true : false}\r\n                error={errors.name ? errors.name.message : \"\"}\r\n                inputStyle={{}}\r\n              />\r\n            </HStack>\r\n\r\n            <HStack\r\n              space={4}\r\n              style={{\r\n                width: sz === \"base\" || sz === \"sm\" ? \"94vw\" : vw(612),\r\n                justifyContent: \"space-between\",\r\n                // marginHorizontal: vw(20),\r\n                marginVertical: vh(20),\r\n              }}\r\n            >\r\n              <ShadowInput\r\n                name='description'\r\n                label={\"Campaign Description\"}\r\n                placeholder='Campaign Description'\r\n                control={control}\r\n                rules={{\r\n                  required: {\r\n                    value: true,\r\n                    message: \"Campaign Description is required\",\r\n                  },\r\n                }}\r\n                invalid={errors.description ? true : false}\r\n                error={errors.description ? errors.description.message : \"\"}\r\n                inputStyle={{}}\r\n              />\r\n            </HStack>\r\n\r\n            <HStack\r\n              space={4}\r\n              style={{\r\n                width: sz === \"base\" || sz === \"sm\" ? \"45.5vw\" : vw(300),\r\n                justifyContent: \"space-between\",\r\n                marginTop: vh(20),\r\n                marginBottom: vh(40),\r\n              }}\r\n            >\r\n              <ShadowSelect\r\n                control={control}\r\n                items={sendingModeOptions}\r\n                name='send_mode'\r\n                label='Attach Mode'\r\n                placeholder='Select attach mode'\r\n                invalid={errors.name ? true : false}\r\n                error={errors.name ? errors.name.message : \"\"}\r\n                rules={{\r\n                  required: {\r\n                    value: true,\r\n                    message: \"Select attach mode\",\r\n                  },\r\n                }}\r\n              />\r\n              <ShadowSwitch\r\n                type='switch'\r\n                control={control}\r\n                isChanged={(v) => {\r\n                  setValue(\"default\", v);\r\n                  trigger(\"default\");\r\n                }}\r\n                id='default'\r\n                name='default'\r\n                label='Default campaign? '\r\n                isChecked={getValues(\"default\")}\r\n                // required\r\n                invalid={errors.default ? true : false}\r\n                error={errors.default ? errors.default.message : \"\"}\r\n                rules={{}}\r\n              />\r\n            </HStack>\r\n            {steps.map((item, idx) => {\r\n              return (\r\n                <VStack\r\n                  rounded={\"md\"}\r\n                  key={\"step\" + idx}\r\n                  style={{\r\n                    boxShadow: \"0px 3px 5px #0000001A\",\r\n                    backgroundColor: item.active === false ? \"#eeeeee\" : \"#fff\",\r\n                    marginVertical: vh(10),\r\n                    paddingHorizontal: vh(20),\r\n                    paddingVertical: vh(10),\r\n                    width: sz === \"base\" || sz === \"sm\" ? \"94vw\" : vw(612),\r\n                  }}\r\n                >\r\n                  <Pressable\r\n                    onPress={() => {\r\n                      makeStepActive(idx);\r\n                    }}\r\n                    style={{ marginBottom: item.active ? vh(10) : 0 }}\r\n                  >\r\n                    <HStack\r\n                      py={1}\r\n                      style={{\r\n                        borderBottomWidth: item.active ? vw(2) : 0,\r\n                        borderBottomColor: \"rgba(0,0,0, 0.15)\",\r\n                        justifyContent: \"space-between\",\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{\r\n                          marginLeft: 5,\r\n                          fontFamily: \"Poppins\",\r\n                          fontSize: 16,\r\n                          color: Colors.primary,\r\n                        }}\r\n                      >\r\n                        Step {idx + 1}\r\n                      </Text>\r\n\r\n                      <Center>\r\n                        <DropDownIcon />\r\n                      </Center>\r\n                    </HStack>\r\n                  </Pressable>\r\n                  {item.active === true && (\r\n                    <VStack marginBottom={steps.length === 1 ? vh(10) : 0}>\r\n                      <HStack\r\n                        space={4}\r\n                        style={{\r\n                          width:\r\n                            sz === \"base\" || sz === \"sm\" ? \"40vw\" : vw(280),\r\n                          justifyContent: \"space-between\",\r\n                          marginBottom: vh(10),\r\n                        }}\r\n                      >\r\n                        <ShadowSelect\r\n                          control={control}\r\n                          items={postcardTemplates}\r\n                          name='postcardtemplate'\r\n                          id='postcardtemplate'\r\n                          label='Send mail with template'\r\n                          placeholder='Select mail template'\r\n                          onChange={(v) => {\r\n                            setValue(\"postcardtemplate\", v);\r\n                            trigger(\"postcardtemplate\");\r\n                            // if (v === \"not-send\") {\r\n                            setValue(\"postcardrepeat\", false);\r\n                            trigger(\"postcardrepeat\");\r\n                            // }\r\n                            setStepChanged((c) => !c);\r\n                          }}\r\n                          invalid={errors.postcardtemplate ? true : false}\r\n                          error={\r\n                            errors.postcardtemplate\r\n                              ? errors.postcardtemplate.message\r\n                              : \"\"\r\n                          }\r\n                          rules={{\r\n                            required: {\r\n                              value: true,\r\n                              message: \"Please select a mail template\",\r\n                            },\r\n                          }}\r\n                        />\r\n                        <ShadowSwitch\r\n                          isDisabled={\r\n                            item.postcardtemplate === \"not-send\" ||\r\n                            getValues(\"send_mode\") === \"Attach Manually\"\r\n                              ? true\r\n                              : false\r\n                          }\r\n                          control={control}\r\n                          isChanged={(v) => {\r\n                            setValue(\"postcardrepeat\", v);\r\n                            trigger(\"postcardrepeat\");\r\n                            setStepChanged(true);\r\n                          }}\r\n                          id='postcardrepeat'\r\n                          name='postcardrepeat'\r\n                          label='Repeat mail Sending? '\r\n                          isChecked={item.postcardrepeat}\r\n                          // required\r\n                          invalid={errors.postcardrepeat ? true : false}\r\n                          error={\r\n                            errors.postcardrepeat\r\n                              ? errors.postcardrepeat.message\r\n                              : \"\"\r\n                          }\r\n                          rules={{}}\r\n                        />\r\n                      </HStack>\r\n                      {item.postcardrepeat === true && (\r\n                        <HStack\r\n                          space={4}\r\n                          style={{\r\n                            width:\r\n                              sz === \"base\" || sz === \"sm\" ? \"40vw\" : vw(280),\r\n                            justifyContent: \"space-between\",\r\n                            marginVertical: vh(10),\r\n                          }}\r\n                        >\r\n                          <ShadowInput\r\n                            suffix='Day(s)'\r\n                            control={control}\r\n                            id='postcardevery'\r\n                            name='postcardevery'\r\n                            label={\r\n                              sz === \"base\" || sz === \"sm\"\r\n                                ? \"Repeat sending\"\r\n                                : \"Repeat sending every (in days)\"\r\n                            }\r\n                            placeholder='21'\r\n                            maxLength={3}\r\n                            // defaultValue={\r\n                            //   item.postcardevery\r\n                            //     ? item.postcardevery.toString()\r\n                            //     : \"0\"\r\n                            // }\r\n                            onChangeText={(v) => {\r\n                              // setValue(\"postcardevery\", v);\r\n                              // trigger(\"postcardevery\");\r\n                              setStepChanged(true);\r\n                            }}\r\n                            invalid={errors.postcardevery ? true : false}\r\n                            error={\r\n                              errors.postcardevery\r\n                                ? errors.postcardevery.message\r\n                                : \"\"\r\n                            }\r\n                            rules={{\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Mail repeat period is required\",\r\n                              },\r\n                            }}\r\n                          />\r\n\r\n                          <ShadowInput\r\n                            control={control}\r\n                            id='postcards'\r\n                            name='postcards'\r\n                            label='Mails to send (in nos.) '\r\n                            placeholder='8'\r\n                            maxLength={4}\r\n                            required\r\n                            // defaultValue={\r\n                            //   item.postcards ? item.postcards.toString() : \"0\"\r\n                            // }\r\n                            onChangeText={(v) => {\r\n                              // setValue(\"postcards\", v);\r\n                              // trigger(\"postcards\");\r\n                              setStepChanged(true);\r\n                            }}\r\n                            invalid={errors.postcards ? true : false}\r\n                            error={\r\n                              errors.postcards ? errors.postcards.message : \"\"\r\n                            }\r\n                            rules={{\r\n                              required: {\r\n                                value: true,\r\n                                message: \"Mails to send is required\",\r\n                              },\r\n                            }}\r\n                          />\r\n                        </HStack>\r\n                      )}\r\n                      <HStack\r\n                        space={4}\r\n                        style={{\r\n                          width:\r\n                            sz === \"base\" || sz === \"sm\" ? \"40vw\" : vw(280),\r\n                          justifyContent: \"space-between\",\r\n                          marginTop: vh(20),\r\n                          marginBottom: vh(10),\r\n                        }}\r\n                      >\r\n                        <ShadowSelect\r\n                          control={control}\r\n                          items={emailTemplates}\r\n                          name='emailtemplate'\r\n                          id='emailtemplate'\r\n                          label={\r\n                            sz === \"base\" || sz === \"sm\"\r\n                              ? \"Send template\"\r\n                              : \"Send e-mail with template\"\r\n                          }\r\n                          placeholder='Select e-mail template'\r\n                          onChange={(v) => {\r\n                            setValue(\"emailtemplate\", v);\r\n                            trigger(\"emailtemplate\");\r\n                            // if (v === \"not-send\") {\r\n                            setValue(\"emailrepeat\", false);\r\n                            trigger(\"emailrepeat\");\r\n                            // }\r\n                            setStepChanged((c) => !c);\r\n                          }}\r\n                          invalid={errors.emailtemplate ? true : false}\r\n                          error={\r\n                            errors.emailtemplate\r\n                              ? errors.emailtemplate.message\r\n                              : \"\"\r\n                          }\r\n                          rules={{\r\n                            required: {\r\n                              value: true,\r\n                              message: \"Select an email template\",\r\n                            },\r\n                          }}\r\n                        />\r\n\r\n                        <ShadowSwitch\r\n                          isDisabled={\r\n                            item.emailtemplate === \"not-send\" ? true : false\r\n                          }\r\n                          control={control}\r\n                          isChanged={(v) => {\r\n                            setValue(\"emailrepeat\", v);\r\n                            trigger(\"emailrepeat\");\r\n                            setStepChanged(true);\r\n                          }}\r\n                          id='emailrepeat'\r\n                          name='emailrepeat'\r\n                          label='Repeat e-mail sending? '\r\n                          isChecked={item.emailrepeat}\r\n                          // required\r\n                          invalid={errors.emailrepeat ? true : false}\r\n                          error={\r\n                            errors.emailrepeat ? errors.emailrepeat.message : \"\"\r\n                          }\r\n                          rules={{}}\r\n                        />\r\n                      </HStack>\r\n                      {item.emailrepeat === true &&\r\n                        item.emailtemplate !== \"not-send\" && (\r\n                          <HStack\r\n                            space={4}\r\n                            style={{\r\n                              width:\r\n                                sz === \"base\" || sz === \"sm\" ? \"40vw\" : vw(280),\r\n                              justifyContent: \"space-between\",\r\n                              marginTop: vh(10),\r\n                              marginBottom: vh(20),\r\n                            }}\r\n                          >\r\n                            <ShadowInput\r\n                              suffix='Day(s)'\r\n                              control={control}\r\n                              id='emailevery'\r\n                              name='emailevery'\r\n                              label={\r\n                                sz === \"base\" || sz === \"sm\"\r\n                                  ? \"Repeat sending\"\r\n                                  : \"Repeat sending every (in days)\"\r\n                              }\r\n                              placeholder='21'\r\n                              maxLength={3}\r\n                              required\r\n                              // defaultValue={item.emailevery.toString()}\r\n                              onChangeText={(v) => {\r\n                                // console.log(v)\r\n                                // setValue(\"emailevery\", v);\r\n                                // trigger(\"emailevery\");\r\n                                setStepChanged(true);\r\n                              }}\r\n                              invalid={errors.emailevery ? true : false}\r\n                              error={\r\n                                errors.emailevery\r\n                                  ? errors.emailevery.message\r\n                                  : \"\"\r\n                              }\r\n                              // help=\"Enter days\"\r\n                              rules={{\r\n                                required: {\r\n                                  value: true,\r\n                                  message:\r\n                                    \"Repeat email every period is required\",\r\n                                },\r\n                              }}\r\n                            />\r\n\r\n                            <Hidden from='md'>\r\n                              <ShadowInput\r\n                                suffix='Nos(s)'\r\n                                control={control}\r\n                                id='emails'\r\n                                name='emails'\r\n                                label='Emails to send (in nos.)'\r\n                                placeholder='8'\r\n                                maxLength={4}\r\n                                // defaultValue={item.emails.toString()}\r\n                                onChangeText={(v) => {\r\n                                  // setValue(\"emails\", v);\r\n                                  // trigger(\"emails\");\r\n                                  setStepChanged(true);\r\n                                }}\r\n                                invalid={errors.emails ? true : false}\r\n                                error={\r\n                                  errors.emails ? errors.emails.message : \"\"\r\n                                }\r\n                                rules={{\r\n                                  required: {\r\n                                    value: true,\r\n                                    message: \"Email to send is required\",\r\n                                  },\r\n                                }}\r\n                              />\r\n                            </Hidden>\r\n                            <Hidden only={[\"base\", \"sm\"]}>\r\n                              <HStack space={2}>\r\n                                <ShadowInput\r\n                                  style={{ width: \"34%\" }}\r\n                                  suffix='Nos(s)'\r\n                                  control={control}\r\n                                  id='emails'\r\n                                  name='emails'\r\n                                  label='Emails to send (nos.)'\r\n                                  placeholder='8'\r\n                                  maxLength={4}\r\n                                  // defaultValue={item.emails.toString()}\r\n                                  onChangeText={(v) => {\r\n                                    // setValue(\"emails\", v);\r\n                                    // trigger(\"emails\");\r\n                                    setStepChanged(true);\r\n                                  }}\r\n                                  invalid={errors.emails ? true : false}\r\n                                  error={\r\n                                    errors.emails ? errors.emails.message : \"\"\r\n                                  }\r\n                                  rules={{\r\n                                    required: {\r\n                                      value: true,\r\n                                      message: \"Email to send is required\",\r\n                                    },\r\n                                  }}\r\n                                />\r\n\r\n                                {/* <ShadowSelect\r\n                                  style={{ width: \"24%\" }}\r\n                                  sameline\r\n                                  suffix=' '\r\n                                  control={control}\r\n                                  type='select'\r\n                                  items={sendTime}\r\n                                  name='sendtime'\r\n                                  id='sendtime'\r\n                                  label='Send Time'\r\n                                  placeholder='Select send time'\r\n                                  onChange={(v) => {\r\n                                    setStepChanged(true);\r\n                                  }}\r\n                                  invalid={errors.sendtime ? true : false}\r\n                                  error={\r\n                                    errors.sendtime\r\n                                      ? errors.sendtime.message\r\n                                      : \"\"\r\n                                  }\r\n                                  rules={{\r\n                                    required: {\r\n                                      value: true,\r\n                                      message: \"Select send time\",\r\n                                    },\r\n                                  }}\r\n                                /> */}\r\n                              </HStack>\r\n                            </Hidden>\r\n                          </HStack>\r\n                        )}\r\n                      <ShadowSelect\r\n                        style={{ width: \"24%\", marginTop:10, marginBottom: 20 }}\r\n                        sameline\r\n                        suffix=' '\r\n                        control={control}\r\n                        type='select'\r\n                        items={sendTime}\r\n                        name='sendtime'\r\n                        id='sendtime'\r\n                        label='Send Time'\r\n                        placeholder='Select send time'\r\n                        onChange={(v) => {\r\n                          setStepChanged(true);\r\n                        }}\r\n                        invalid={errors.sendtime ? true : false}\r\n                        error={errors.sendtime ? errors.sendtime.message : \"\"}\r\n                        rules={{\r\n                          required: {\r\n                            value: true,\r\n                            message: \"Select send time\",\r\n                          },\r\n                        }}\r\n                      />\r\n                    </VStack>\r\n                  )}\r\n                  {steps.length > 1 && item.active && (\r\n                    <Center\r\n                      style={{\r\n                        alignItems: \"flex-end\",\r\n                        paddingVertical: 10,\r\n                        paddingRight: 25,\r\n                      }}\r\n                    >\r\n                      <Text\r\n                        style={{ color: \"red\", fontSize: 10 }}\r\n                        onPress={() => {\r\n                          setAlertConfig({\r\n                            header: \"Delete?\",\r\n                            desc: \"Are you sure you want to delete this Step?\",\r\n                            nolabel: \"No\",\r\n                            yeslabel: \"Yes\",\r\n                            yes: deleteStep,\r\n                            no: onClose,\r\n                          });\r\n                          setIsAlertOpen(true);\r\n                        }}\r\n                      >\r\n                        Remove Step\r\n                      </Text>\r\n                    </Center>\r\n                  )}\r\n                </VStack>\r\n              );\r\n            })}\r\n          </VStack>\r\n        </ShadowModal>\r\n        <ShadowModal\r\n          size='md'\r\n          isOpen={isAlertOpen}\r\n          close={onAlertClose}\r\n          header={alertConfig.header}\r\n          buttons={\r\n            <HStack space={2}>\r\n              <ShadowButton\r\n                space={3}\r\n                variant='outline'\r\n                label={alertConfig.nolabel}\r\n                onPress={alertConfig.no}\r\n                ref={cancelRef}\r\n              />\r\n\r\n              {alertConfig.yeslabel && (\r\n                <ShadowButton\r\n                  space={3}\r\n                  // isLoading={isDeleting}\r\n                  label={alertConfig.yeslabel}\r\n                  onPress={alertConfig.yes}\r\n                />\r\n              )}\r\n            </HStack>\r\n          }\r\n        >\r\n          <Text\r\n            style={{\r\n              fontFamily: \"Poppins\",\r\n              fontSize: vw(13),\r\n              color: \"rgba(0,0,0,0.8)\",\r\n            }}\r\n          >\r\n            {alertConfig.desc}\r\n          </Text>\r\n        </ShadowModal>\r\n      </VStack>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddCampaign;\r\n","/**\r\n *\r\n * Templates List Screen\r\n * Author:Justin Antony\r\n * last modified on 04/nov/2021\r\n *\r\n */\r\nimport React, { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  Text,\r\n  FlatList,\r\n  Center,\r\n  useToast,\r\n  Spinner,\r\n  HStack,\r\n  Pressable,\r\n  VStack,\r\n  Hidden,\r\n  useBreakpointValue,\r\n} from \"native-base\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { vw, vh } from \"../../../util\";\r\nimport Colors from \"../../../constants/Colors\";\r\nimport * as campaignActions from \"../../../store/actions/campaigns\";\r\nimport * as templateActions from \"../../../store/actions/templates\";\r\nimport VerticalItem from \"./VerticalItem\";\r\nimport NavBar from \"../home/NavBar\";\r\nimport AddCampaign from \"./AddCampaign\";\r\nimport * as events from \"../../../store/events\";\r\nimport ShadowPagination from \"../../../components/ShadowPagination\";\r\nimport ShadowButton from \"../../../components/ShadowButton\";\r\nimport ShadowModal from \"../../../components/ShadowModal\";\r\n\r\nconst PageHeader = ({\r\n  listStyle,\r\n  setListStyle,\r\n  navigate,\r\n  setIsOpen,\r\n  dispatch,\r\n  _showAlert,\r\n  templates,\r\n}) => {\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n  return (\r\n    <VStack\r\n      style={{\r\n        marginHorizontal: vw(20),\r\n        borderBottomColor: \"rgba(0,0,0,0.15)\",\r\n        borderBottomWidth: 1,\r\n        marginTop: vh(-10),\r\n      }}\r\n    >\r\n      <HStack justifyContent={\"space-between\"}>\r\n        <Text\r\n          style={{\r\n            fontSize: vw(24),\r\n            paddingTop: vh(30),\r\n            width: vw(300),\r\n            color: \"#303030\",\r\n            fontFamily: \"Poppins_medium\",\r\n            justifyContent: \"flex-start\",\r\n          }}\r\n        >\r\n          {\"Campaigns\"}\r\n        </Text>\r\n        <Hidden only={[\"sm\", \"base\"]}>\r\n          <HStack alignSelf={\"center\"}>\r\n            <Pressable\r\n              onPress={() => {\r\n                navigate(\"/campaigns\");\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  fontSize: vw(15),\r\n                  paddingTop: vh(40),\r\n                  paddingHorizontal: 10,\r\n                  color: Colors.primary,\r\n                  fontFamily: \"Poppins_medium\",\r\n                  marginHorizontal: vw(25),\r\n                  paddingBottom: vh(13),\r\n                  borderBottomWidth: vh(4),\r\n                  borderBottomColor: \"rgba(125, 43, 233, 1)\",\r\n                }}\r\n              >\r\n                Campaigns\r\n              </Text>\r\n            </Pressable>\r\n            <Pressable\r\n              onPress={() => {\r\n                navigate(\"/templates\");\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  fontSize: vw(15),\r\n                  paddingTop: vh(40),\r\n                  paddingHorizontal: 10,\r\n                  color: \"#303030\",\r\n                  fontFamily: \"Poppins_medium\",\r\n                  marginHorizontal: vw(25),\r\n                  paddingBottom: vh(13),\r\n                  borderBottomWidth: vh(0),\r\n                  borderBottomColor: \"rgba(125, 43, 233, 1)\",\r\n                }}\r\n              >\r\n                Templates\r\n              </Text>\r\n            </Pressable>\r\n            <Pressable\r\n              onPress={() => {\r\n                navigate(\"/signatures\");\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  fontSize: vw(15),\r\n                  paddingTop: vh(40),\r\n                  paddingHorizontal: 10,\r\n                  color: \"#303030\",\r\n                  fontFamily: \"Poppins_medium\",\r\n                  marginHorizontal: vw(25),\r\n                  paddingBottom: vh(13),\r\n                  borderBottomWidth: vh(0),\r\n                  borderBottomColor: \"rgba(125, 43, 233, 1)\",\r\n                }}\r\n              >\r\n                Signatures\r\n              </Text>\r\n            </Pressable>\r\n          </HStack>\r\n        </Hidden>\r\n        <HStack\r\n          style={{ marginTop: vh(20), width: vw(300) }}\r\n          alignItems={\"center\"}\r\n          justifyContent={\"flex-end\"}\r\n          space={2}\r\n        >\r\n          <ShadowButton\r\n            onPress={async () => {\r\n              if (templates && templates.length === 0) {\r\n                setIsAlertOpen(true);\r\n              } else {\r\n                try {\r\n                  await dispatch({\r\n                    type: events.SET_CURRENT_CAMPAIGN,\r\n                    data: null,\r\n                  });\r\n                  setIsOpen(true);\r\n                } catch (err) {\r\n                  _showAlert(\"error\", err.message);\r\n                }\r\n              }\r\n            }}\r\n            label={\"+ Create\"}\r\n            style={{ height: vh(36) }}\r\n          />\r\n        </HStack>\r\n      </HStack>\r\n      <Hidden from='md'>\r\n        <HStack alignSelf={\"center\"}>\r\n          <Pressable\r\n            onPress={() => {\r\n              navigate(\"/campaigns\");\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontSize: vw(15),\r\n                paddingTop: vh(20),\r\n                paddingHorizontal: 10,\r\n                color: Colors.primary,\r\n                fontFamily: \"Poppins_medium\",\r\n                marginHorizontal: vw(10),\r\n                paddingBottom: vh(13),\r\n                borderBottomWidth: vh(4),\r\n                borderBottomColor: \"rgba(125, 43, 233, 1)\",\r\n              }}\r\n            >\r\n              Campaigns\r\n            </Text>\r\n          </Pressable>\r\n          <Pressable\r\n            onPress={() => {\r\n              navigate(\"/templates\");\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontSize: vw(15),\r\n                paddingTop: vh(20),\r\n                paddingHorizontal: 10,\r\n                color: \"#303030\",\r\n                fontFamily: \"Poppins_medium\",\r\n                marginHorizontal: vw(10),\r\n                paddingBottom: vh(13),\r\n                borderBottomWidth: vh(0),\r\n                borderBottomColor: \"rgba(125, 43, 233, 1)\",\r\n              }}\r\n            >\r\n              Templates\r\n            </Text>\r\n          </Pressable>\r\n          <Pressable\r\n            onPress={() => {\r\n              navigate(\"/signatures\");\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontSize: vw(15),\r\n                paddingTop: vh(20),\r\n                paddingHorizontal: 10,\r\n                color: \"#303030\",\r\n                fontFamily: \"Poppins_medium\",\r\n                marginHorizontal: vw(10),\r\n                paddingBottom: vh(13),\r\n                borderBottomWidth: vh(0),\r\n                borderBottomColor: \"rgba(125, 43, 233, 1)\",\r\n              }}\r\n            >\r\n              Signatures\r\n            </Text>\r\n          </Pressable>\r\n        </HStack>\r\n      </Hidden>\r\n      <ShadowModal\r\n        size='md'\r\n        isOpen={isAlertOpen}\r\n        header={\"Attention!\"}\r\n        close={() => {\r\n          setIsAlertOpen(false);\r\n        }}\r\n        buttons={\r\n          <HStack space={2}>\r\n            <ShadowButton\r\n              space={2}\r\n              onPress={() => {\r\n                setIsAlertOpen(false);\r\n              }}\r\n              label='Cancel'\r\n              variant='outline'\r\n              color={Colors.primary}\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n            <ShadowButton\r\n              space={2}\r\n              onPress={() => {\r\n                navigate(\"/templates\");\r\n              }}\r\n              label='Add Template'\r\n              style={{\r\n                height: vh(36),\r\n              }}\r\n            />\r\n          </HStack>\r\n        }\r\n      >\r\n        <Text\r\n          style={{\r\n            fontFamily: \"Poppins\",\r\n            fontSize: vw(15),\r\n            color: \"rgba(0,0,0,0.8)\",\r\n          }}\r\n        >\r\n          You need a template to add a campaign\r\n        </Text>\r\n      </ShadowModal>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nconst Index = ({ user, setLogout }) => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const sz = useBreakpointValue({\r\n    base: \"base\",\r\n    sm: \"sm\",\r\n    lg: \"lg\",\r\n    md: \"md\",\r\n    xl: \"xl\",\r\n  });\r\n  const toast = useToast();\r\n  const [limit, setLimit] = useState(50);\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  // const onClose = () => setIsOpen(false);\r\n  const [listStyle, setListStyle] = useState(\"vertical\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isRefreshing, setIsRefreshing] = useState(false);\r\n  const [setShowPreview] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const { userCampaigns: campaigns, total } = useSelector(\r\n    (state) => state.campaigns\r\n  );\r\n  const templates = useSelector((state) => state.templates.userTemplates);\r\n\r\n  const _showAlert = useCallback(\r\n    (status, msg) => {\r\n      toast.closeAll();\r\n      toast.show({\r\n        placement: \"top\",\r\n        duration: 1000,\r\n        render: () => {\r\n          let bg = \"red.300\";\r\n          if (status === \"error\") {\r\n            bg = \"red.300\";\r\n          } else if (status === \"success\") {\r\n            bg = \"green.300\";\r\n          } else if (status === \"info\") {\r\n            bg = \"blueGray.300\";\r\n          } else if (status === \"warning\") {\r\n            bg = \"orange.300\";\r\n          }\r\n          return (\r\n            <Text\r\n              style={{\r\n                fontSize: vw(12),\r\n                fontFamily: \"Poppins_medium\",\r\n                color: \"#33214B\",\r\n              }}\r\n              p={2}\r\n              bg={bg}\r\n              rounded={\"full\"}\r\n            >\r\n              {msg}\r\n            </Text>\r\n          );\r\n        },\r\n      });\r\n    },\r\n    [toast]\r\n  );\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await dispatch(templateActions.fetchTemplates(1, 1000));\r\n    })();\r\n  }, [dispatch]);\r\n\r\n  const loadCampaigns = useCallback(async () => {\r\n    setIsRefreshing(true);\r\n    try {\r\n      await dispatch(campaignActions.fetchCampaigns(page, limit));\r\n    } catch (err) {\r\n      _showAlert(\"error\", err.message);\r\n    }\r\n    setIsRefreshing(false);\r\n  }, [dispatch, _showAlert, page, limit]);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    loadCampaigns().then(() => {\r\n      setIsLoading(false);\r\n    });\r\n    return () => {\r\n      setIsLoading(false);\r\n      setIsRefreshing(false);\r\n    };\r\n  }, [dispatch, loadCampaigns, page]);\r\n\r\n  const NoItemsFound = () => {\r\n    return (\r\n      <Center mt={250} flex={1}>\r\n        <Text>No items found.</Text>\r\n      </Center>\r\n    );\r\n  };\r\n\r\n  const ph = 100 - parseFloat(vh(70)) + \"vh\";\r\n\r\n  const cardwidth = 250;\r\n  let cols = Math.floor(window.screen.width / cardwidth);\r\n  if (cols === 0) {\r\n    cols = 1;\r\n  }\r\n\r\n  return (\r\n    <VStack style={{ minHeight: \"100vh\" }} bg={\"white\"} flex={1}>\r\n      <NavBar user={user} setLogout={setLogout} />\r\n      <VStack height={ph}>\r\n        <PageHeader\r\n          templates={templates}\r\n          navigate={navigate}\r\n          setListStyle={setListStyle}\r\n          listStyle={listStyle}\r\n          setIsOpen={setIsOpen}\r\n          dispatch={dispatch}\r\n          _showAlert={_showAlert}\r\n        />\r\n        {isLoading ? (\r\n          <Center flex={1}>\r\n            <Spinner size={\"small\"} color={Colors.primary} />\r\n          </Center>\r\n        ) : (\r\n          <>\r\n            {cols === 1 ? (\r\n              <FlatList\r\n                key={\"list-\" + cols}\r\n                style={{\r\n                  marginLeft: sz === \"base\" || sz === \"sm\" ? vw(-10) : 0,\r\n                }}\r\n                contentContainerStyle={{ paddingBottom: 20 }}\r\n                ListEmptyComponent={<NoItemsFound />}\r\n                refreshing={isRefreshing}\r\n                removeClippedSubviews={true}\r\n                data={campaigns}\r\n                keyExtractor={(item) => item._id}\r\n                renderItem={({ item }) => {\r\n                  return (\r\n                    <VerticalItem\r\n                      cols={cols}\r\n                      item={item}\r\n                      setIsOpen={setIsOpen}\r\n                      setShowPreview={setShowPreview}\r\n                    />\r\n                  );\r\n                }}\r\n                // columnWrapperStyle={{\r\n                //   justifyContent:\r\n                //     campaigns.length > 5 ? \"space-between\" : \"flex-start\",\r\n                // }}\r\n                // numColumns={5}\r\n              />\r\n            ) : (\r\n              <FlatList\r\n                key={\"list-\" + cols}\r\n                style={{\r\n                  marginLeft: sz === \"base\" || sz === \"sm\" ? vw(-10) : 0,\r\n                }}\r\n                contentContainerStyle={{ paddingBottom: 20 }}\r\n                ListEmptyComponent={<NoItemsFound />}\r\n                refreshing={isRefreshing}\r\n                removeClippedSubviews={true}\r\n                data={campaigns}\r\n                keyExtractor={(item) => item._id}\r\n                renderItem={({ item }) => {\r\n                  return (\r\n                    <VerticalItem\r\n                      cols={cols}\r\n                      item={item}\r\n                      setIsOpen={setIsOpen}\r\n                      setShowPreview={setShowPreview}\r\n                    />\r\n                  );\r\n                }}\r\n                columnWrapperStyle={{\r\n                  justifyContent:\r\n                    campaigns.length > 5 ? \"space-between\" : \"flex-start\",\r\n                }}\r\n                numColumns={5}\r\n              />\r\n            )}\r\n            {total > limit && (\r\n              <ShadowPagination\r\n                limit={limit}\r\n                total={total}\r\n                page={page}\r\n                setPage={setPage}\r\n                setIsLoading={setIsLoading}\r\n                setLimit={setLimit}\r\n              />\r\n            )}\r\n          </>\r\n        )}\r\n        {isOpen && (\r\n          <AddCampaign\r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n            templates={templates}\r\n          />\r\n        )}\r\n      </VStack>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","import { API_URL, getUser } from \"../../constants/Config\";\r\nimport * as events from \"../events\";\r\n\r\nexport const fetchTemplates = (page = 1, limit = 50) => {\r\n  return async (dispatch, getState) => {\r\n    const { team, token } = getUser();\r\n    const { userCampaigns } = getState().campaigns;\r\n\r\n    const ownerCampaign =\r\n      userCampaigns &&\r\n      userCampaigns.length > 0 &&\r\n      userCampaigns.find((t) => t.createdUser._id === team);\r\n\r\n    const body = {\r\n      skip: page === 1 ? 0 : (page - 1) * limit,\r\n      limit,\r\n    };\r\n    if (ownerCampaign) {\r\n      const templates = [];\r\n      ownerCampaign &&\r\n        ownerCampaign.steps &&\r\n        ownerCampaign.steps.map((s) => {\r\n          if (s.emailtemplate) {\r\n            templates.push(s.emailtemplate);\r\n          }\r\n          if (s.postcardtemplate) {\r\n            templates.push(s.postcardtemplate);\r\n          }\r\n          return s;\r\n        });\r\n\r\n      if (templates.length > 0) {\r\n        body[\"filter\"] = { templates };\r\n      }\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`${API_URL}/templates/get`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n        body: JSON.stringify(body),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorResData = await response.json();\r\n        console.log(errorResData);\r\n        // throw new Error(\"Something went wrong!\");\r\n      }\r\n\r\n      const resData = await response.json();\r\n\r\n      dispatch({\r\n        type: events.SET_TEMPLATES,\r\n        data: resData.data ? resData.data : [],\r\n        total: resData.count ? resData.count : 0\r\n      });\r\n    } catch (err) {\r\n      // send to custom analytics server\r\n      console.log(\"Error \", err);\r\n      throw err;\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteTemplate = (_id) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const { token } = getUser();\r\n      let templates = getState().templates.userTemplates;\r\n      const response = await fetch(`${API_URL}/templates/${_id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n        body: JSON.stringify({ active: false }),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n      const resData = await response.json();\r\n      if (resData.data) {\r\n        if (templates && templates.length > 0) {\r\n          templates = templates.filter((f) => f._id !== resData.data._id);\r\n        }\r\n        await dispatch({\r\n          type: events.SET_TEMPLATES,\r\n          data: templates,\r\n        });\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    } catch (err) {\r\n      console.log(err);\r\n      throw new Error(err.message);\r\n    }\r\n  };\r\n};\r\n\r\nexport const saveTemplate = (data) => {\r\n  return async (dispatch, getState) => {\r\n    // any async code you want!\r\n    const { token } = getUser();\r\n    let templates = getState().templates.userTemplates;\r\n    const { _id } = data;\r\n    let url = `${API_URL}/templates/add`;\r\n    let method = \"POST\";\r\n    if (_id) {\r\n      url = `${API_URL}/templates/${_id}`;\r\n      delete data._id;\r\n      method = \"PATCH\";\r\n    }\r\n    try {\r\n      const response = await fetch(url, {\r\n        method,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorRes = await response.json();\r\n        let message = \"Something went wrong!\";\r\n        if (errorRes && errorRes.error) {\r\n          message = errorRes.error;\r\n        }\r\n        throw new Error(message);\r\n      }\r\n\r\n      const resData = await response.json();\r\n\r\n      if (resData.data) {\r\n        if (_id) {\r\n          templates = templates.map((f) => {\r\n            if (f._id === resData.data._id) {\r\n              f = resData.data;\r\n            }\r\n            return f;\r\n          });\r\n        } else {\r\n          templates = [...templates, resData.data];\r\n        }\r\n\r\n        dispatch({\r\n          type: events.SET_TEMPLATES,\r\n          data: templates,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      throw new Error(err.message);\r\n    }\r\n  };\r\n};\r\n"],"names":["ShadowPagination","total","limit","setLimit","setPage","page","style","setIsLoading","view","pageCount","Math","ceil","MyPaginate","styled","ReactPaginate","attrs","activeClassName","vw","HStack","boxShadow","justifyContent","alignItems","height","vh","backgroundColor","paddingHorizontal","Text","fontFamily","fontSize","color","marginRight","Select","outlineColor","outlineStyle","borderWidth","variant","selectedValue","parseInt","width","onValueChange","v","dropdownIcon","DropDownIcon","label","value","marginLeft","breakLabel","nextLabel","onPageChange","p","selected","pageRangeDisplayed","marginPagesDisplayed","previousLabel","renderOnZeroPageCount","forcePage","React","props","isInvalid","invalid","control","rules","name","render","field","onChange","onBlur","onTrackColor","Colors","marginTop","size","onToggle","isChanged","colorScheme","error","primary","accent","VerticalItem","item","setIsOpen","dispatch","useDispatch","Pressable","onPress","type","events","data","VStack","marginHorizontal","marginVertical","borderRadius","description","send_mode","default","team","createdUser","_id","isOpen","templates","sz","useBreakpointValue","base","sm","lg","md","xl","navigate","useNavigate","toast","useToast","cancelRef","isAlertOpen","setIsAlertOpen","onClose","useCallback","onAlertClose","useState","header","desc","nolabel","yeslabel","yes","no","alertConfig","setAlertConfig","currentCampaign","useSelector","state","campaigns","steps","active","postcardtemplate","postcardrepeat","postcardevery","postcards","emailtemplate","emailrepeat","emailevery","emails","sendtime","setSteps","isLoading","isSaving","setIsSaving","stepChanged","setStepChanged","activeStep","find","s","useForm","mode","defaultValues","_","handleSubmit","errors","formState","getValues","setValue","trigger","sendMode","_showAlert","status","msg","show","placement","bg","rounded","saveHandler","templatesNotFound","filter","f","length","postdata","map","index","step","action","campaignActions","iseq","cc","redirect","console","log","message","useEffect","activeSteps","activeIndex","findIndex","toString","updateStep","deleteStep","availableSteps","currStep","deleteHandler","Center","flex","Button","margin","postcardTemplates","templatetype","emailTemplates","sendingModeOptions","sendTime","Array","keys","moment","startOf","add","format","Spinner","mb","ShadowModal","close","save","Object","footerStyle","buttons","space","ShadowButton","postcardTemplate","emailTemplate","concat","addNewStep","zoom","marginBottom","ShadowInput","placeholder","required","inputStyle","ShadowSelect","items","ShadowSwitch","id","isChecked","idx","paddingVertical","selectedIndex","allSteps","makeStepActive","py","borderBottomWidth","borderBottomColor","c","isDisabled","suffix","maxLength","onChangeText","Hidden","from","only","sameline","paddingRight","ref","PageHeader","listStyle","setListStyle","paddingTop","alignSelf","paddingBottom","user","setLogout","isRefreshing","setIsRefreshing","setShowPreview","userCampaigns","userTemplates","closeAll","duration","templateActions","loadCampaigns","then","NoItemsFound","mt","ph","parseFloat","cols","floor","window","screen","minHeight","NavBar","FlatList","contentContainerStyle","ListEmptyComponent","refreshing","removeClippedSubviews","keyExtractor","renderItem","columnWrapperStyle","numColumns","fetchTemplates","getState","getUser","token","ownerCampaign","t","body","skip","push","fetch","API_URL","method","headers","Authorization","JSON","stringify","response","ok","json","errorResData","resData","count","deleteTemplate","Error","saveTemplate","url","errorRes"],"sourceRoot":""}